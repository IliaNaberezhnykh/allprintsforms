Перем ДокОснование;
Перем КодЯзыка;
Перем Объединение;
Функция СведенияОВнешнейОбработке()Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ЗаказКлиента");
	МассивНазначений.Добавить("Документ.СчетНаОплатуКлиенту");
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг"); 
	МассивНазначений.Добавить("Документ.Отгрузка");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ОИР Счет на оплату"); 
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "2.0"); 
	ПараметрыРегистрации.Вставить("Информация", "ОИР Счет на оплату"); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ОИР Счет на оплату", "СчетНаОплату", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область СлужебныеПроцедурыИФункции
	
	
	#Область СчетНаОплату
	
	Функция Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЧЕТНАОПЛАТУ";
		
		НомерТипаДокумента = 0;
		
		УстановитьПривилегированныйРежим(Истина);
		
		Для Каждого СтруктураОбъектов Из МассивОбъектов Цикл
			Если НЕ ТипЗнч(СтруктураОбъектов.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СчетНаОплатуКлиенту.Ссылка КАК Ссылка
				|ИЗ
				|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
				|ГДЕ
				|	СчетНаОплатуКлиенту.ДокументОснование = &ДокументОснование";
				Запрос.УстановитьПараметр("ДокументОснование",СтруктураОбъектов.Ссылка);
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Докич = ВыборкаДетальныеЗаписи.Ссылка;	
					
					
					Если ДокОснование = "ДокументСсылка.СчетНаОплатуКлиенту" Тогда
						ТоварыРеализации = ""
					ИначеЕсли ТипЗнч(СтруктураОбъектов.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
						ТоварыРеализации = СтруктураОбъектов.Ссылка.Товары;
					Иначе
						ТоварыРеализации = ?(ТипЗнч(СтруктураОбъектов.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"), СтруктураОбъектов.Ссылка.Товары, СтруктураОбъектов.Ссылка.ДокументОснование.Товары);
					КонецЕсли;
					
					НомерТипаДокумента = НомерТипаДокумента + 1;
					Если НомерТипаДокумента > 1 Тогда
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Докич);     
					ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыСчетаНаОплату(ПараметрыВывода, Докич);
					
					ЗаполнитьТабличныйДокументСчетаНаОплату(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати ,ПараметрыВывода, ТоварыРеализации);
					
					Если КоллекцияПечатныхФорм.Количество() > 0 Тогда 
						КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабличныйДокумент;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если ДокОснование = "ДокументСсылка.СчетНаОплатуКлиенту" Тогда
					ТоварыРеализации = ""
				Иначе
					ТоварыРеализации = ?(ТипЗнч(СтруктураОбъектов.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"), СтруктураОбъектов.Ссылка.Товары, СтруктураОбъектов.Ссылка.ДокументОснование.Товары);
				КонецЕсли;
				
				НомерТипаДокумента = НомерТипаДокумента + 1;
				Если НомерТипаДокумента > 1 Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СтруктураОбъектов.Ссылка);     
				ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыСчетаНаОплату(ПараметрыВывода, СтруктураОбъектов.Ссылка);
				
				ЗаполнитьТабличныйДокументСчетаНаОплату(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати ,ПараметрыВывода, ТоварыРеализации);
				
				Если КоллекцияПечатныхФорм.Количество() > 0 Тогда 
					КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабличныйДокумент;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	Процедура ЗаполнитьРеквизитыШапкиСчетаНаОплату(ДанныеПечати, Макет, ТабличныйДокумент, ТаблицаЭтапыОплаты, ТаблицаТовары)
		
		ДокОснование = ?(ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),
		ДанныеПечати.Ссылка, ДанныеПечати.Ссылка.ДокументОснование);
		//Если ТипЗнч(ДокОснование) <> Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
		ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		ДокЯз.Прочитать();
		Язычник = ДокЯз[0].Язык;
		Если Язычник = Перечисления.Языки.Русский Тогда
			Макет = ПолучитьМакет("ПФ_MXL_СчетНаОплату2");    
			КодЯзыка = "ru";
		КонецЕсли; 
		Если Язычник = Перечисления.Языки.Английский Тогда 
			Макет = ПолучитьМакет("ПФ_MXL_СчетНаОплатуEN");    
			КодЯзыка = "en";
		КонецЕсли;
		Если Язычник = Перечисления.Языки.Арабский Тогда 
			Макет = ПолучитьМакет ("ПФ_MXL_СчетНаОплатуAR");    
			КодЯзыка = "ar";
		КонецЕсли; 
		Если Язычник = Перечисления.Языки.Турецкий Тогда 
			Макет = ПолучитьМакет ("ПФ_MXL_СчетНаОплатуTUR");    
			КодЯзыка = "Tr";
		КонецЕсли;
		//Иначе
		//	Макет = ПолучитьМакет("ПФ_MXL_СчетНаОплату2");    
		//	КодЯзыка = "ru";
		//КонецЕсли;
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьМакета, "ЗаголовокСчета", ДанныеПечати.Организация);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		Если ТаблицаЭтапыОплаты.Количество() = 0 Тогда
			ДатаПлатежа = '00010101';
		ИначеЕсли ТаблицаЭтапыОплаты.Количество() = 1 Тогда 
			ДатаПлатежа = ТаблицаЭтапыОплаты[0].ДатаПлатежа;
		Иначе
			ДатаПлатежа = ТаблицаЭтапыОплаты[ТаблицаЭтапыОплаты.Количество()-1].ДатаПлатежа;
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
			СтруктураДанныхЗаголовок = Новый Структура;
			НадписьСрокДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Счет действителен до %1.'; en = 'The account is valid until %1.'; ar = 'الحساب صالح حتى %1.'; Tr = 'Hesap %1 tarihine kadar geçerlidir.'", КодЯзыка), Формат(ДатаПлатежа, "ДЛФ=D")) + " ";  
			СтруктураДанныхЗаголовок.Вставить("СрокДействия", НадписьСрокДействия);
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхЗаголовок);
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
				СтруктураДанныхЗаголовок = Новый Структура;
				НадписьСрокДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Счет действителен до %1.'; en = 'The account is valid until %1.'; ar = 'الحساب صالح حتى %1.'", КодЯзыка), Формат(ДатаПлатежа, "Л=ar_EG; ДЛФ=D")) + " ";  
				СтруктураДанныхЗаголовок.Вставить("СрокДействия", НадписьСрокДействия);
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхЗаголовок);
			КонецЕсли;
		КонецЕсли;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ДанныеПечати.ПлатежЗаРубеж Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияРеквизитыБанка");
			СтруктураДанныхШапки = Новый Структура;
			ПредставлениеПоставщикаДляПлатПоручения = "";
			
			Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
				СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", ДанныеПечати.НомерБанковскогоСчета);
				СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДанныеПечати.НаименованиеБанкаМеждународное);
				СтруктураДанныхШапки.Вставить("АдресБанкаПолучателяПредставление", ДанныеПечати.АдресБанка);
				СтруктураДанныхШапки.Вставить("СВИФТБанка", ДанныеПечати.СВИФТБанка);
				ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.БанковскийСчетТекстКорреспондента;
			КонецЕсли;
			
			Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
				ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
			КонецЕсли;
			СтруктураДанныхШапки.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если Не ПустаяСтрока(ДанныеПечати.НаименованиеБанкаДляРасчетовМеждународное) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияРеквизитыБанкаКорреспондента");
				
				СтруктураДанныхШапки.Очистить();
				СтруктураДанныхШапки.Вставить("БанкКорреспондентПолучателяПредставление",
				ДанныеПечати.НаименованиеБанкаДляРасчетовМеждународное + " " + ДанныеПечати.АдресБанкаДляРасчетов);
				СтруктураДанныхШапки.Вставить("СВИФТБанкаДляРасчетов", ДанныеПечати.СВИФТБанкаДляРасчетов);
				СтруктураДанныхШапки.Вставить("СчетБанкаДляРасчетовПредставление", ДанныеПечати.СчетВБанкеДляРасчетов);
				
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияНазначениеПлатежа");
			СтруктураДанныхШапки.Очистить();
			Если Не ЗначениеЗаполнено(ДанныеПечати.НазначениеПлатежа)
				И ТипЗнч(ДанныеПечати.Ссылка) <> Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
				Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.Договор) Тогда 			
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.Ссылка.Договор);
				Иначе 
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.Ссылка.Соглашение);
				КонецЕсли;
			Иначе
				
				Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.Договор) Тогда 			
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.Ссылка.Договор);
				Иначе 
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.Ссылка.ДокументОснование.Соглашение);
				КонецЕсли;
				
			КонецЕсли;
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		Иначе
			
			Если ДанныеПечати.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
				И ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияППСКодом");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияПП");
			КонецЕсли;
			
			СтруктураДанныхШапки = Новый Структура;
			СтруктураДанныхШапки.Вставить("ИНН", СведенияОПоставщике.ИНН);
			СтруктураДанныхШапки.Вставить("КПП",СведенияОПоставщике.КПП);
			ПредставлениеПоставщикаДляПлатПоручения = "";
			
			СтруктураДанныхШапки.Вставить("ИдентификаторПлатежа", ДанныеПечати.ИдентификаторПлатежа);
			
			Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
				
				Если ЗначениеЗаполнено(ДанныеПечати.БИКБанкаДляРасчетов) Тогда
					Банк		= ДанныеПечати.НаименованиеБанкаДляРасчетов;
					БИК         = ДанныеПечати.БИКБанкаДляРасчетов;
					КоррСчет    = ДанныеПечати.КоррСчетБанкаДляРасчетов;
					ГородБанка  = ДанныеПечати.ГородБанкаДляРасчетов;
					НомерСчета  = ДанныеПечати.КоррСчетБанка;
				Иначе
					Банк		= ДанныеПечати.НаименованиеБанка;
					БИК         = ДанныеПечати.БИКБанк;
					КоррСчет    = ДанныеПечати.КоррСчетБанка;
					ГородБанка  = ДанныеПечати.ГородБанка;
					НомерСчета  = ДанныеПечати.НомерБанковскогоСчета;
				КонецЕсли;
				Если КодЯзыка = "ru" Тогда
					СтруктураДанныхШапки.Вставить("БИКБанкаПолучателя", БИК);
					СтруктураДанныхШапки.Вставить("БанкПолучателя", Банк);
					СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", СокрЛП(Банк) + " " + ГородБанка);
					СтруктураДанныхШапки.Вставить("СчетБанкаПолучателя", КоррСчет);
					СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", КоррСчет);
					СтруктураДанныхШапки.Вставить("СчетПолучателяПредставление", НомерСчета);
					СтруктураДанныхШапки.Вставить("СчетПолучателя", НомерСчета);
					ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.БанковскийСчетТекстКорреспондента;
				Иначе 
					СтруктураДанныхШапки.Вставить("БИКБанкаПолучателя", БИК);
					СтруктураДанныхШапки.Вставить("БанкПолучателя", Банк);
					Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						Если ПустаяСтрока(ДокОснование.БанковскийСчетОрганизации.Банк.КороткоеИностранноеНаименование) Тогда   
							СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДокОснование.БанковскийСчетОрганизации.Банк.МеждународноеНаименование + " " + ДокОснование.БанковскийСчетОрганизации.Банк.ГородМеждународный);
						Иначе 
							СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДокОснование.БанковскийСчетОрганизации.Банк.КороткоеИностранноеНаименование + " " + ДокОснование.БанковскийСчетОрганизации.Банк.ГородМеждународный);
						КонецЕсли; 
					КонецЕсли;
					Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
						Если ПустаяСтрока(ДанныеПечати.Ссылка.БанковскийСчет.Банк.КороткоеИностранноеНаименование) Тогда   
							СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДанныеПечати.Ссылка.БанковскийСчет.Банк.МеждународноеНаименование + " " + ДанныеПечати.Ссылка.БанковскийСчет.Банк.ГородМеждународный);
						Иначе 
							СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДанныеПечати.Ссылка.БанковскийСчет.Банк.КороткоеИностранноеНаименование + " " + ДанныеПечати.Ссылка.БанковскийСчет.Банк.ГородМеждународный);						
						КонецЕсли;
					КонецЕсли;
					СтруктураДанныхШапки.Вставить("СчетБанкаПолучателя", КоррСчет);
					СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", КоррСчет);
					СтруктураДанныхШапки.Вставить("СчетПолучателяПредставление", НомерСчета);
					СтруктураДанныхШапки.Вставить("СчетПолучателя", НомерСчета);
					ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.БанковскийСчетТекстКорреспондента;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
				ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
			КонецЕсли;
			Если  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ЗаказКлиента;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту")  Тогда 
				Если ТИПЗНЧ(ДанныеПечати.Ссылка.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
					ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование.ЗаказКлиента;
				Иначе
					ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование;  					
				КонецЕсли;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка;
			Иначе
				ДокЗаказ = ДанныеПечати.Ссылка;
			КонецЕсли;	
			
			Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
				
				Если Не ЗначениеЗаполнено(ДокЗаказ)  Тогда
					Если КодЯзыка = "ru" Тогда
						СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по счету №"+Строка(ДанныеПечати.Номер)+" от "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
					КонецЕсли;
					Если КодЯзыка = "en" Тогда
						СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Payment by sale №"+Строка(ДанныеПечати.Номер)+" of "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
					КонецЕсли;
					Если КодЯзыка = "ar" Тогда
						СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "الدفع عن طريق البيع №"+Строка(ДанныеПечати.Номер)+" من "+Строка(Формат(ДанныеПечати.Дата,"Л=ar_EG; ДФ=dd.MM.yyyy")));
					КонецЕсли;
					Если КодЯзыка = "Tr" Тогда
						СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Satışla ödeme №"+Строка(ДанныеПечати.Номер)+" -den "+Строка(Формат(ДанныеПечати.Дата,"Л=tr_TR; ДФ=dd.MM.yyyy")));
					КонецЕсли;
					
				Иначе 
					Если  ТипЗнч(ДокЗаказ) = Тип("ДокументСсылка.ЗаказКлиента") и ДанныеПечати.Ссылка.ЧастичнаяОплата Тогда
						
						ПроцАванс = ПолучитьЗначениеДопРеквизита(ДокЗаказ, "Процент аванса");
						Если ПроцАванс <> Неопределено Тогда 
							НазначениеПлатежа =   "Аванс ("+Строка(ПроцАванс) +"%)  "+ДанныеПечати.Ссылка.Договор.Наименование;
							
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа",НазначениеПлатежа);
						КонецЕсли;
						
						
					ИначеЕсли   ТипЗнч(ДокЗаказ) =  Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
						
						Если КодЯзыка = "ru" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по реализации №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" от "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "en" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Payment for implementation №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" of "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "ar" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "الدفع للتنفيذ №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" من "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"Л=ar_EG; ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "Tr" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Uygulama için ödeme №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" -den "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"Л=tr_TR; ДФ=dd.MM.yyyy")));
						КонецЕсли; 
						
					ИначеЕсли   ТипЗнч(ДокЗаказ) =  Тип("ДокументСсылка.Отгрузка") Тогда
						
						Если КодЯзыка = "ru" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по отгрузке №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" от "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "en" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Payment upon shipment №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" of "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "ar" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "الدفع عند الشحن №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" من "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"Л=ar_EG; ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "Tr" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Gönderinin üzerine ödeme №"+Строка(ДанныеПечати.Ссылка.ДокументОснование.Номер)+" -den "+Строка(Формат(ДанныеПечати.Ссылка.ДокументОснование.Дата,"Л=tr_TR; ДФ=dd.MM.yyyy")));
						КонецЕсли;
						
					Иначе
						Если КодЯзыка = "ru" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по счету №"+Строка(ДанныеПечати.Номер)+" от "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
						Если КодЯзыка = "en" Тогда
							СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Payment by sale №"+Строка(ДанныеПечати.Номер)+" of "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли  ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				Если КодЯзыка = "ru" Тогда
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по реализации №"+Строка(ДанныеПечати.Номер)+" от "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
				КонецЕсли;
				Если КодЯзыка = "en" Тогда
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Payment for implementation №"+Строка(ДанныеПечати.Номер)+" of "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
				КонецЕсли;
				Если КодЯзыка = "ar" Тогда
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "الدفع للتنفيذ العدد"+Строка(ДанныеПечати.Номер)+" من "+Строка(Формат(ДанныеПечати.Дата,"Л=ar_EG; ДФ=dd.MM.yyyy")));
				КонецЕсли;
				Если КодЯзыка = "Tr" Тогда
					СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Uygulama için ödeme №"+Строка(ДанныеПечати.Номер)+" -den "+Строка(Формат(ДанныеПечати.Дата,"Л=tr_TR; ДФ=dd.MM.yyyy")));
				КонецЕсли;
				
			ИначеЕсли  ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
				
				СтруктураДанныхШапки.Вставить("НазначениеПлатежа", "Оплата по заказу клиента №"+Строка(ДанныеПечати.Номер)+" от "+Строка(Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy")));
				
			КонецЕсли;
			Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда          //ЫЫЫЫЫЫЫЫЫ
				СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.Ссылка.НазначениеПлатежа);
			КонецЕсли;
			
			СтруктураДанныхШапки.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
			
			Если ДанныеПечати.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
				И ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
				
				РеквизитыПлатежа = РеквизитыПлатежаQRКод(СтруктураДанныхШапки);
				РеквизитыПлатежа.СуммаЧислом = СуммаКОплатеПоСчету(ДанныеПечати, ТаблицаТовары);
				
				ВывестиQRКод(РеквизитыПлатежа, ДанныеПечати, ОбластьМакета);
				
			КонецЕсли;
			Если НЕ КодЯзыка = "ru" Тогда
				ОбластьМакета.Параметры.ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.Организация.НаименованиеМеждународное;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		СтруктураИмяДопКолонки = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов(); 
		ВыводитьКоды = ЗначениеЗаполнено(СтруктураИмяДопКолонки.ИмяКолонки);
		КолонкаКодов = СтруктураИмяДопКолонки.ИмяКолонки;
		
		Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
		ОбластьПервойКолонкиТоваров = Макет.Область("ПерваяКолонкаТовара");
		Если НЕ ВыводитьКоды Тогда
			ОбластьПервойКолонкиТоваров.ШиринаКолонки = ОбластьПервойКолонкиТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
			Макет.УдалитьОбласть(Макет.Область("КолонкаКодов"), Смещать);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru = 'Счет на оплату'; en = 'Payment invoice'; ar = 'فاتورة الدفع'; Tr = 'Ödeme faTrası'", КодЯзыка));
		СтруктураДанныхШапки = Новый Структура;
		Если НЕ КодЯзыка = "ru" Тогда
			ДанныеЗаголовка = Новый Структура;
			ДанныеЗаголовка.Вставить("Номер", ДанныеПечати.Номер);
			ДанныеЗаголовка.Вставить("от", Нстр("ru = 'от'; en = 'of'; Tr = '-den'", КодЯзыка));
			Если КодЯзыка = "ru" Тогда
				ДанныеЗаголовка.Вставить("Дата", ДанныеПечати.Дата);
			КонецЕсли;
			Если КодЯзыка = "en" Тогда
				ДанныеЗаголовка.Вставить("Дата", Формат(ДанныеПечати.Дата, "Л=en; ДФ=dd.MM.yyyy"));
			КонецЕсли;
			Если КодЯзыка = "ar" Тогда
				ДанныеЗаголовка.Вставить("Дата", Формат(ДанныеПечати.Дата, "Л=ar_EG; ДФ=dd.MM.yyyy"));
			КонецЕсли; 
			Если КодЯзыка = "Tr" Тогда
				ДанныеЗаголовка.Вставить("Дата", Формат(ДанныеПечати.Дата, "Л=tr_TR; ДФ=dd.MM.yyyy"));
			КонецЕсли;
			
			ДанныеЗаголовка.Вставить("Представление", НСтр("ru = 'Счет на оплату'; en = 'Payment invoice'; ar = 'فاتورة الدفع'; Tr = 'Ödeme faTrası'", КодЯзыка));
			
			//ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеЗаголовка, НСтр("ru = 'Счет на оплату'; en = 'Payment invoice'; ar = 'فاتورة الدفع'", КодЯзыка));
			СтруктураДанныхШапки = Новый Структура; 
			Если КодЯзыка = "en" Тогда
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","of");  
				Дата = Формат(ДанныеПечати.Дата, "Л=en; ДЛФ=DD");
				Позиция = Найти(ТекстЗаголовка,"of") + 2; 
				ЧислоСимвол = СтрДлина(ТекстЗаголовка) - Позиция; 
				ТекстЗаголовка=СтрЗаменить(ТекстЗаголовка,Прав(ТекстЗаголовка,ЧислоСимвол),Дата);
			КонецЕсли;
			Если КодЯзыка = "ar" Тогда
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","من");
				Дата = Формат(ДанныеПечати.Дата, "Л=ar; ДЛФ=DD");
				Позиция = Найти(ТекстЗаголовка,"من") + 2; 
				ЧислоСимвол = СтрДлина(ТекстЗаголовка) - Позиция; 
				ТекстЗаголовка=СтрЗаменить(ТекстЗаголовка,Прав(ТекстЗаголовка,ЧислоСимвол),Дата);		
			КонецЕсли; 
			Если КодЯзыка = "Tr" Тогда
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","-den");
				Дата = Формат(ДанныеПечати.Дата, "Л=tr; ДЛФ=DD");
				Позиция = Найти(ТекстЗаголовка,"-den") + 4; 
				ЧислоСимвол = СтрДлина(ТекстЗаголовка) - Позиция; 
				ТекстЗаголовка=СтрЗаменить(ТекстЗаголовка,Прав(ТекстЗаголовка,ЧислоСимвол),Дата);
			КонецЕсли; 
			СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);	
		КонецЕсли;
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		
		СтруктураДанныхПоставщик = Новый Структура;
		Если КодЯзыка = "ru" Тогда
			СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", 
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
		КонецЕсли;
		Если НЕ КодЯзыка = "ru" Тогда
			АдрисОрганизации = "";
			Для Каждого Стр Из ДокОснование.Организация.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
					АдрисОрганизации = Стр.Представление;
				КонецЕсли;
			КонецЦикла; 
			Телефончик = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),"Телефоны");
			СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", 
			ДанныеПечати.Организация.НаименованиеМеждународное + ", INN " + ДанныеПечати.Организация.ИНН + ", KPP " + ДанныеПечати.Организация.КПП + ", " + АдрисОрганизации + ", " + СтрЗаменить(Телефончик, "тел.:", "")
			);
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		//Покупатель
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		СтрЮрЛицо = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
		Если ЗначениеЗаполнено(ДанныеПечати.Контрагент.ГоловнойКонтрагент) Тогда 
			СтрЮрЛицо.КПП = ДанныеПечати.Контрагент.ГоловнойКонтрагент.КПП;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДокОснование.Договор.Контрагент.РегистрационныйНомер) И ЗначениеЗаполнено(ДокОснование.Договор.Контрагент.НалоговыйНомер) Тогда
			СтрЮрЛицо.Вставить("РегНомер", "рег. номер " + ДокОснование.Договор.Контрагент.РегистрационныйНомер);
			СтрЮрЛицо.Вставить("НалНомер",	"налоговый номер " + ДокОснование.Договор.Контрагент.НалоговыйНомер);
			СтруктураДанныхПокупатель = Новый Структура;
			Если КодЯзыка = "ru" Тогда
				СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", 
				ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,
				"ПолноеНаименование,ИНН,КПП,РегНомер,НалНомер,ЮридическийАдрес,Телефоны,"));
			КонецЕсли;
		Иначе
			СтруктураДанныхПокупатель = Новый Структура;
			Если КодЯзыка = "ru" Тогда
				СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", 
				ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,
				"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			КонецЕсли;
		КонецЕсли;
		Если НЕ КодЯзыка = "ru" Тогда
			АдрисКонтрагента = "";
			Для Каждого Стр Из ДокОснование.Контрагент.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
					АдрисКонтрагента = Стр.Представление;
				КонецЕсли;
			КонецЦикла; 
			Телефонка = ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,"Телефоны");
			Если НЕ ЗначениеЗаполнено(ДокОснование.Договор.Контрагент.РегистрационныйНомер) И ЗначениеЗаполнено(ДокОснование.Договор.Контрагент.НалоговыйНомер) Тогда
				СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", 
				ДанныеПечати.Контрагент.НаименованиеМеждународное + ", INN " + ДанныеПечати.Контрагент.ИНН + ", KPP " + ДанныеПечати.Контрагент.КПП + ", " + АдрисКонтрагента + ", " + СтрЗаменить(Телефонка, "тел.:", "")
				);
			Иначе
				СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", 
				ДанныеПечати.Контрагент.НаименованиеМеждународное + ", INN " + ДанныеПечати.Контрагент.ИНН + ", KPP " + ДанныеПечати.Контрагент.КПП + ", " + "reg. number " + ДанныеПечати.Контрагент.РегистрационныйНомер + ", " + "tax number " + ДанныеПечати.Контрагент.НалоговыйНомер + ", " + АдрисКонтрагента + ", " + СтрЗаменить(Телефонка, "тел.:", "")
				);
			КонецЕсли;	
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель); 
		ОбластьМакета.Параметры.ПредставлениеПолучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПолучателя, " INN ,", "");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПолучателя, " KPP ,", "");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПолучателя, " ИНН ,", "");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеПолучателя, " КПП ,", "");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		//Покупатель
		//Плательшик
		Если ЗначениеЗаполнено(ДокОснование.Договор.ОИРПлательщик) И ДанныеПечати.Контрагент <> ДокОснование.Договор.ОИРПлательщик Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Плательщик");
			СтрЮрЛицо = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДокОснование.Договор.ОИРПлательщик, ДанныеПечати.Дата);
			Если ЗначениеЗаполнено(ДокОснование.Договор.ОИРПлательщик.ГоловнойКонтрагент) Тогда 
				СтрЮрЛицо.КПП = ДокОснование.Договор.ОИРПлательщик.ГоловнойКонтрагент.КПП;
			КонецЕсли;
			Кнтрг = Справочники.Партнеры.НайтиПоНаименованию(ДокОснование.Договор.ОИРПлательщик);
			СтрЮрЛицо.Вставить("НЗА", "НЗА " + Кнтрг.НЗА);
			Если ЗначениеЗаполнено(ДокОснование.Договор.ОИРПлательщик.РегистрационныйНомер) И ЗначениеЗаполнено(ДокОснование.Договор.ОИРПлательщик.НалоговыйНомер) Тогда
				СтрЮрЛицо.Вставить("РегНомер",	ДокОснование.Договор.ОИРПлательщик.РегистрационныйНомер);
				СтрЮрЛицо.Вставить("НалНомер",	ДокОснование.Договор.ОИРПлательщик.НалоговыйНомер);
			КонецЕсли;
			СтруктураДанныхПокупатель = Новый Структура;
			Если КодЯзыка = "ru" Тогда
				Если НЕ ЗначениеЗаполнено(СтрЮрЛицо.НЗА) Тогда
					СтруктураДанныхПокупатель.Вставить("Плательщик", 
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,
					"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
				Иначе
					СтруктураДанныхПокупатель.Вставить("Плательщик", 
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,
					"ПолноеНаименование,ИНН,КПП,НЗА,РегНомер,НалНомер,ЮридическийАдрес,Телефоны,"));
				КонецЕсли;	
			КонецЕсли;
			Если НЕ КодЯзыка = "ru" Тогда
				АдрисКонтрагента = "";
				Для Каждого Стр Из ДокОснование.Договор.ОИРПлательщик.КонтактнаяИнформация Цикл
					Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
						АдрисКонтрагента = Стр.Представление;
					КонецЕсли;
				КонецЦикла; 
				Телефонка = ФормированиеПечатныхФорм.ОписаниеОрганизации(СтрЮрЛицо,"Телефоны");
				Если НЕ ЗначениеЗаполнено(СтрЮрЛицо.НЗА) Тогда
					СтруктураДанныхПокупатель.Вставить("Плательщик", 
					ДокОснование.Договор.ОИРПлательщик.НаименованиеМеждународное + ", INN " + ДокОснование.Договор.ОИРПлательщик.ИНН + ", KPP " + ДокОснование.Договор.ОИРПлательщик.КПП + ", " + АдрисКонтрагента + ", " + СтрЗаменить(Телефонка, "тел.:", "")
					);
				Иначе
					СтруктураДанныхПокупатель.Вставить("Плательщик", 
					ДокОснование.Договор.ОИРПлательщик.НаименованиеМеждународное + ", INN " + ДокОснование.Договор.ОИРПлательщик.ИНН + ", KPP " + ДокОснование.Договор.ОИРПлательщик.КПП + ", " + "NZA " + СтрЗаменить(СтрЮрЛицо.НЗА, "НЗА ", "") + ", " + АдрисКонтрагента + ", " + СтрЗаменить(Телефонка, "тел.:", "")
					);
				КонецЕсли;
			КонецЕсли;
			ОбластьМакета.Параметры.ПредставлениеПлательщика = СтруктураДанныхПокупатель.Плательщик;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		//Плательшик 
		Кол = 0;
		ТолькоУслуги = Ложь;
		Для Каждого Тов Из ДокОснование.Товары Цикл
			Если Тов.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Кол = Кол + 1;
			КонецЕсли;        
			Если Кол = ДокОснование.Товары.Количество() Тогда
				ТолькоУслуги = Истина;
			КонецЕсли;
		КонецЦикла;
		Если Не ТолькоУслуги Тогда
		Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") и ЗначениеЗаполнено(ДанныеПечати.Ссылка.ДокументОснование) Тогда 
			
			Отправитель = ДанныеПечати.Ссылка.ДокументОснование.Грузоотправитель;
			Получатель = ДанныеПечати.Ссылка.ДокументОснование.Грузополучатель;
			ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
			СтруктураДанныхГрузоотправитель = Новый Структура;
			СтруктураДанныхГрузоотправитель.Вставить("ПредставлениеГрузоотправителя", ОписаниеОрганизации(ДанныеПечати, "Грузоотправитель"));  
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузоотправитель);
			Если НЕ КодЯзыка = "ru" Тогда  
				АдрисГрузоотправителя = "";
				Для Каждого Стр Из ДокОснование.Грузоотправитель.КонтактнаяИнформация Цикл
					Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
						АдрисГрузоотправителя = Стр.Представление;
					КонецЕсли;
				КонецЦикла; 
				Телефонок = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),"Телефоны");
				СтруктураДанныхГрузоотправитель.Вставить("ПредставлениеГрузоотправителя", 
				ДокОснование.Грузоотправитель.НаименованиеМеждународное + ", INN " + ДокОснование.Грузоотправитель.ИНН + ", KPP " + ДокОснование.Грузоотправитель.КПП + ", " + АдрисГрузоотправителя + ", " + СтрЗаменить(Телефонок, "тел.:", ""));
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузоотправитель);	
			КонецЕсли;
			Если КодЯзыка = "ru" Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
				СтруктураДанныхПоставщик = Новый Структура;
				СтруктураДанныхПоставщик.Вставить("ПредставлениеГрузоотправителя", 
				ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),
				"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
				
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
			КонецЕсли;	
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			рр = данныепечати;
			
			Если  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ЗаказКлиента;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту")  Тогда 
				Если ТИПЗНЧ(ДанныеПечати.Ссылка.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
					ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование.ЗаказКлиента;
				Иначе
					ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование;  					
				КонецЕсли;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.Отгрузка") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка;
			Иначе
				ДокЗаказ = Неопределено;
			КонецЕсли;	
			Если ДокЗаказ = Неопределено Тогда
				ББ = ДанныеПечати.Ссылка.ДокументОснование.АдресДоставки;
			Иначе
				ББ = ДокЗаказ.АдресГрузополучателя;
			КонецЕсли;
			Если ЗначениеЗаполнено(ББ) Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
				ГрузСТрока = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Получатель, ДанныеПечати.Дата),
				"ПолноеНаименование,ИНН,КПП,")+ ", " + ББ; 
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ГрузСТрока;
				Если НЕ КодЯзыка = "ru" Тогда                            
					АдрисГрузополучателя = "";
					Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
						Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
							АдрисГрузополучателя = Стр.Представление;
						КонецЕсли;
					КонецЦикла; 
					Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
					Грузич = ДокОснование.Грузополучатель.НаименованиеМеждународное + ", INN " + ДокОснование.Грузополучатель.ИНН + ", KPP " + ДокОснование.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
				КонецЕсли;	
			Иначе 
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Получатель, ДанныеПечати.Дата),
				"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"); 
				Если НЕ КодЯзыка = "ru" Тогда                             
					АдрисГрузополучателя = "";
					Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
						Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
							АдрисГрузополучателя = Стр.Представление;
						КонецЕсли;
					КонецЦикла; 
					Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
					Грузич = ДокОснование.Грузополучатель.НаименованиеМеждународное + ", INN " + ДокОснование.Грузополучатель.ИНН + ", KPP " + ДокОснование.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
					
				КонецЕсли;	
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		Иначе 
			Отправитель = ДанныеПечати.Ссылка.Грузоотправитель;
			Получатель = ДанныеПечати.Ссылка.Грузополучатель;
			Если ЗначениеЗаполнено(ДанныеПечати.Грузоотправитель) Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
				СтруктураДанныхГрузоотправитель = Новый Структура;
				СтруктураДанныхГрузоотправитель.Вставить("ПредставлениеГрузоотправителя", ОписаниеОрганизации(ДанныеПечати, "Грузоотправитель"));  
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузоотправитель);
				Если НЕ КодЯзыка = "ru" Тогда  
					АдрисГрузоотправителя = "";
					Для Каждого Стр Из ДокОснование.Грузоотправитель.КонтактнаяИнформация Цикл
						Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
							АдрисГрузоотправителя = Стр.Представление;
						КонецЕсли;
					КонецЦикла; 
					Телефонок = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Отправитель, ДанныеПечати.Дата),"Телефоны");
					СтруктураДанныхГрузоотправитель.Вставить("ПредставлениеГрузоотправителя", 
					ДанныеПечати.Грузоотправитель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузоотправитель.ИНН + ", KPP " + ДанныеПечати.Грузоотправитель.КПП + ", " + АдрисГрузоотправителя + ", " + СтрЗаменить(Телефонок, "тел.:", ""));
					ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузоотправитель);	
				КонецЕсли;		
				ТабличныйДокумент.Вывести(ОбластьМакета);  
			иначе  
				ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
				СтруктураДанныхПоставщик = Новый Структура;
				СтруктураДанныхПоставщик.Вставить("ПредставлениеГрузоотправителя", 
				ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),
				"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
				
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			Если  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ЗаказКлиента;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.Отгрузка") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка.ДокументОснование;
			ИначеЕсли  ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
				ДокЗаказ = ДанныеПечати.Ссылка;
			Иначе
				ДокЗаказ = Неопределено;
			КонецЕсли;	
			
			
			Если ДокЗаказ = Неопределено Тогда  		
				ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
				Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.КонтактноеЛицо) Тогда
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
					"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,") + " Контактное лицо: " + ДанныеПечати.Ссылка.КонтактноеЛицо; 
					Если НЕ КодЯзыка = "ru" Тогда                           
						АдрисГрузополучателя = "";
						Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
							Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
								АдрисГрузополучателя = Стр.Представление;
							КонецЕсли;
						КонецЦикла; 
						Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
						Грузич = ДанныеПечати.Грузополучатель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузополучатель.ИНН + ", KPP " + ДанныеПечати.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
						ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
						
					КонецЕсли;	
				Иначе
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
					"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
					Если НЕ КодЯзыка = "ru" Тогда                             
						АдрисГрузополучателя = "";
						Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
							Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
								АдрисГрузополучателя = Стр.Представление;
							КонецЕсли;
						КонецЦикла; 
						Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
						Грузич = ДанныеПечати.Грузополучатель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузополучатель.ИНН + ", KPP " + ДанныеПечати.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
						ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
						
					КонецЕсли;	
				конецЕсли;
				
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " INN ,", "");
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " KPP ,", "");
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " ИНН ,", "");
				ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " КПП ,", "");
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				
			Иначе
				Если ЗначениеЗаполнено(ББ) Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
					ГрузСТрока = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
					"ПолноеНаименование,ИНН,КПП,")+ ", " + ББ + ", " +  ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
					"Телефоны");    
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ГрузСТрока;
					Если НЕ КодЯзыка = "ru" Тогда                            
						АдрисГрузополучателя = "";
						Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
							Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
								АдрисГрузополучателя = Стр.Представление;
							КонецЕсли;
						КонецЦикла; 
						Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
						Грузич = ДанныеПечати.Грузополучатель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузополучатель.ИНН + ", KPP " + ДанныеПечати.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
						ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;	
					КонецЕсли;	
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
				иначе
					ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
					Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.КонтактноеЛицо) Тогда
						ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
						"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,") + " Контактное лицо: " + ДанныеПечати.Ссылка.КонтактноеЛицо;  
						Если НЕ КодЯзыка = "ru" Тогда                             
							АдрисГрузополучателя = "";
							Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
								Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
									АдрисГрузополучателя = Стр.Представление;
								КонецЕсли;
							КонецЦикла; 
							Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
							Грузич = ДанныеПечати.Грузополучатель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузополучатель.ИНН + ", KPP " + ДанныеПечати.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
							ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
							
						КонецЕсли;	
					Иначе
						ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
						"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"); 
						Если НЕ КодЯзыка = "ru" Тогда                            
							АдрисГрузополучателя = "";
							Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
								Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
									АдрисГрузополучателя = Стр.Представление;
								КонецЕсли;
							КонецЦикла; 
							Телефонич = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),"Телефоны");
							Грузич = ДанныеПечати.Грузополучатель.НаименованиеМеждународное + ", INN " + ДанныеПечати.Грузополучатель.ИНН + ", KPP " + ДанныеПечати.Грузополучатель.КПП + ", " + АдрисГрузополучателя + ", " + СтрЗаменить(Телефонич, "тел.:", "");
							ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Грузич;
							
						КонецЕсли;	
					КонецЕсли;
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " INN ,", "");
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " KPP ,", "");
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " ИНН ,", "");
					ОбластьМакета.Параметры.ПредставлениеГрузополучателя = СтрЗаменить(ОбластьМакета.Параметры.ПредставлениеГрузополучателя, " КПП ,", "");
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		КонецЕсли;
		
		ОбластьМакета2 = Макет.ПолучитьОбласть("Основание");
		Если КодЯзыка = "ru" Тогда
			СтруктураДанныхОснование = Новый Структура;
			Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.Договор) Тогда 			
				СтруктураДанныхОснование.Вставить("Основание", ДанныеПечати.Ссылка.Договор);
			Иначе 
				СтруктураДанныхОснование.Вставить("Основание", ДанныеПечати.Ссылка.Соглашение);
			КонецЕсли;
			ОбластьМакета2.Параметры.Заполнить(СтруктураДанныхОснование);
		Иначе
			ОбластьМакета2 = Макет.ПолучитьОбласть("Основание");
			СтруктураДанныхОснование = Новый Структура;
			Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.Договор) Тогда 			
				СтруктураДанныхОснование.Вставить("Основание", ДанныеПечати.Ссылка.Договор);
			Иначе 
				СтруктураДанныхОснование.Вставить("Основание", ДанныеПечати.Ссылка.ДокументОснование.Соглашение);
			КонецЕсли;
		КонецЕсли;
		Если НЕ КодЯзыка = "ru" Тогда  
			СтруктураДанныхОснование.Вставить("Основание",ДокОснование.Договор.НаименованиеИностранное);		
		КонецЕсли;
		ОбластьМакета2.Параметры.Заполнить(СтруктураДанныхОснование);
		ТабличныйДокумент.Вывести(ОбластьМакета2);
	КонецПроцедуры 
	
	Процедура ЗаполнитьРеквизитыПодвалаСчетаНаОплату(ДанныеПечати, Макет, ТабличныйДокумент, ТаблицаЭтапыОплаты, СоответствиеСтавокНДС, ПараметрыПечати)
		
		МассивПроверкиВывода = Новый Массив;
		
		Если ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.Отгрузка") ИЛИ ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			// Вывести этапы графика оплаты
			Если ТаблицаЭтапыОплаты.Количество() > 1 Тогда
				
				Если КодЯзыка = "ru" Тогда 
					ИмяКолонкиДатыОплаты = ?(ДанныеПечати.СчетКВозврату, НСтр("ru='Дата оплаты или возврата'"), НСтр("ru='Дата оплаты'"));
				ИначеЕсли КодЯзыка = "en" Тогда
					ИмяКолонкиДатыОплаты = ?(ДанныеПечати.СчетКВозврату, НСтр("ru='Date of payment or return'"), НСтр("ru='Date of payment'"));
				ИначеЕсли КодЯзыка = "Tr" Тогда  
					ИмяКолонкиДатыОплаты = ?(ДанныеПечати.СчетКВозврату, НСтр("ru='Ödeme veya iade tarihi'"), НСтр("ru='Ödeme günü'"));
				ИначеЕсли КодЯзыка = "ar" Тогда
					ИмяКолонкиДатыОплаты = ?(ДанныеПечати.СчетКВозврату, НСтр("ru='تاريخ الدفع أو العودة'"), НСтр("ru='تاريخ السداد'"));
				КонецЕсли;
				ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыЭтапыОплаты");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты");
				ИтогоЭтапыОплаты = Макет.ПолучитьОбласть("ИтогоЭтапыОплаты");
				СтруктураДанныхШапки = Новый Структура("ИмяКолонкиДатыОплаты",ИмяКолонкиДатыОплаты);
				ОбластьШапкаТаблицы.Параметры.Заполнить(СтруктураДанныхШапки);
				МассивПроверкиВывода.Добавить(ОбластьШапкаТаблицы);
				МассивПроверкиВывода.Добавить(ОбластьПодвалТаблицы);
				
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыЭтапыОплаты"); 
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
				НомерЭтапа = 1;
				Для Каждого ТекЭтап Из ТаблицаЭтапыОплаты Цикл
					ПараметрыСтроки = НовыеПараметрыСтрокиЭтапа();
					ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ТекЭтап);
					ПараметрыСтроки.НомерСтроки = НомерЭтапа;
					
					Если Не ПараметрыСтроки.ЭтоЗалогЗаТару Тогда
						ПараметрыСтроки.ТекстНДС = ФормированиеПечатныхФорм.СформироватьТекстНДСЭтапаОплаты(СоответствиеСтавокНДС,
						ТекЭтап.ПроцентПлатежа);
					Иначе
						ПараметрыСтроки.ПроцентПлатежа = "-";
						ПараметрыСтроки.ТекстНДС = НСтр("ru='Залог за тару. Без налога (НДС).'");
					КонецЕсли;
					Если КодЯзыка = "en" Тогда
						//НДС 
						ПараметрыСтроки.ТекстНДС = СтрЗаменить(ПараметрыСтроки.ТекстНДС,"Без налога (НДС)","Without tax (VAT)"); 
					КонецЕсли;
					Если КодЯзыка = "Tr" Тогда
						//НДС 
						ПараметрыСтроки.ТекстНДС = СтрЗаменить(ПараметрыСтроки.ТекстНДС,"Без налога (НДС)","Vergisiz (KDV)"); 
					КонецЕсли;
					Если КодЯзыка = "ar" Тогда
						//НДС 
						ПараметрыСтроки.ТекстНДС = СтрЗаменить(ПараметрыСтроки.ТекстНДС,"Без налога (НДС)","بدون ضريبة (ضريبة القيمة المضافة)"); 
					КонецЕсли; 
					ОбластьСтрокаТаблицы.Параметры.Заполнить(ПараметрыСтроки);
					
					МассивПроверкиВывода.Добавить(ОбластьСтрокаТаблицы);
					
					Если ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда
						Если НомерЭтапа = 1 Тогда
							МассивПроверкиВывода.Удалить(0);
						КонецЕсли;
					Иначе
					КонецЕсли;
					МассивПроверкиВывода.Удалить(МассивПроверкиВывода.ВГраница());
					
					НомерЭтапа = НомерЭтапа + 1;
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
				КонецЦикла;
				ТабличныйДокумент.Вывести(ИтогоЭтапыОплаты);
			КонецЕсли;
		КонецЕсли;		
		Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформация) Тогда
			
			Область = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
			Область.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(Область);
			
		КонецЕсли;
		
		// Вывести подписи
		Область = Макет.ПолучитьОбласть("ПодвалСчета");
		Если КодЯзыка = "ru" Тогда
			СтруктураДанныхПодвал = Новый Структура;
			СтруктураДанныхПодвал.Вставить("ФИОРуководителя", ДанныеПечати.Руководитель);
			СтруктураДанныхПодвал.Вставить("ДолжностьРуководителя", ДанныеПечати.ДолжностьРуководителя);
			СтруктураДанныхПодвал.Вставить("ФИОБухгалтера", ДанныеПечати.ГлавныйБухгалтер);
			СтруктураДанныхПодвал.Вставить("ФИОМенеджер", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер, ДанныеПечати.Дата));
			Область.Параметры.Заполнить(СтруктураДанныхПодвал); 
		Иначе
			СтруктураДанныхПодвал = Новый Структура;
			СтруктураДанныхПодвал.Вставить("ФИОРуководителя", ДокОснование.Руководитель.РабочееНаименованиеИнглиш);
			СтруктураДанныхПодвал.Вставить("ДолжностьРуководителя", ДокОснование.Руководитель.ДолжностьИнглиш);
			СтруктураДанныхПодвал.Вставить("ФИОБухгалтера", ДокОснование.ГлавныйБухгалтер.РабочееНаименованиеИнглиш);
			СтруктураДанныхПодвал.Вставить("ФИОМенеджер", ПолучитьСтрокуНаЛатинском(ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер, ДанныеПечати.Дата)));
			Область.Параметры.Заполнить(СтруктураДанныхПодвал); 
		КонецЕсли;	
		ФормированиеПечатныхФорм.ВывестиФаксимилеВТабличныйДокумент(Макет, Область, ДанныеПечати.Организация, ПараметрыПечати);
		МассивПроверкиВывода.Очистить();
		МассивПроверкиВывода.Добавить(Область);
		Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(Область);	
	КонецПроцедуры
	
	Процедура ЗаполнитьТабличныйДокументСчетаНаОплату(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, ТоварыРеализации = Неопределено)
		
		Перем КомплектПечатиПоСсылке;
		
		ШаблоныОшибок = Новый Структура;
		ШаблоныОшибок.Вставить("Товары", НСтр("ru = 'В документе %1 отсутствуют товары. Печать счета на оплату не требуется'"));
		ШаблоныОшибок.Вставить("ЗаменяющиеТовары", НСтр("ru = 'В документе %1 отсутствуют заменяющие товары. Печать счета на оплату не требуется'"));
		ШаблоныОшибок.Вставить("Этапы", НСтр("ru = 'В документе %1 отсутствуют этапы оплаты. Печать счета на оплату не требуется'"));
		
		ИспользоватьРучныеСкидки         = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
		ИспользоватьАвтоматическиеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
		СтруктураИмяДопКолонки = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов(); 
		ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
		ЭтапыОплаты = ДанныеДляПечати.РезультатПоЭтапамОплаты.Выгрузить();
		Товары = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
		
		ЭтапыЗалоговойТары = ЭтапыОплаты.НайтиСтроки(Новый Структура("ЭтоЗалогЗаТару", Истина));
		ТолькоЗалогЗаТару = ЭтапыЗалоговойТары.Количество() = ЭтапыОплаты.Количество() И ЭтапыЗалоговойТары.Количество() > 0;
		
		Если Товары.Колонки.Найти("Содержание")=Неопределено Тогда
			ЕстьСодержание = Ложь;
		Иначе
			ЕстьСодержание = Истина;
		КонецЕсли;
		
		ПоказыватьНДС = Константы.ВыводитьДопКолонкиНДС.Получить();
		ПервыйДокумент = Истина;
		
		СчСтрок = 0;
		
		Пока ДанныеПечати.Следующий() Цикл
			
			Отказ = Ложь;
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			
			ИспользоватьНаборы = Ложь;
			Если Товары.Колонки.Найти("ЭтоНабор") <> Неопределено Тогда
				ИспользоватьНаборы = Истина;
			КонецЕсли; 
			
			ДокОснование = ?(ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),ДанныеПечати.Ссылка, ДанныеПечати.Ссылка.ДокументОснование);
			Если ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") и ДокОснование.ОбъединитьСтроки = истина Тогда 
				Объединение = Истина;
				Товары = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
				Для Каждого Стр Из Товары Цикл
					Стр.Цена = Окр(Стр.Цена - 0.0005, 2); 	
				КонецЦикла;
				Товары.Свернуть("Ссылка, Номенклатура, ЭтоНабор, ЭтоКомплектующие, ЭтоВозвратнаяТара, Содержание, НаименованиеПолное, Характеристика, Цена, СтавкаНДС, ЕдиницаИзмерения", "Сумма, СуммаНДС, Количество");
			КонецЕсли; 
			ТаблицаТовары = Товары.НайтиСтроки(СтруктураПоиска);
			ТаблицаЭтапыОплаты = ЭтапыОплаты.НайтиСтроки(СтруктураПоиска);
			
			Если НЕ ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.Отгрузка") Тогда 
				ПроверкаЗаполненияДокумента(ДанныеПечати, ТаблицаТовары, Неопределено, ТаблицаЭтапыОплаты, ШаблоныОшибок, Отказ);
			КонецЕсли;
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ТаблицаТовары, ИспользоватьРучныеСкидки Или ИспользоватьАвтоматическиеСкидки);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			
			СуффиксОбласти = ?(ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару И ПоказыватьНДС, "СНДС", "") + ?(ЕстьСкидки, "СоСкидкой", "");
			
			Макет = Новый ТабличныйДокумент;
			ЗаполнитьРеквизитыШапкиСчетаНаОплату(ДанныеПечати, Макет, ТабличныйДокумент, ТаблицаЭтапыОплаты, ТаблицаТовары);
			
			Если ДанныеПечати.ЧастичнаяОплата ИЛИ ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
				
				ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыЧастичнаяОплата");
				ОбластьШапкаТаблицы.Параметры.Заполнить(СтруктураИмяДопКолонки);
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыЧастичнаяОплата");
				ОбластьСтрокаТаблицы.Параметры.Заполнить(ДанныеПечати); 
				
				
				
				Попытка
					Если ДанныеПечати.Ссылка.ЧастичнаяОплата Тогда
						
						ПроцАванс =Окр(ДанныеПечати.ПроцентОплаты,0);
						Если ПроцАванс <> Неопределено Тогда 
							ОбластьСтрокаТаблицы.Параметры.НазначениеПлатежа =   "Аванс ("+Строка(ПроцАванс) +"%)  "+ДанныеПечати.Ссылка.Договор.Наименование;
						КонецЕсли;
						
					КонецЕсли;
				Исключение
					
				КонецПопытки;						
				ОбластьСтрокаТаблицы.Параметры.НомерСтроки = 1;
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
				
				ОбластьИтого = Макет.ПолучитьОбласть("ПодвалТаблицыЧастичнаяОплата");
				СтруктураДанныхИтого = Новый Структура;
				СтруктураДанныхИтого.Вставить("Всего", ДанныеПечати.СуммаДокумента);
				ОбластьИтого.Параметры.Заполнить(СтруктураДанныхИтого);
				ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Присоединить(ОбластьИтого);
				
				// Вывести ИтогоНДС
				СоответствиеСтавокНДС = Новый Соответствие;
				Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару 
					И НЕ ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда
					ОбластьИтогоНДС = Макет.ПолучитьОбласть("ПодвалТаблицыНДС");
					Для Каждого СтрокаТовара Из ТаблицаТовары Цикл
						Если ИспользоватьНаборы И СтрокаТовара.ЭтоНабор
							И СтрокаТовара.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда					 
							Продолжить; // Исключаем суммы НДС по набору в целом.
						КонецЕсли;	
						СуммаНДС = СоответствиеСтавокНДС[СтрокаТовара.СтавкаНДС];
						Если СуммаНДС = Неопределено Тогда
							СуммаНДС = СтрокаТовара.СуммаНДС;
						Иначе
							СуммаНДС = СуммаНДС + СтрокаТовара.СуммаНДС;
						КонецЕсли;
						СоответствиеСтавокНДС.Вставить(СтрокаТовара.СтавкаНДС, СуммаНДС);
					КонецЦикла;
					Для Каждого ТекСтавкаНДС Из СоответствиеСтавокНДС Цикл
						СтруктураДанныхИтогоНДС = Новый Структура;
						Если КодЯзыка = "ru" Тогда
							СтруктураДанныхИтогоНДС.Вставить("НДС", ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС));
						КонецЕсли;	
						Если КодЯзыка = "en" Тогда 
							СтруктураДанныхИтогоНДС.Вставить("НДС", СтрЗаменить(ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС),"НДС","VAT")); 
						КонецЕсли;
						Если КодЯзыка = "ar" Тогда 
							СтруктураДанныхИтогоНДС.Вставить("НДС", СтрЗаменить(ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС),"НДС","ضريبة القيمة المضافة")); 
						КонецЕсли; 
						Если КодЯзыка = "Tr" Тогда 
							СтруктураДанныхИтогоНДС.Вставить("НДС", СтрЗаменить(ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС),"НДС","KDV")); 
						КонецЕсли;
						Если ЗначениеЗаполнено(ТекСтавкаНДС.Значение) Тогда
							СтруктураДанныхИтогоНДС.Вставить("ВсегоНДС", ФормированиеПечатныхФорм.ФорматСумм(ТекСтавкаНДС.Значение /100 * ДанныеПечати.ПроцентОплаты));
						Иначе
							СтруктураДанныхИтогоНДС.Вставить("ВсегоНДС","-");
						КонецЕсли;
						ОбластьИтогоНДС.Параметры.Заполнить(СтруктураДанныхИтогоНДС);
						ТабличныйДокумент.Вывести(ОбластьИтогоНДС);                                                                                                
					КонецЦикла;
					ОбластьПодвалСНДС = Макет.ПолучитьОбласть("ПодвалТаблицыВсего");
					СтруктураДанныхПодвалСНДС = Новый Структура("ВсегоСНДС", ФормированиеПечатныхФорм.ФорматСумм(ДанныеПечати.СуммаДокумента));
					ОбластьПодвалСНДС.Параметры.Заполнить(СтруктураДанныхПодвалСНДС);
					ТабличныйДокумент.Вывести(ОбластьПодвалСНДС);
				КонецЕсли;
				
				// Вывести Сумму прописью
				ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописьюЧастичныйСчет");
				СуммаПрописью = НСтр("ru = 'Всего на сумму %СуммаПрописью%'; en = 'Total for the amount of %СуммаПрописью%'; ar = 'Total for the amount of %СуммаПрописью%'; Tr = 'Total for the amount of %СуммаПрописью%'", КодЯзыка);
				СуммаПрописью = СтрЗаменить(СуммаПрописью, "%СуммаПрописью%", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта,,КодЯзыка)); 
				СтруктураДанныхСуммаПрописью = Новый Структура("СуммаПрописью", СуммаПрописью);
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхСуммаПрописью);
				ТабличныйДокумент.Вывести(ОбластьМакета); 
				
			ИначеЕсли ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.Отгрузка") И НЕ ДанныеПечати.ЧастичнаяОплата Тогда 
				//Таблица "Товары"
				ОбластьШапкаТаблицы          = Макет.ПолучитьОбласть("ШапкаТаблицы");
				ОбластьСтрокаТаблицыСтандарт = Макет.ПолучитьОбласть("СтрокаТаблицы");
				ОбластьПодвалТаблицы         = Макет.ПолучитьОбласть("ПодвалТаблицы");
				ОбластьПодвалНДС             = Макет.ПолучитьОбласть("ПодвалТаблицыНДС");  
				ОбластьПодвалТаблицыВсего    = Макет.ПолучитьОбласть("ПодвалТаблицыВсего");
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы); 
				
				СоответствиеСтавокНДС = Новый Соответствие;
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	Отгрузка.Товары.(
				|		Ссылка КАК Ссылка,
				|		НомерСтроки КАК Номер,
				|		Номенклатура.Наименование КАК Товар,
				|		Количество КАК Количество,
				|		СтавкаНДС КАК НДС,
				|		СуммаНДС КАК ВсегоНДС,
				|		Сумма КАК Всего,
				|		Сумма КАК Сумма,
				|		ЦенаЗаЕд КАК Цена,
				|		СуммаРасчет КАК СуммаРасчет,
				|		ЕдИзмФакт КАК ЕдиницаИзмерения,
				|		Номенклатура.НаименованиеЯзык1 КАК НоменклатураНаименованиеЯзык1,
				|		Номенклатура.НаименованиеЯзык2 КАК НоменклатураНаименованиеЯзык2,
				|		ЕдИзмФакт.НаименованиеЯзык1 КАК ЕдИзмФактНаименованиеЯзык1,
				|		ЕдИзмФакт.НаименованиеЯзык2 КАК ЕдИзмФактНаименованиеЯзык2,
				|		Номенклатура.Представление КАК НоменклатураПредставление
				|	) КАК Товары,
				|	Отгрузка.СуммаДокумента КАК ВсегоСНДС,
				|	Отгрузка.СуммаНДС КАК ВсегоНДС
				|ИЗ
				|	Документ.Отгрузка КАК Отгрузка
				|ГДЕ
				|	Отгрузка.Ссылка = &Ссылка";
				Запрос.УстановитьПараметр("Ссылка",ДанныеПечати.ДокументОснование);
				Выборка = Запрос.Выполнить().Выбрать();
				НомерПП = 0;
				НольНДС = "-"; 
				Всего = 0; 
				СтрокаНДС = "";
				Пока Выборка.Следующий() Цикл 
					ВыборкаТовары = Выборка.Товары.Выбрать();
					Пока ВыборкаТовары.Следующий() Цикл
						НомерПП = НомерПП + 1; 
						Всего = Всего + ВыборкаТовары.Сумма; 
						Если КодЯзыка = "ru" Тогда
							ОбластьСтрокаТаблицыСтандарт.Параметры.Заполнить(ВыборкаТовары);
							ОбластьСтрокаТаблицыСтандарт.Параметры.НомерСтроки = НомерПП;						 		
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыСтандарт);
							
							СтрокаНДС = "НДС(" + ВыборкаТовары.НДС + ")";
						ИначеЕсли КодЯзыка = "en" Тогда
							ОбластьСтрокаТаблицыСтандарт.Параметры.Заполнить(ВыборкаТовары);
							ОбластьСтрокаТаблицыСтандарт.Параметры.НомерСтроки = НомерПП;
							ОбластьСтрокаТаблицыСтандарт.Параметры.Товар = ВыборкаТовары.НоменклатураНаименованиеЯзык1;
							ОбластьСтрокаТаблицыСтандарт.Параметры.ЕдиницаИзмерения = ВыборкаТовары.ЕдИзмФактНаименованиеЯзык1;						 						 		
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыСтандарт);
							
							СтрокаНДС = "VAT(" + ВыборкаТовары.НДС + ")";
						ИначеЕсли КодЯзыка = "ar" Тогда
							ОбластьСтрокаТаблицыСтандарт.Параметры.Заполнить(ВыборкаТовары);
							ОбластьСтрокаТаблицыСтандарт.Параметры.НомерСтроки = НомерПП;
							ОбластьСтрокаТаблицыСтандарт.Параметры.Товар = ВыборкаТовары.НоменклатураНаименованиеЯзык2;
							ОбластьСтрокаТаблицыСтандарт.Параметры.ЕдиницаИзмерения = ВыборкаТовары.ЕдИзмФактНаименованиеЯзык2;						 						 		
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыСтандарт);
							
							СтрокаНДС = "ضريبة القيمة المضافة" + " ( " + ВыборкаТовары.НДС + " ) ";
						ИначеЕсли КодЯзыка = "Tr" Тогда						  
							Для Каждого Стр Из ВыборкаТовары.Товар.Представления Цикл
								Если Стр.КодЯзыка = "tr" Тогда
									ББ = Стр.Наименование;
								КонецЕсли;
							КонецЦикла;
							ОбластьСтрокаТаблицыСтандарт.Параметры.Заполнить(ВыборкаТовары);
							ОбластьСтрокаТаблицыСтандарт.Параметры.НомерСтроки = НомерПП;
							ОбластьСтрокаТаблицыСтандарт.Параметры.Товар = ББ;
							ОбластьСтрокаТаблицыСтандарт.Параметры.ЕдиницаИзмерения =  ВыборкаТовары.ЕдИзмФактНаименованиеЯзык1;						 						 		
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыСтандарт);
							
							СтрокаНДС = "KDV" + " ( " + ВыборкаТовары.НДС + " ) ";
						КонецЕсли;   
						
						ОбластьПодвалТаблицы.Параметры.Всего = Всего;   
						
						ОбластьПодвалНДС.Параметры.НДС = СтрокаНДС; 
						Если Выборка.ВсегоНДС = 0 Тогда 
							ОбластьПодвалНДС.Параметры.ВсегоНДС = НольНДС;
						Иначе 
							ОбластьПодвалНДС.Параметры.ВсегоНДС = Выборка.ВсегоНДС;
						КонецЕсли; 
						
						ОбластьПодвалТаблицыВсего.Параметры.Заполнить(Выборка);
						
						Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару Тогда
							СуммаНДСПоСтавке = СоответствиеСтавокНДС[ВыборкаТовары.НДС];
							Если СуммаНДСПоСтавке = Неопределено Тогда
								СуммаНДСПоСтавке = 0;
							КонецЕсли;
							СоответствиеСтавокНДС.Вставить(ВыборкаТовары.НДС, СуммаНДСПоСтавке + ВыборкаТовары.ВсегоНДС);
						КонецЕсли;
					КонецЦикла;  
				КонецЦикла; 
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
				ТабличныйДокумент.Вывести(ОбластьПодвалНДС);
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыВсего); 
				
				ПроверкаЗаполненияДокумента(ДанныеПечати, ТаблицаТовары, Выборка, ТаблицаЭтапыОплаты, ШаблоныОшибок, Отказ);
				
			Иначе
				
				// Таблица "Товары"
				ОбластьШапкаТаблицы          = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
				ОбластьСтрокаТаблицыСтандарт = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти);
				ОбластьПодвалТаблицы         = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбласти);
				ОбластьПодвалНДС             = Макет.ПолучитьОбласть("ПодвалТаблицыНДС");
				
				Если ИспользоватьНаборы Тогда
					ОбластьСтрокаТаблицыНабор         = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти + "Набор");
					ОбластьСтрокаТаблицыКомплектующие = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти + "Комплектующие");
				КонецЕсли;
				
				ПустыеДанные = НаборыСервер.ПустыеДанные();
				ВыводШапки = 0;
				
				Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару Тогда
					СуффиксОбластиПодвал = "СНДС" + ?(ЕстьСкидки, "СоСкидкой", "");
					ОбластьПодвалСНДС = Макет.ПолучитьОбласть("ПодвалТаблицыВсего" + СуффиксОбластиПодвал);
				КонецЕсли;
				
				Если ЕстьСкидки Тогда
					СтруктураЗаголовокСкидки = Новый Структура("Скидка, СуммаБезСкидки", 
					ЗаголовокСкидки.Скидка,
					ЗаголовокСкидки.СуммаСкидки);
					ОбластьШапкаТаблицы.Параметры.Заполнить(СтруктураЗаголовокСкидки);
				КонецЕсли; 
				ОбластьШапкаТаблицы.Параметры.Заполнить(СтруктураИмяДопКолонки);
				ОбластьСуммаПрописью = Макет.ПолучитьОбласть(?(ДанныеПечати.СчетКВозврату, "СуммаПрописьюКВозврату", "СуммаПрописью"));
				
				МассивПроверкиВывода = Новый Массив;
				
				Сумма = 0;
				СуммаНДС = 0;
				ВсегоСкидок = 0;
				ВсегоБезСкидок = 0;
				НомерСтроки = 0;
				СоответствиеСтавокНДС = Новый Соответствие;
				Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
					
					Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, ИспользоватьНаборы) Тогда
						ОбластьСтрокаТаблицы = ОбластьСтрокаТаблицыНабор;
					ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
						ОбластьСтрокаТаблицы = ОбластьСтрокаТаблицыКомплектующие;
					Иначе
						ОбластьСтрокаТаблицы = ОбластьСтрокаТаблицыСтандарт;
					КонецЕсли;
					
					Если НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
						НомерСтрокиПечать = "";
					Иначе
						НомерСтроки = НомерСтроки + 1;
						НомерСтрокиПечать = НомерСтроки;
					КонецЕсли;
					
					Если НомерСтроки = 0 И ВыводШапки <> 2 Тогда
						ВыводШапки = 1;
					КонецЕсли;
					
					ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(СтрокаТовары, ИспользоватьНаборы);
					
					ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
					ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = СтрокаТовары.ЭтоВозвратнаяТара;
					Если ЕстьСодержание Тогда
						ДополнительныеПараметрыПолученияНаименованияДляПечати.Содержание = СтрокаТовары.Содержание;
					КонецЕсли; 
					РилГудс = ДокОснование.Товары.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТовары.Номенклатура));
					Гудс = РилГудс[0];
					
					Товар = ПрефиксИПостфикс.Префикс
					+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.НаименованиеПолное,
					СтрокаТовары.Характеристика,
					,
					, // Серия
					ДополнительныеПараметрыПолученияНаименованияДляПечати)
					+ ПрефиксИПостфикс.Постфикс;
					
					Если КодЯзыка = "ru" Тогда
						Товар =  ПрефиксИПостфикс.Префикс
						+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Строка(?(ЗначениеЗаполнено(Гудс.НоменклатураКлиента), Гудс.НоменклатураКлиента.НаименованиеПолное, Гудс.Номенклатура.Наименование)),
						СтрокаТовары.Характеристика,
						,
						,
						ДополнительныеПараметрыПолученияНаименованияДляПечати)
						+ ПрефиксИПостфикс.Постфикс; 
					КонецЕсли;
					
					Если КодЯзыка = "en" Тогда
						Товар =  ПрефиксИПостфикс.Префикс
						+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Строка(?(ЗначениеЗаполнено(Гудс.НоменклатураКлиента), Гудс.НоменклатураКлиента.НаименованиеНаАнглийском, Гудс.Номенклатура.НаименованиеЯзык1)),
						СтрокаТовары.Характеристика,
						,
						,
						ДополнительныеПараметрыПолученияНаименованияДляПечати)
						+ ПрефиксИПостфикс.Постфикс; 
					КонецЕсли;
					
					Если КодЯзыка = "ar" Тогда
						Товар =  ПрефиксИПостфикс.Префикс
						+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Строка(?(ЗначениеЗаполнено(Гудс.НоменклатураКлиента), Гудс.НоменклатураКлиента.НаименованиеНаАрабском, Гудс.Номенклатура.НаименованиеЯзык2)),
						СтрокаТовары.Характеристика,
						,
						,
						ДополнительныеПараметрыПолученияНаименованияДляПечати)
						+ ПрефиксИПостфикс.Постфикс; 
					КонецЕсли;
					Если КодЯзыка = "Tr" Тогда
						Для Каждого Стр Из СтрокаТовары.Номенклатура.Представления Цикл
							Если Стр.КодЯзыка = "tr" Тогда
								ББ = Стр.Наименование;
							КонецЕсли;
						КонецЦикла;
						Товар =  ПрефиксИПостфикс.Префикс
						+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Строка(?(ЗначениеЗаполнено(Гудс.НоменклатураКлиента), ББ, ББ)),
						СтрокаТовары.Характеристика,
						,
						,
						ДополнительныеПараметрыПолученияНаименованияДляПечати)
						+ ПрефиксИПостфикс.Постфикс; 
					КонецЕсли;
					
					СтруктураДанныхСтроки = Новый Структура;                 //здесь номинклатура
					СтруктураДанныхСтроки.Вставить("Товар", Товар);
					СтруктураДанныхСтроки.Вставить("НомерСтроки", НомерСтрокиПечать);
					ОбластьСтрокаТаблицы.Параметры.Заполнить(СтрокаТовары);
					
					Если ЗаголовокСкидки.ЕстьСкидки Тогда
						СтруктураДанныхСтроки.Вставить("СуммаСкидки",
						?(ЗаголовокСкидки.ТолькоНаценка,- СтрокаТовары.СуммаСкидки,СтрокаТовары.СуммаСкидки));
					КонецЕсли;
					
					Если ЗначениеЗаполнено(СтруктураИмяДопКолонки.ИмяКолонки) Тогда
						СтруктураДанныхСтроки.Вставить("Артикул", СтрокаТовары[СтруктураИмяДопКолонки.ИмяКолонки]);
					КонецЕсли;
					
					Если ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда
						СтруктураДанныхСтроки.Вставить("СтавкаНДС", НСтр("ru='НДС исчисляется налоговым агентом'", Метаданные.Языки.Русский.КодЯзыка));
					КонецЕсли;
					
					ОбластьСтрокаТаблицы.Параметры.Заполнить(СтруктураДанныхСтроки);
					
					Если НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
						ОбластьСтрокаТаблицы.Параметры.Заполнить(ПустыеДанные);
					КонецЕсли;
					
					МассивПроверкиВывода.Очистить();
					МассивПроверкиВывода.Добавить(ОбластьСтрокаТаблицы);
					Если НомерСтроки = ТаблицаТовары.Количество() Тогда
						МассивПроверкиВывода.Добавить(ОбластьПодвалТаблицы);
						МассивПроверкиВывода.Добавить(ОбластьПодвалНДС);
						МассивПроверкиВывода.Добавить(ОбластьСуммаПрописью);
					КонецЕсли;
					
					Если ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) Тогда
						Если (НомерСтроки = 1 И ВыводШапки = 0) ИЛИ (НомерСтроки = 0 И ВыводШапки = 1) Тогда
							ВыводШапки = 2;
							ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
						КонецЕсли;
					Иначе
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
					КонецЕсли;
					Если Объединение = Истина Тогда
						ОбластьСтрокаТаблицы.Параметры.Цена = ТаблицаТовары[НомерСтроки - 1].Цена;
					Иначе 
						Если ТоварыРеализации <> Неопределено Тогда
							ОбластьСтрокаТаблицы.Параметры.Цена = ТоварыРеализации[НомерСтроки - 1].Цена;
						КонецЕсли;
					КонецЕсли;
					
					Если КодЯзыка = "en" ИЛИ КодЯзыка = "Tr"  Тогда
						ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(Гудс.Упаковка.НаименованиеЯзык1), Гудс.Упаковка.НаименованиеЯзык1, Гудс.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык1);   
					КонецЕсли;
					Если КодЯзыка = "ar" Тогда
						ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(Гудс.Упаковка.НаименованиеЯзык2), Гудс.Упаковка.НаименованиеЯзык2, Гудс.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык2);   
					КонецЕсли;
					СтруктураДанныхВсегоСкидки = Новый Структура;
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
					
					Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
						
						Сумма = Сумма + СтрокаТовары.Сумма;
						СуммаНДС = СуммаНДС + СтрокаТовары.СуммаНДС;
						
						Если ЕстьСкидки Тогда
							ВсегоСкидок = ВсегоСкидок + СтрокаТовары.СуммаСкидки;
							ВсегоБезСкидок = ВсегоБезСкидок + СтрокаТовары.СуммаБезСкидки;
						КонецЕсли;
						
						Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару Тогда
							СуммаНДСПоСтавке = СоответствиеСтавокНДС[СтрокаТовары.СтавкаНДС];
							Если СуммаНДСПоСтавке = Неопределено Тогда
								СуммаНДСПоСтавке = 0;
							КонецЕсли;
							СоответствиеСтавокНДС.Вставить(СтрокаТовары.СтавкаНДС, СуммаНДСПоСтавке + СтрокаТовары.СуммаНДС);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				
				// Подвал таблицы "Товары"
				Если ЕстьСкидки Тогда
					СтруктураДанныхВсегоСкидки.Вставить("ВсегоСкидок", ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок));
					СтруктураДанныхВсегоСкидки.Вставить("ВсегоБезСкидок", ВсегоБезСкидок);
					Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару Тогда
						СтруктураДанныхВсегоСкидки.Вставить("ВсегоСуммаНДС", СуммаНДС);
					КонецЕсли;
				КонецЕсли;
				СтруктураДанныхВсегоСкидки.Вставить("Всего", ФормированиеПечатныхФорм.ФорматСумм(Сумма));
				ОбластьПодвалТаблицы.Параметры.Заполнить(СтруктураДанныхВсегоСкидки);
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
				
				// Область "ПодвалТаблицыНДС"
				Если ДанныеПечати.УчитыватьНДС И НЕ ТолькоЗалогЗаТару И НЕ ДанныеПечати.ОперацияОблагаетсяНДСУПокупателя Тогда
					
					Для Каждого ТекСтавкаНДС Из СоответствиеСтавокНДС Цикл
						СтруктураДанныхПодвалНДС = Новый Структура;
						СтруктураДанныхПодвалНДС.Вставить("НДС", ФормированиеПечатныхФорм.ТекстНДСПоСтавке(ТекСтавкаНДС.Ключ, ДанныеПечати.ЦенаВключаетНДС));
						СтруктураДанныхПодвалНДС.Вставить("ВсегоНДС", ФормированиеПечатныхФорм.ФорматСумм(ТекСтавкаНДС.Значение, ,"-"));
						ОбластьПодвалНДС.Параметры.Заполнить(СтруктураДанныхПодвалНДС);  
						Если КодЯзыка = "en" Тогда
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "НДС", "VAT");
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "В т.ч.", "");
						КонецЕсли;  
						Если КодЯзыка = "ar" Тогда
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "НДС", "ضريبة القيمة المضافة");
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "В т.ч.", ""); 
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, ":", "");
						КонецЕсли; 
						Если КодЯзыка = "Tr" Тогда
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "НДС", "KDV");
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, "В т.ч.", "dahil olmak üzere"); 
							ОбластьПодвалНДС.Параметры.НДС = СтрЗаменить(ОбластьПодвалНДС.Параметры.НДС, ":", "");
						КонецЕсли;
						
						ТабличныйДокумент.Вывести(ОбластьПодвалНДС);
						
					КонецЦикла;
					СтруктураДанныхПодвалВсегоСНДС = Новый Структура;
					СтруктураДанныхПодвалНДС.Вставить("ВсегоСНДС", ФормированиеПечатныхФорм.ФорматСумм(ДанныеПечати.СуммаДокумента));
					ОбластьПодвалСНДС.Параметры.Заполнить(СтруктураДанныхПодвалНДС);
					ТабличныйДокумент.Вывести(ОбластьПодвалСНДС);
					
				Иначе
					СтруктураДанныхПодвалНДС = Новый Структура;
					Если ДокОснование.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
						СтруктураДанныхПодвалНДС.Вставить("НДС", НСтр("ru='НДС исчисляется налоговым агентом'"));	
					Иначе
						СтруктураДанныхПодвалНДС.Вставить("НДС", НСтр("ru='Без налога (НДС)'"));
					КонецЕсли;
					СтруктураДанныхПодвалНДС.Вставить("ВсегоНДС", "-");
					ОбластьПодвалНДС.Параметры.Заполнить(СтруктураДанныхПодвалНДС);
					ТабличныйДокумент.Вывести(ОбластьПодвалНДС);
				КонецЕсли;
				
				// Вывести Сумму прописью
				СуммаКПрописи = ДанныеПечати.СуммаДокумента;
				ИтоговаяСтрока = НСтр("ru = 'Всего наименований %Количество%, на сумму %Сумма%'; en = 'Total items %Количество%, to the amount of %Сумма%'; Tr = 'Toplam ürün %Количество%, miktarına %Сумма%'", КодЯзыка);
				ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Количество%", НомерСтроки);
				ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Сумма%",      ФормированиеПечатныхФорм.ФорматСумм(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта));
				
				СтруктураДанныхСуммаПрописью = Новый Структура;
				Если ДанныеПечати.СчетКВозврату Тогда
					
					СуммаКВозврату = ДанныеПечати.СуммаКВозврату;
					СуммаИтого = СуммаКПрописи-СуммаКВозврату;
					Если СуммаИтого < 0 Тогда
						СуммаИтого = 0;
					КонецЕсли;
					СтруктураДанныхСуммаПрописью.Вставить("СуммаВозврата", ФормированиеПечатныхФорм.ФорматСумм(СуммаКВозврату, ДанныеПечати.Валюта));
					СтруктураДанныхСуммаПрописью.Вставить("СуммаИтогоКОплате", ФормированиеПечатныхФорм.ФорматСумм(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта, "0"));
					СтруктураДанныхСуммаПрописью.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта,,КодЯзыка));
				Иначе
					
					СтруктураДанныхСуммаПрописью.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаДокумента, ДанныеПечати.Валюта,,КодЯзыка));
				КонецЕсли;
				
				СтруктураДанныхСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
				ОбластьСуммаПрописью.Параметры.Заполнить(СтруктураДанныхСуммаПрописью);
				ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
				
				
			КонецЕсли;
			// если в заказе клиенте указан аванс - то рассчитаем эту сумму +остаток к оплате
			Если ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
				СсылкаДляЗаказа = ДанныеПечати.Ссылка.ЗаказКлиента;
			ИначеЕсли ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
				СсылкаДляЗаказа = ДанныеПечати.Ссылка.ДокументОснование;
				Если ТипЗНЧ(СсылкаДляЗаказа) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
					СсылкаДляЗаказа = СсылкаДляЗаказа.ЗаказКлиента;
				КонецЕсли;
			Иначе
				СсылкаДляЗаказа = ДанныеПечати.Ссылка;
				
			КонецЕсли;
			Если КодЯзыка = "ru" Тогда
				Попытка
					
					Если ЗначениеЗаполнено(СсылкаДляЗаказа) Тогда 
						Если ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
							
							Если НЕ ДанныеПечати.Ссылка.ЧастичнаяОплата    Тогда
								
								Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
									ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";	
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" руб."+Символы.ПС+
										"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" руб. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									
									
								Иначе
									
									ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
									Если ПроцАванс <> Неопределено  Тогда 
										ПроцОстаток = 100-ПроцАванс;
										СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
										СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
										ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта);
										ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
										Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
											"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
										Иначе
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" руб."+Символы.ПС+
											"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" руб. ("+ ОстатокПрописью+ ").";
										КонецЕсли;
										ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;	
						Иначе		
							Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
								ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
								ПроцОстаток = 100-ПроцАванс;
								СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
								СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
								ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта);
								ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса"); 
								Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
									"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
								Иначе
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" руб."+Символы.ПС+
									"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" руб. ("+ ОстатокПрописью+ ").";
								КонецЕсли;
								ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								
							Иначе 
								ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
								Если ПроцАванс <> Неопределено Тогда 
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Аванс ("+Строка(ПроцАванс) +"%) получен в сумме "+ Строка(СуммаАванса)+" руб."+Символы.ПС+
										"К оплате ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" руб. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				Исключение
					
				КонецПопытки;
			КонецЕсли; 
			//ИнглишАванс
			Если КодЯзыка = "en" Тогда            
				Попытка
					
					Если ЗначениеЗаполнено(СсылкаДляЗаказа) Тогда 
						Если ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
							
							Если НЕ ДанныеПечати.Ссылка.ЧастичнаяОплата    Тогда
								
								Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
									ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									Если Строка(ДокОснование.Валюта) = "USD" Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									
									
								Иначе
									
									ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
									Если ПроцАванс <> Неопределено  Тогда 
										ПроцОстаток = 100-ПроцАванс;
										СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
										СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
										ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
										ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
										Если Строка(ДокОснование.Валюта) = "USD" Тогда
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
											"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
										Иначе
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
											"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
										КонецЕсли;
										ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;	
						Иначе		
							Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
								ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
								ПроцОстаток = 100-ПроцАванс;
								СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
								СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
								ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
								ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
								Если Строка(ДокОснование.Валюта) = "USD" Тогда
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
									"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
								Иначе
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
									"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
								КонецЕсли;
								ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								
							Иначе 
								ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
								Если ПроцАванс <> Неопределено Тогда 
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса"); 
									Если Строка(ДокОснование.Валюта) = "USD" Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				Исключение
					
				КонецПопытки;
			КонецЕсли; 
			//ИнглишАванс  
			//АрабишАванс
			Если КодЯзыка = "ar" Тогда
				Попытка
					
					Если ЗначениеЗаполнено(СсылкаДляЗаказа) Тогда 
						Если ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
							
							Если НЕ ДанныеПечати.Ссылка.ЧастичнаяОплата    Тогда
								
								Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
									ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = Строка(РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,"en"));
									СтрокаАрабская1 = "المصاريف المدفوعة مسبقا ("+Строка(ПроцАванс) +"%) المبالغ الواردة في المجموع "+ Строка(СуммаАванса)+" روبل";
									СтрокаАрабская2 = "تدفع" + "("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+"روبل";
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = СтрокаАрабская1 + Символы.ПС + СтрокаАрабская2 + Символы.ПС + "(" + ОстатокПрописью + ")";								
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									
									
								Иначе
									
									ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
									Если ПроцАванс <> Неопределено  Тогда 
										ПроцОстаток = 100-ПроцАванс;
										СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
										СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
										ОстатокПрописью = Строка(РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,"en"));
										СтрокаАрабская1 = "المصاريف المدفوعة مسبقا ("+Строка(ПроцАванс) +"%) المبالغ الواردة في المجموع "+ Строка(СуммаАванса)+" روبل";
										СтрокаАрабская2 = "تدفع" + "("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+"روبل";
										ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = СтрокаАрабская1 + Символы.ПС + СтрокаАрабская2 + Символы.ПС + "(" + ОстатокПрописью + ")";
										ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;	
						Иначе		
							Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
								ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
								ПроцОстаток = 100-ПроцАванс;
								СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
								СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
								ОстатокПрописью = Строка(РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,"en"));
								СтрокаАрабская1 = "المصاريف المدفوعة مسبقا ("+Строка(ПроцАванс) +"%) المبالغ الواردة في المجموع "+ Строка(СуммаАванса)+" روبل";
								СтрокаАрабская2 = "تدفع" + "("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+"روبل";
								ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
								ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = СтрокаАрабская1 + Символы.ПС + СтрокаАрабская2 + Символы.ПС + "(" + ОстатокПрописью + ")";
								ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								
							Иначе 
								ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
								Если ПроцАванс <> Неопределено Тогда 
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = Строка(РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,"en"));
									СтрокаАрабская1 = "المصاريف المدفوعة مسبقا ("+Строка(ПроцАванс) +"%) المبالغ الواردة في المجموع "+ Строка(СуммаАванса)+" روبل";
									СтрокаАрабская2 = "تدفع" + "("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+"روبل";
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = СтрокаАрабская1 + Символы.ПС + СтрокаАрабская2 + Символы.ПС + "(" + ОстатокПрописью + ")";
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				Исключение
					
				КонецПопытки;
			КонецЕсли;
			//АрабишАванс
			//ТуркинАванс
			Если КодЯзыка = "Tr" Тогда            
				Попытка
					
					Если ЗначениеЗаполнено(СсылкаДляЗаказа) Тогда 
						Если ТипЗНЧ(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда 
							
							Если НЕ ДанныеПечати.Ссылка.ЧастичнаяОплата    Тогда
								
								Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
									ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
									Если Строка(ДокОснование.Валюта) = "USD" Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									
									
								Иначе
									
									ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
									Если ПроцАванс <> Неопределено  Тогда 
										ПроцОстаток = 100-ПроцАванс;
										СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
										СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
										ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
										ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
										Если Строка(ДокОснование.Валюта) = "USD" Тогда
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
											"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
										Иначе
											ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
											"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
										КонецЕсли;
										ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;	
						Иначе		
							Если  ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа<100 Тогда 
								ПроцАванс = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].ПроцентПлатежа;
								ПроцОстаток = 100-ПроцАванс;
								СуммаАванса = ДанныеПечати.Ссылка.ЭтапыГрафикаОплаты[0].СуммаПлатежа;
								СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
								ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
								ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса");
								Если Строка(ДокОснование.Валюта) = "USD" Тогда
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
									"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
								Иначе
									ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
									"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
								КонецЕсли;
								ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								
							Иначе 
								ПроцАванс = ПолучитьЗначениеДопРеквизита(СсылкаДляЗаказа, "Процент аванса");
								Если ПроцАванс <> Неопределено Тогда 
									ПроцОстаток = 100-ПроцАванс;
									СуммаАванса = Окр(ДанныеПечати.СуммаДокумента /100*ПроцАванс,2);
									СуммаОстаток = ДанныеПечати.СуммаДокумента - СуммаАванса;
									ОстатокПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаОстаток, ДанныеПечати.Валюта,,КодЯзыка);
									ОбластьПодвалАванс             = Макет.ПолучитьОбласть("ДополнительнаяИнформацияСуммаАванса"); 
									Если Строка(ДокОснование.Валюта) = "USD" Тогда
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" USD."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" USD. ("+ ОстатокПрописью+ ").";
									Иначе
										ОбластьПодвалАванс.Параметры.ДополнительнаяИнформацияСуммаАванса = "Prepaid expense ("+Строка(ПроцАванс) +"%) received in total "+ Строка(СуммаАванса)+" Rub."+Символы.ПС+
										"To be paid ("+Строка(ПроцОстаток)+ "%) : "+ Строка(СуммаОстаток)+" Rub. ("+ ОстатокПрописью+ ").";
									КонецЕсли;
									ТабличныйДокумент.Вывести(ОбластьПодвалАванс);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				Исключение
					
				КонецПопытки;
			КонецЕсли; 
			//ТуркинАванс 
			ЗаполнитьРеквизитыПодвалаСчетаНаОплату(ДанныеПечати, Макет, ТабличныйДокумент, ТаблицаЭтапыОплаты, СоответствиеСтавокНДС, ПараметрыПечати);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Функция ПечатьПредварительныйПросмотрСчетаНаОплату(Организация, ОбъектыПечати, ИмяМакета, ДанныеПечати)
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЧЕТНАОПЛАТУ";
		
		Макет = ПолучитьМакет("ПФ_MXL_СчетНаОплату2");
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьМакета, "ЗаголовокСчета", Организация);
		
		СсылкаНового = Документы.СчетНаОплатуКлиенту.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, СсылкаНового);
		
		КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		СтруктураИмяДопКолонки = Новый Структура("ИмяКолонкиКодов", КолонкаКодов);
		ВыводитьНДС = Константы.ВыводитьДопКолонкиНДС.Получить();
		СуффиксОбласти = ?(ВыводитьНДС, "СНДС", "");
		
		Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
		ОбластьПервойКолонкиТоваров = Макет.Область("ПерваяКолонкаТовара");
		Если НЕ ВыводитьКоды Тогда
			ОбластьПервойКолонкиТоваров.ШиринаКолонки = ОбластьПервойКолонкиТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
			Макет.УдалитьОбласть(Макет.Область("КолонкаКодов"), Смещать);
		КонецЕсли;
		
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ТекущаяДатаСеанса());
		ДатаПлатежа = ТекущаяДатаСеанса();
		
		СтруктураДанныхШапки = Новый Структура;
		Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
			НадписьСрокДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Счет действителен до %1.'; en = 'The account is valid until %1.'; ar = 'الحساب صالح حتى %1.'; Tr = 'Hesap %1 tarihine kadar geçerlidir.'", КодЯзыка), Формат(ДатаПлатежа, "ДЛФ=D")) + " ";
			СтруктураДанныхШапки.Вставить("СрокДействия", НадписьСрокДействия);
		КонецЕсли;
		
		СтруктураДанныхШапки.Вставить("ИНН", СведенияОПоставщике.ИНН);
		СтруктураДанныхШапки.Вставить("КПП",СведенияОПоставщике.КПП);
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
		СтруктураПараметров.Организация = Организация;
		БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	БанковскиеСчета.НомерСчета КАК НомерСчета,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
			|			ТОГДА БанковскиеСчета.НаименованиеБанка
			|		ИНАЧЕ БанковскиеСчета.Банк.Наименование
			|	КОНЕЦ КАК НаименованиеБанка,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
			|			ТОГДА БанковскиеСчета.БИКБанка
			|		ИНАЧЕ БанковскиеСчета.Банк.Код
			|	КОНЕЦ КАК БИКБанкаДляРасчетов,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
			|			ТОГДА БанковскиеСчета.КоррСчетБанка
			|		ИНАЧЕ БанковскиеСчета.Банк.КоррСчет
			|	КОНЕЦ КАК КоррСчетБанка,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка
			|			ТОГДА БанковскиеСчета.ГородБанка
			|		ИНАЧЕ БанковскиеСчета.Банк.Город
			|	КОНЕЦ КАК ГородБанкаДляРасчетов,
			|	БанковскиеСчета.ТекстКорреспондента КАК ТекстКорреспондента
			|ИЗ
			|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
			|ГДЕ
			|	БанковскиеСчета.БанкДляРасчетов = ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
			|	И БанковскиеСчета.Ссылка = &БанковскийСчет
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БанковскиеСчета.Банк.КоррСчет,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов
			|			ТОГДА БанковскиеСчета.НаименованиеБанкаДляРасчетов
			|		ИНАЧЕ БанковскиеСчета.БанкДляРасчетов.Наименование
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов
			|			ТОГДА БанковскиеСчета.БИКБанкаДляРасчетов
			|		ИНАЧЕ БанковскиеСчета.БанкДляРасчетов.Код
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов
			|			ТОГДА БанковскиеСчета.КоррСчетБанкаДляРасчетов
			|		ИНАЧЕ БанковскиеСчета.БанкДляРасчетов.КоррСчет
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов
			|			ТОГДА БанковскиеСчета.ГородБанкаДляРасчетов
			|		ИНАЧЕ БанковскиеСчета.БанкДляРасчетов.Город
			|	КОНЕЦ,
			|	БанковскиеСчета.ТекстКорреспондента
			|ИЗ
			|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
			|ГДЕ
			|	БанковскиеСчета.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
			|	И БанковскиеСчета.Ссылка = &БанковскийСчет";
			
			Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
			РеквизитыСчета = Запрос.Выполнить().Выбрать();
			
			Если РеквизитыСчета.Следующий() Тогда
				СтруктураДанныхШапки.Вставить("БИКБанкаПолучателя", РеквизитыСчета.БИКБанкаДляРасчетов);
				СтруктураДанныхШапки.Вставить("БанкПолучателя", РеквизитыСчета.НаименованиеБанка);
				СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", СокрЛП(РеквизитыСчета.НаименованиеБанка) + " " + РеквизитыСчета.ГородБанкаДляРасчетов);
				СтруктураДанныхШапки.Вставить("СчетБанкаПолучателя", РеквизитыСчета.КоррСчетБанка);
				СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", РеквизитыСчета.КоррСчетБанка);
				СтруктураДанныхШапки.Вставить("СчетПолучателяПредставление", РеквизитыСчета.НомерСчета);
				СтруктураДанныхШапки.Вставить("СчетПолучателя", РеквизитыСчета.НомерСчета);
				ПредставлениеПоставщикаДляПлатПоручения = РеквизитыСчета.ТекстКорреспондента;
			КонецЕсли;
		КонецЕсли;
		
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда                                                                                                
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		
		СтруктураДанныхШапки.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
		СтруктураДанныхШапки.Вставить("НазначениеПлатежа", НСтр("ru='Предварительный просмотр печати счета на оплату.'")); 
		
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ДанныеЗаголовка = Новый Структура;
		ДанныеЗаголовка.Вставить("Номер", "00000000001");
		ДанныеЗаголовка.Вставить("от", Нстр("ru = 'от'; en = 'of'", КодЯзыка));
		Если КодЯзыка = "ru" Тогда
			ДанныеЗаголовка.Вставить("Дата", ДатаПлатежа);
		КонецЕсли;
		Если КодЯзыка = "en" Тогда
			ДанныеЗаголовка.Вставить("Дата", Формат(ДатаПлатежа, "Л=en"));
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ДанныеЗаголовка.Вставить("Дата", Формат(ДатаПлатежа, "Л=ar_EG"));
		КонецЕсли; 
		Если КодЯзыка = "Tr" Тогда
			ДанныеЗаголовка.Вставить("Дата", Формат(ДатаПлатежа, "Л=tr_TR"));
		КонецЕсли;
		
		ДанныеЗаголовка.Вставить("Представление", НСтр("ru = 'Счет на оплату'; en = 'Payment invoice'; ar = 'فاتورة الدفع'; Tr = 'Ödeme faTrası'", КодЯзыка));
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеЗаголовка, НСтр("ru = 'Счет на оплату'; en = 'Payment invoice'", КодЯзыка));
		СтруктураДанныхШапки = Новый Структура; 
		Если КодЯзыка = "en" Тогда
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","of");
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","من");
		КонецЕсли; 
		Если КодЯзыка = "Tr" Тогда
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка,"от","-den");
		КонецЕсли; 
		
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		
		СтруктураДанныхПоставщик = Новый Структура;
		СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", 
		ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ДатаПлатежа),
		"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		СтруктураДанныхПокупатель = Новый Структура;
		СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", 
		НСтр("ru = 'Поле содержит информацию покупателя: полное наименование, ИНН, КПП, юридический адрес, телефоны.'"));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьМакета.Параметры.Заполнить(СтруктураИмяДопКолонки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти);
		Товары = Новый Структура;
		Товары.Вставить("НомерСтроки",      1);
		Товары.Вставить("Артикул",          "АРТ-000001");
		Товары.Вставить("Код",              "000001");
		Товары.Вставить("Товар",            НСтр("ru='Товар (предварительный просмотр)'"));
		Товары.Вставить("Количество",       1);
		Товары.Вставить("ЕдиницаИзмерения", НСтр("ru='шт'"));
		Товары.Вставить("Цена",             118.00);
		Товары.Вставить("СтавкаНДС",        "18%");
		Товары.Вставить("СуммаНДС",         18.00);
		Товары.Вставить("Сумма",            118.00);
		ОбластьМакета.Параметры.Заполнить(Товары);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыЧастичнаяОплата");
		ОбластьМакета.Параметры.Заполнить(Новый Структура("Всего", Товары.Сумма));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыНДС");
		ОбластьМакета.Параметры.Заполнить(Новый Структура("НДС, ВсегоНДС", НСтр("ru = 'В т.ч. НДС (18%)'"), Товары.СуммаНДС));  
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыВсего");
		ОбластьМакета.Параметры.Заполнить(Новый Структура("ВсегоСНДС", Товары.Сумма));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		
		СуммаКПрописи = 118;
		ИтоговаяСтрока = НСтр("ru='Всего наименований %Количество%, на сумму %Сумма%'");
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Количество%", Товары.Количество);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Сумма%",      ФормированиеПечатныхФорм.ФорматСумм(ДанныеПечати.СуммаДокумента, Валюта));
		
		СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаДокумента, Валюта,,КодЯзыка);
		
		СтруктураДанныхСуммаПрописью = Новый Структура("СуммаПрописью, ИтоговаяСтрока", СуммаПрописью, ИтоговаяСтрока);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
		ФормированиеПечатныхФорм.ВывестиФаксимилеВТабличныйДокумент(Макет, ОбластьМакета, Организация, Новый Структура("ОтображатьФаксимиле", Истина));
		Если НЕ КодЯзыка = "ru" Тогда
			ОбластьМакета = СТрЗаменить(Макет.ПолучитьОбласть("ПодвалТаблицыВсего"), "В т.ч.", " ");
		КонецЕсли;
		// Вывести подписи
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация);
		СтруктураДанныхПодвал = Новый Структура;
		СтруктураДанныхПодвал.Вставить("ФИОРуководителя", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныеЛица.Руководитель));
		СтруктураДанныхПодвал.Вставить("ФИОБухгалтера", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныеЛица.ГлавныйБухгалтер));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПодвал);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	#КонецОбласти
	
	#Область Прочее
	
	Процедура ПроверкаЗаполненияДокумента(ДанныеПечати, ТаблицаТовары, Выборка, ТаблицаЭтапыОплаты, ШаблоныОшибок, Отказ);
		
		Если КодЯзыка = Неопределено Тогда
			ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
			ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
			ДокЯз.Прочитать();
			Язычник = ДокЯз[0].Язык;
			Если Язычник = Перечисления.Языки.Русский Тогда
				КодЯзыка = "ru";
			КонецЕсли; 
			Если Язычник = Перечисления.Языки.Английский Тогда 
				КодЯзыка = "en";
			КонецЕсли;
			Если Язычник = Перечисления.Языки.Арабский Тогда 
				КодЯзыка = "ar";
			КонецЕсли; 
			Если Язычник = Перечисления.Языки.Турецкий Тогда 
				КодЯзыка = "Tr";
			КонецЕсли;
		КонецЕсли;
		
		Завершить = Ложь;
		Сообщение = Новый СообщениеПользователю; 
		//Проверка заполненя подписантов		
		Если КодЯзыка <> "ru" Тогда
			Если ПустаяСтрока(ДокОснование.Руководитель.РабочееНаименованиеИнглиш) ИЛИ ПустаяСтрока(ДокОснование.Руководитель.ДолжностьИнглиш) ИЛИ ПустаяСтрока(ДокОснование.ГлавныйБухгалтер.РабочееНаименованиеИнглиш)            
				ИЛИ ПустаяСтрока(ПолучитьСтрокуНаЛатинском(ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер, ДанныеПечати.Дата))) Тогда
				Сообщение.Текст = "Ошибка (Не заполнены подписанты на иностранном языке!)";
				Сообщение.Сообщить();
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(ДанныеПечати.Руководитель) ИЛИ ПустаяСтрока(ДанныеПечати.ДолжностьРуководителя) ИЛИ ПустаяСтрока(ДанныеПечати.ГлавныйБухгалтер)            
				ИЛИ ПустаяСтрока(ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Менеджер, ДанныеПечати.Дата)) Тогда
				Сообщение.Текст = "Ошибка (Не заполнены подписанты!)";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
		//Проверка заполнения таблицы - "Товары" для документа с основагнием - "Отгрузка" 
		Если ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.Отгрузка") И ДанныеПечати.ЧастичнаяОплата = Ложь Тогда 
			Если Выборка = Неопределено Тогда 	 
				Отказ = Истина; 
			Иначе 
				ВыборкаТовары = Выборка.Товары.Выбрать();
				Пока ВыборкаТовары.Следующий() Цикл
					Если КодЯзыка = "en" Тогда
						Если ПустаяСтрока(ВыборкаТовары.НоменклатураНаименованиеЯзык1) Тогда
							Сообщение.Текст = "Ошибка (Присутствуют пустые строки таблицы товаров!)";
							Сообщение.Сообщить();
							Прервать;
						ИначеЕсли ВыборкаТовары.НоменклатураНаименованиеЯзык1 = ВыборкаТовары.Товар Тогда 
							Сообщение.Текст = "Ошибка (Не заполнена номенклатура на иностранном языке!)";
							Сообщение.Сообщить();
							Прервать;
						КонецЕсли;
					ИначеЕсли КодЯзыка = "ru" Тогда  
						Если ПустаяСтрока(ВыборкаТовары.Товар) Тогда
							Сообщение.Текст = "Ошибка (Присутствуют пустые строки таблицы товаров!)";
							Сообщение.Сообщить();
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		//Проверка заполния таблицы товары
		Если НЕ ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.Отгрузка") Тогда
			Если НЕ (ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетНаОплатуКлиенту")  
				И ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов"))   
				И ТаблицаТовары <> Неопределено И ТаблицаТовары.Количество() = 0 Тогда
				Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.ЗаменяющиеТовары, ДанныеПечати.Ссылка), ДанныеПечати.Ссылка);
				Иначе
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.Товары, ДанныеПечати.Ссылка), ДанныеПечати.Ссылка);
				КонецЕсли;
				Отказ = Истина;
				Возврат; 
			Иначе
				Если ДанныеПечати.ЧастичнаяОплата = Ложь Тогда
					Для каждого Стр Из ТаблицаТовары Цикл
						Если Не ПустаяСтрока(Стр.Номенклатура) Тогда
							Запрос = Новый Запрос;
							Запрос.Текст = "ВЫБРАТЬ
							|	Номенклатура.НаименованиеЯзык1 КАК НаименованиеЯзык1,
							|	Номенклатура.Наименование КАК Наименование
							|ИЗ
							|	Справочник.Номенклатура КАК Номенклатура
							|ГДЕ
							|	Номенклатура.Ссылка = &Ссылка";
							Запрос.УстановитьПараметр("Ссылка", Стр.Номенклатура);  
							РезультатЗапроса = Запрос.Выполнить().Выбрать(); 
							Пока РезультатЗапроса.Следующий() Цикл
								Если КодЯзыка <> "ru" Тогда
									Если  РезультатЗапроса.НаименованиеЯзык1 = РезультатЗапроса.Наименование ИЛИ ПустаяСтрока(РезультатЗапроса.НаименованиеЯзык1) Тогда
										Сообщение.Текст = "Ошибка (Номенклатура не заполнена на иностранном языке!)";
										Сообщение.Сообщить();
										Завершить = Истина;
										Прервать;
									КонецЕсли;   
								КонецЕсли;	  
							КонецЦикла;
						Иначе 
							Сообщение.Текст = "Ошибка (Номенклатура не заполнена!)";
							Сообщение.Сообщить();
							Прервать;
						КонецЕсли; 
						Если Завершить = Истина Тогда 
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
		Если ТаблицаЭтапыОплаты <> Неопределено И ТаблицаЭтапыОплаты.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.Этапы, ДанныеПечати.Ссылка), ДанныеПечати.Ссылка);
			Отказ = Истина;
		КонецЕсли;
		
	КонецПроцедуры
	
	Функция СуммаКОплатеПоСчету(ДанныеПечати, ТаблицаТовары)
		
		Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.АвансовыйОтчет")
			ИЛИ ТипЗнч(ДанныеПечати.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту")
			ИЛИ ДанныеПечати.ЧастичнаяОплата Тогда
			
			СуммаКОплатеПоСчету = ДанныеПечати.СуммаДокумента;
			
		Иначе
			
			СуммаКОплатеПоСчету = 0;
			Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
				СуммаКОплатеПоСчету = СуммаКОплатеПоСчету
				+ СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС);
			КонецЦикла;
			
			Если ДанныеПечати.СчетКВозврату Тогда
				СуммаКОплатеПоСчету = СуммаКОплатеПоСчету - ДанныеПечати.СуммаКВозврату;
				Если СуммаКОплатеПоСчету < 0 Тогда
					СуммаКОплатеПоСчету = 0;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат СуммаКОплатеПоСчету;
		
	КонецФункции
	
	Функция НовыеПараметрыСтрокиЭтапа()
		
		СтруктураСтрокиЭтапа = Новый Структура;
		СтруктураСтрокиЭтапа.Вставить("НомерСтроки", 0);
		СтруктураСтрокиЭтапа.Вставить("ДатаПлатежа", '00010101');
		СтруктураСтрокиЭтапа.Вставить("ПроцентПлатежа", 0);
		СтруктураСтрокиЭтапа.Вставить("СуммаПлатежа", 0);
		СтруктураСтрокиЭтапа.Вставить("ТекстНДС", "");
		СтруктураСтрокиЭтапа.Вставить("ЭтоЗалогЗаТару", Ложь);
		
		Возврат СтруктураСтрокиЭтапа;
		
	КонецФункции
	
	Процедура ВывестиQRКод(РеквизитыПлатежа, ДанныеПечати, ОбластьМакета)
		
		QRСтрока = УправлениеПечатьюРФ.ФорматнаяСтрокаУФЭБС(РеквизитыПлатежа);
		
		Если Не ПустаяСтрока(QRСтрока) Тогда
			
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRСтрока, 0, 190);
			
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОбластьМакета.Рисунки.QRКод.Картинка = КартинкаQRКода;
			Иначе
				Шаблон = Нстр("ru = 'Не удалось сформировать QR-код для документа %1.
				|Технические подробности см. в журнале регистрации.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ДанныеПечати.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Функция ОписаниеОрганизации(ДанныеПечати, ИмяОрганизации)
		
		Сведения = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати[ИмяОрганизации], ДанныеПечати.Дата);
		РеквизитыОрганизации = "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,";
		
		Возврат ФормированиеПечатныхФорм.ОписаниеОрганизации(Сведения, РеквизитыОрганизации);
		
	КонецФункции
	
	Функция РеквизитыПлатежаQRКод(СтруктураДанныхШапки)
		
		РеквизитыПлатежа = Новый Структура;
		РеквизитыПлатежа.Вставить("ТекстПолучателя", СтруктураДанныхШапки.ПредставлениеПоставщикаДляПлатПоручения);
		РеквизитыПлатежа.Вставить("НомерСчетаПолучателя", СтруктураДанныхШапки.СчетПолучателяПредставление);
		РеквизитыПлатежа.Вставить("НаименованиеБанкаПолучателя", СтруктураДанныхШапки.БанкПолучателяПредставление);
		РеквизитыПлатежа.Вставить("БИКБанкаПолучателя", СтруктураДанныхШапки.БИКБанкаПолучателя);
		РеквизитыПлатежа.Вставить("СчетБанкаПолучателя", СтруктураДанныхШапки.СчетБанкаПолучателяПредставление);
		РеквизитыПлатежа.Вставить("СуммаЧислом");
		РеквизитыПлатежа.Вставить("НазначениеПлатежа", СтруктураДанныхШапки.НазначениеПлатежа);
		РеквизитыПлатежа.Вставить("ИННПолучателя", СтруктураДанныхШапки.ИНН);
		РеквизитыПлатежа.Вставить("КПППолучателя", СтруктураДанныхШапки.КПП);
		
		Возврат РеквизитыПлатежа
		
	КонецФункции
	
	Функция ПолучитьСтрокуНаЛатинском(ИсходныйТекст)
		СоответствиеСимволов = Новый Соответствие;
		СоответствиеСимволов.Вставить("А", "A");
		СоответствиеСимволов.Вставить("Б", "B");
		СоответствиеСимволов.Вставить("В", "V");
		СоответствиеСимволов.Вставить("Г", "G");
		СоответствиеСимволов.Вставить("Д", "D");
		СоответствиеСимволов.Вставить("Е", "E");
		СоответствиеСимволов.Вставить("Ё", "E");
		СоответствиеСимволов.Вставить("Ж", "Zh");
		СоответствиеСимволов.Вставить("З", "Z");
		СоответствиеСимволов.Вставить("И", "I");
		СоответствиеСимволов.Вставить("Й", "Y");
		СоответствиеСимволов.Вставить("К", "K");
		СоответствиеСимволов.Вставить("Л", "L");
		СоответствиеСимволов.Вставить("М", "M");
		СоответствиеСимволов.Вставить("Н", "N");
		СоответствиеСимволов.Вставить("О", "O");
		СоответствиеСимволов.Вставить("П", "P");
		СоответствиеСимволов.Вставить("Р", "R");
		СоответствиеСимволов.Вставить("С", "S");
		СоответствиеСимволов.Вставить("Т", "T");
		СоответствиеСимволов.Вставить("У", "U");
		СоответствиеСимволов.Вставить("Ф", "F");
		СоответствиеСимволов.Вставить("Х", "Kh");
		СоответствиеСимволов.Вставить("Ц", "Ts");
		СоответствиеСимволов.Вставить("Ч", "Ch");
		СоответствиеСимволов.Вставить("Ш", "Sh");
		СоответствиеСимволов.Вставить("Щ", "Shch");
		СоответствиеСимволов.Вставить("Ъ", "");
		СоответствиеСимволов.Вставить("Ы", "Y");
		СоответствиеСимволов.Вставить("Ь", "");
		СоответствиеСимволов.Вставить("Э", "E");
		СоответствиеСимволов.Вставить("Ю", "Yu");
		СоответствиеСимволов.Вставить("Я", "Ya");
		СоответствиеСимволов.Вставить("а", "a");
		СоответствиеСимволов.Вставить("б", "b");
		СоответствиеСимволов.Вставить("в", "v");
		СоответствиеСимволов.Вставить("г", "g");
		СоответствиеСимволов.Вставить("д", "d");
		СоответствиеСимволов.Вставить("е", "e");
		СоответствиеСимволов.Вставить("ё", "e");
		СоответствиеСимволов.Вставить("ж", "zh");
		СоответствиеСимволов.Вставить("з", "z");
		СоответствиеСимволов.Вставить("и", "i");
		СоответствиеСимволов.Вставить("й", "y");
		СоответствиеСимволов.Вставить("к", "k");
		СоответствиеСимволов.Вставить("л", "l");
		СоответствиеСимволов.Вставить("м", "m");
		СоответствиеСимволов.Вставить("н", "n");
		СоответствиеСимволов.Вставить("о", "o");
		СоответствиеСимволов.Вставить("п", "p");
		СоответствиеСимволов.Вставить("р", "r");
		СоответствиеСимволов.Вставить("с", "s");
		СоответствиеСимволов.Вставить("т", "t");
		СоответствиеСимволов.Вставить("у", "u");
		СоответствиеСимволов.Вставить("ф", "f");
		СоответствиеСимволов.Вставить("х", "kh");
		СоответствиеСимволов.Вставить("ц", "ts");
		СоответствиеСимволов.Вставить("ч", "ch");
		СоответствиеСимволов.Вставить("ш", "sh");
		СоответствиеСимволов.Вставить("щ", "shch");
		СоответствиеСимволов.Вставить("ъ", "");
		СоответствиеСимволов.Вставить("ы", "y");
		СоответствиеСимволов.Вставить("ь", "");
		СоответствиеСимволов.Вставить("э", "e");
		СоответствиеСимволов.Вставить("ю", "yu");
		СоответствиеСимволов.Вставить("я", "ya");
		
		ИсходныйТекст = СокрЛП(ТРег(ИсходныйТекст));
		ГотовоеЗначение = "";
		ТекущийСимвол = "";
		ТекущийГотовыйСимвол = "";
		Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
			ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
			ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
			Если ТекущийГотовыйСимвол = Неопределено Тогда
				ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
			Иначе
				ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
			КонецЕсли;
			
		КонецЦикла;
		Возврат ГотовоеЗначение;
	КонецФункции 
	
	
	Функция ПолучитьЗначениеДопРеквизита(лкСсылка, Свойство) Экспорт
		
		ПараметрыОтбора = Новый Структура;
		ДопСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(Свойство);
		ПараметрыОтбора.Вставить("Свойство",ДопСвойство);
		Массив = лкСсылка.ДополнительныеРеквизиты.НайтиСтроки(ПараметрыОтбора);
		
		Если Массив.Количество() = 0 Тогда
			Возврат Неопределено;
		Иначе
			Возврат Массив[0].Значение;
		КонецЕсли;
		
	КонецФункции
	
	#КонецОбласти
	
	#КонецОбласти
	
#КонецЕсли