#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Перем КодЯзыка;   
	Перем Макет;
	Перем СправочникТабличнаяЧасть;
	Перем ДокОснование;
	Перем СтрокаТЧ;
	
	Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
			ПараметрыПечати = Новый Структура("ПечатьВВалюте, ДополнитьКомплектВнешнимиПечатнымиФормами, ДополнитьПолученнымиСчетамиФактуры",Ложь,Ложь,Ложь);
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СчетФактура",
			НСтр("ru='Счет-фактура'"),
			СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
			
		КонецЕсли;
		
		ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
		
	КонецПроцедуры
	
	#Область Прочее
	
	Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
		ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
	КонецПроцедуры
	
	Функция СтруктураРесурсовДляИтогов()
		
		Структура = Новый Структура;
		
		Структура.Вставить("СуммаБезНДС",       0);
		Структура.Вставить("СуммаНДС",          0);
		Структура.Вставить("СуммаСНДС",         0);
		Структура.Вставить("Количество",        0);
		Структура.Вставить("КоличествоМест",    0);
		Структура.Вставить("КоличествоПринято", 0);
		Структура.Вставить("МассаБрутто",       0);
		Структура.Вставить("МассаНетто",        0);
		Структура.Вставить("Сумма",             0);
		
		Структура.Вставить("РазницаБезНДСУвеличение", 0);
		Структура.Вставить("РазницаБезНДСУменьшение", 0);
		Структура.Вставить("РазницаНДСУвеличение",    0);
		Структура.Вставить("РазницаНДСУменьшение",    0);
		Структура.Вставить("РазницаСНДСУвеличение",   0);
		Структура.Вставить("РазницаСНДСУменьшение",   0);
		
		Возврат Структура;
		
	КонецФункции
	
	Функция ПараметрыМассыПрописью(Масса, КоэффициентПересчетаВТонны)
		
		МассаТонны = Масса * КоэффициентПересчетаВТонны;
		Если МассаТонны > 1 Тогда
			Коэффициент = 1;
			СтрокаФормат = "т, т, т, ж, кг, кг, кг, м, " + ?(Окр(МассаТонны) = МассаТонны, "0", "3");
		ИначеЕсли МассаТонны * 1000 > 1 Тогда
			Коэффициент = 1000;
			СтрокаФормат = "кг, кг, кг, м, г, г, г, м, " + ?(Окр(МассаТонны * Коэффициент) = МассаТонны * Коэффициент, "0", "3");
		Иначе
			Коэффициент = 1000000;
			СтрокаФормат = "г, г, г, м, г, г, г, м, 0";
		КонецЕсли;
		
		Возврат Новый Структура("Формат, Коэффициент", СтрокаФормат, Коэффициент*КоэффициентПересчетаВТонны);
		
	КонецФункции
	
	Функция СведенияОГрузоотправителе(ДанныеПечати)
		
		Если ТипЗнч(ДанныеПечати.Грузоотправитель) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") Тогда
			СведенияОГрузоотправителе = Справочники.РегистрацииВНалоговомОргане.СведенияОПодразделении(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		Иначе
			СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		КонецЕсли;
		
		Возврат СведенияОГрузоотправителе;
		
	КонецФункции
	
	Процедура ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьМакета)
		
		Для Сч = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
			
			ТекПараметр = ОбластьМакета.Параметры.Получить(Сч);
			
			Если НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
				ОбластьМакета.Параметры.Установить(Сч, "--");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура ОкруглитьДоЦелого(ОкругляемоеЧисло)
		Если ЗначениеЗаполнено(ОкругляемоеЧисло) Тогда
			Если ОкругляемоеЧисло <> Цел(ОкругляемоеЧисло) Тогда
				ОкругляемоеЧисло = Цел(ОкругляемоеЧисло) + 1;
			КонецЕсли;
		КонецЕсли;
	КонецПроцедуры
	
	Функция ТаблицаКонтрагентовСчетаФактуры(ДанныеПечати, ДанныеКонтрагентов)
		
		ТаблицаКонтрагентов = Новый ТаблицаЗначений;
		ТаблицаКонтрагентов.Колонки.Добавить("СведенияОПокупателе");
		ТаблицаКонтрагентов.Колонки.Добавить("СведенияОГрузополучателе");
		ТаблицаКонтрагентов.Колонки.Добавить("КПП");
		ТаблицаКонтрагентов.Колонки.Добавить("ИНН");
		
		Если ДанныеКонтрагентов <> Неопределено Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ДанныеКонтрагентов.НайтиСледующий(СтруктураПоиска);
			ВыборкаКонтрагентов = ДанныеКонтрагентов.Выбрать();
			
			Пока ВыборкаКонтрагентов.Следующий() Цикл
				
				СтрокаКонтрагента = ТаблицаКонтрагентов.Добавить();
				СтрокаКонтрагента.СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ВыборкаКонтрагентов.Контрагент, ДанныеПечати.Дата);
				СтрокаКонтрагента.СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ВыборкаКонтрагентов.Грузополучатель, ДанныеПечати.Дата);
				
				Если ПустаяСтрока(ВыборкаКонтрагентов.КПППокупателя) Тогда
					СтрокаКонтрагента.КПП = СтрокаКонтрагента.СведенияОПокупателе.КПП
				Иначе
					СтрокаКонтрагента.КПП = ВыборкаКонтрагентов.КПППокупателя;
				КонецЕсли;
				
				СтрокаКонтрагента.ИНН = ВыборкаКонтрагентов.ИННПокупателя;
				
			КонецЦикла;
			
		Иначе
			
			СтрокаКонтрагента = ТаблицаКонтрагентов.Добавить();
			СтрокаКонтрагента.СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Контрагент, ДанныеПечати.Дата);
			СтрокаКонтрагента.СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
			Если ПустаяСтрока(ДанныеПечати.КПППокупателя) Тогда
				СтрокаКонтрагента.КПП = СтрокаКонтрагента.СведенияОПокупателе.КПП
			Иначе
				СтрокаКонтрагента.КПП = ДанныеПечати.КПППокупателя;
			КонецЕсли;
			СтрокаКонтрагента.ИНН = ДанныеПечати.ИННПокупателя;
			
		КонецЕсли;
		
		Возврат ТаблицаКонтрагентов;
		
	КонецФункции
	
	Функция ВыводитьКодыТНВЭД(ДанныеПечати, ДействуетПостановление981)
		ПараметрыВывода = Новый Структура("ВыводитьВСтроке, ВыводитьВКолонке");
		
		ПараметрыВывода.ВыводитьВСтроке = ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный")
		И УчетНДСРФ.СтранаЯвляетсяЧленомТаможенногоСоюза(ДанныеПечати.СтранаРегистрации, ДанныеПечати.Дата)
		
		И ДанныеПечати.Дата >= УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта;
		ПараметрыВывода.ВыводитьВКолонке = ПараметрыВывода.ВыводитьВСтроке И ДействуетПостановление981;
		
		Возврат ПараметрыВывода
		
	КонецФункции
	
	Функция ВедетсяУчетНДСПоФЗ56(ДатаДокумента, ДатаИсправления)
		
		НачалоПримененияФЗ56 = '20170701';
		
		Дата = ?(ЗначениеЗаполнено(ДатаИсправления),ДатаИсправления,ДатаДокумента);
		
		Если Дата < НачалоПримененияФЗ56 Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецФункции
	
	Функция ДействуетПостановление981(ДатаДокумента, ДатаИсправления)
		
		НачалоПрименения = '20171001';
		
		Дата = ?(ЗначениеЗаполнено(ДатаИсправления),ДатаИсправления,ДатаДокумента);
		
		Если Дата < НачалоПрименения Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецФункции
	
	Функция ДействуетПостановление534(ДатаДокумента, ДатаИсправления)
		
		Возврат ?(ЗначениеЗаполнено(ДатаИсправления), ДатаИсправления, ДатаДокумента) >= '20210701';
		
	КонецФункции
	
	Функция ДействуетПостановление1096(ДатаДокумента, ДатаИсправления)
		
		Возврат ?(ЗначениеЗаполнено(ДатаИсправления), ДатаИсправления, ДатаДокумента) >= '20241001';
		
	КонецФункции
	
	
	#КонецОбласти
	
	#Область Печать_СчетФактура
	
	Функция СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактура";
		
		СтруктураТиповНаПечать         = Новый Структура;
		МассивСчетФактураВыданный      = Новый Массив;
		МассивСчетФактураКомиссионеру  = Новый Массив;
		МассивСчетФактураПолученный    = Новый Массив;
		ОснованияНаРеализацию          = Новый Массив;
		ОснованияКомиссионеру          = Новый Массив;
		ОснованияСчетФактураПолученный = Новый Массив;
		
		Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
			ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
			
			Если ИмяОбъекта = "ОтчетКомитентуОСписании" Или ИмяОбъекта = "ОтчетКомиссионераОСписании" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИмяОбъекта = "СчетФактураВыданный" Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСчетФактураВыданный, СтруктураОбъектов.Значение);
				
			ИначеЕсли ИмяОбъекта = "СчетФактураКомиссионеру" Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСчетФактураКомиссионеру, СтруктураОбъектов.Значение);
				
			ИначеЕсли ИмяОбъекта = "СчетФактураНаНеподтвержденнуюРеализацию0"
				Или ИмяОбъекта = "СчетФактураВыданныйАванс"
				Или ИмяОбъекта = "СчетФактураНалоговыйАгент" Тогда
				
				СтруктураТиповНаПечать.Вставить(ИмяОбъекта, СтруктураОбъектов.Значение);
				
			ИначеЕсли ИмяОбъекта = "ОтчетКомиссионера"
				Или (ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" И ПараметрыПечати.ВидФормы = "Комитент") Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОснованияКомиссионеру, СтруктураОбъектов.Значение);
				
			Иначе
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОснованияНаРеализацию, СтруктураОбъектов.Значение);
				
			КонецЕсли;
			
			Если ПараметрыПечати.Свойство("ДополнитьПолученнымиСчетамиФактуры")
				И ПараметрыПечати.ДополнитьПолученнымиСчетамиФактуры Тогда
				
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОснованияСчетФактураПолученный, СтруктураОбъектов.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ОснованияНаРеализацию.Количество() > 0 Тогда
			
			РезультатАнализа = Документы.СчетФактураВыданный.ПолучитьСчетаФактурыНаПечать(
			ОснованияНаРеализацию, ,
			ПараметрыПечати.ПечатьВВалюте);
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСчетФактураВыданный, РезультатАнализа.СчетаФактурыНаПечать, Истина);
			
			СообщитьОбОшибкахПечатиСчетФактурыПоОснованиям(РезультатАнализа.ТаблицаОшибок, Ложь)
			
		КонецЕсли;
		
		Если ОснованияКомиссионеру.Количество() > 0 Тогда
			
			РезультатАнализа = Документы.СчетФактураКомиссионеру.ПолучитьСчетаФактурыНаПечать(
			ОснованияКомиссионеру,
			ПараметрыПечати.ПечатьВВалюте);
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСчетФактураКомиссионеру, РезультатАнализа.СчетаФактурыНаПечать, Истина);
			
			СообщитьОбОшибкахПечатиСчетФактурыПоОснованиям(РезультатАнализа.ТаблицаОшибок, Истина)
			
		КонецЕсли;
		
		Если ОснованияСчетФактураПолученный.Количество() > 0 Тогда
			
			РезультатАнализа = Документы.СчетФактураПолученный.ПолучитьСчетаФактурыНаПечать(
			ОснованияСчетФактураПолученный, ПараметрыПечати.ПечатьВВалюте);
			
			ПараметрыПечати.Вставить("МассивСчетФактураПолученный", РезультатАнализа.СчетаФактурыНаПечать);
			
			СообщитьОбОшибкахПечатиСчетФактурыПолученного(РезультатАнализа.ТаблицаОшибок)
			
		КонецЕсли;
		
		Если МассивСчетФактураВыданный.Количество() > 0 Тогда
			СтруктураТиповНаПечать.Вставить("СчетФактураВыданный", МассивСчетФактураВыданный);
		КонецЕсли;
		
		Если МассивСчетФактураКомиссионеру.Количество() > 0 Тогда
			СтруктураТиповНаПечать.Вставить("СчетФактураКомиссионеру", МассивСчетФактураКомиссионеру);
		КонецЕсли;
		
		НомерТипаДокумента = 0;
		
		Для Каждого СтруктураОбъектов Из СтруктураТиповНаПечать Цикл
			
			НомерТипаДокумента = НомерТипаДокумента + 1;
			Если НомерТипаДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[СтруктураОбъектов.Ключ];
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, СтруктураОбъектов.Значение);
			
			ОпцииПечатиСчетаФактуры = Новый Структура;
			ОпцииПечатиСчетаФактуры.Вставить("СчетФактураНаАванс",        ДанныеДляПечати.Свойство("СчетФактураНаАванс"));
			ОпцииПечатиСчетаФактуры.Вставить("СчетФактураНалоговыйАгент", ДанныеДляПечати.Свойство("СчетФактураНалоговыйАгент"));
			ОпцииПечатиСчетаФактуры.Вставить("ПечатьВВалюте",             ПараметрыПечати.ПечатьВВалюте);
			
			ЗаполнитьТабличныйДокументСчетФактура(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			ОпцииПечатиСчетаФактуры);
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	Процедура ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, ДанныеОснований, СведенияОПоставщике, ДанныеКонтрагентов, ТабличныйДокумент, ОпцииПечатиСчетаФактуры)
		СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		СведенияОГрузоотправителе = СведенияОГрузоотправителе(ДанныеПечати);
		
		ДействующиеПостановления = ОпцииПечатиСчетаФактуры.ДействующиеПостановления;
		
		Макет = ОпцииПечатиСчетаФактуры.Макет;
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		НомераДаты = Новый Структура("Номер, Дата, НомерИсправления, ДатаИсправления, РеквизитыОснований");
		
		НомераДаты.Номер = НомерСчетаФактурыНаПечать(ДанныеПечати.Номер, ДанныеПечати.ИндексПодразделения);
		Если КодЯзыка = "ru" Тогда
			НомераДаты.Дата = Формат(ДанныеПечати.Дата, "ДЛФ=ДД");
		КонецЕсли;
		Если КодЯзыка = "en" Тогда
			НомераДаты.Дата = Формат(ДанныеПечати.Дата, "Л=en; ДЛФ=ДД");
		КонецЕсли;  
		Если КодЯзыка = "ar" Тогда
			НомераДаты.Дата = Формат(ДанныеПечати.Дата, "Л=ar_EG; ДЛФ=ДД");
		КонецЕсли;
		
		НомераДаты.НомерИсправления = ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, "--");
		НомераДаты.ДатаИсправления = ?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, "ДЛФ=ДД"), "--");
		
		Если ДанныеПечати.КорректировочныйСчетФактура Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ДанныеОснований.НайтиСледующий(СтруктураПоиска);
			СтрокиОснований = ДанныеОснований.Выбрать();
			
			РеквизитыОснований = "";
			
			Пока СтрокиОснований.СледующийПоЗначениюПоля("ИсходныйДокумент") Цикл
				
				ТекстИсходнойСФ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru=', № %1 от %2, с учетом исправления № %3 от %4'", Метаданные.Языки.Русский.КодЯзыка),
				НомерСчетаФактурыНаПечать(СтрокиОснований.НомерСчетаФактуры, ДанныеПечати.ИндексПодразделения),
				Формат(СтрокиОснований.ДатаСчетаФактуры, "ДЛФ=ДД; ДП=--"),
				?(ЗначениеЗаполнено(СтрокиОснований.НомерИсправленияСчетаФактуры), СтрокиОснований.НомерИсправленияСчетаФактуры, "--"),
				Формат(СтрокиОснований.ДатаИсправленияСчетаФактуры, "ДЛФ=ДД; ДП=--"));
				
				РеквизитыОснований = РеквизитыОснований + ТекстИсходнойСФ;
				
			КонецЦикла;
			
			Если Не ПустаяСтрока(РеквизитыОснований) Тогда
				РеквизитыОснований = Сред(РеквизитыОснований, 3);
			КонецЕсли;
			НомераДаты.РеквизитыОснований = РеквизитыОснований;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(НомераДаты);
		
		СтруктураПараметров = Новый Структура;
		
		// Выводим данные о поставщике.
		ДополнительноеПредставление = "";
		Если ДействующиеПостановления.Постановление914 И СведенияОПоставщике.ОфициальноеНаименование <> СведенияОПоставщике.ПолноеНаименование Тогда
			ДополнительноеПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='(%1)'"),
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование"));
		КонецЕсли;
		
		ТвойАдрис = "";
		Для Каждого Стр Из ДокОснование.Организация.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрис = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		ПредставлениеПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
		СведенияОПоставщике.ПолноеНаименование, ДанныеПечати.Организация.НаименованиеМеждународное);
		
		АдресПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес"), ТвойАдрис );
		
		ИННПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1%2'"),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь),
		?(Не ПустаяСтрока(ДанныеПечати.КПППоставщика), "/" + ДанныеПечати.КПППоставщика, ""));
		
		СтруктураПараметров.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		СтруктураПараметров.Вставить("АдресПоставщика", АдресПоставщика);
		СтруктураПараметров.Вставить("ИННПоставщика", ИННПоставщика);
		
		Если НЕ ДанныеПечати.КорректировочныйСчетФактура Тогда
			
			// Выводим данные грузоотправителя.
			ТекстГрузоотправителя = "";
			Если ДанныеПечати.ТолькоУслуги 
				ИЛИ (ДействующиеПостановления.Постановление1137 И ОпцииПечатиСчетаФактуры.СчетФактураНаАванс)
				ИЛИ ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент Тогда
				ТекстГрузоотправителя = "--";
			ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
				ТекстГрузоотправителя = НСтр("ru = 'он же'; en = 'he is'; ar = 'he is'", КодЯзыка);
			Иначе
				ТекстГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(
				СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес");
			КонецЕсли;
			ТвойАдрисГрузоотправителя = "";
			Для Каждого Стр Из ДокОснование.Грузоотправитель.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
					ТвойАдрисГрузоотправителя = Стр.Представление; 
				КонецЕсли;
			КонецЦикла;
			ГрузоотправительМеждународный = ДанныеПечати.Грузоотправитель.НаименованиеМеждународное;
			ТекстГрузоотправителяМеждународный = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1%2'; en = '%1%2'; ar = '%1%2'", КодЯзыка),
			ГрузоотправительМеждународный, " " + ТвойАдрисГрузоотправителя);
			
			ПредставлениеГрузоотправителя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
			ТекстГрузоотправителя, ТекстГрузоотправителяМеждународный);
			
			СтруктураПараметров.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);
			
			СтрокаПоДокументу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1'"),
			?(ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу),
			НСтр("ru = '-- от --'; en = '-- of --'; ar = '-- of --'", КодЯзыка),
			ДанныеПечати.СтрокаПоДокументу));
			
			СтруктураПараметров.Вставить("ПоДокументу", СтрокаПоДокументу);  
			
			Если ДанныеПечати.Дата >= '20241001' Тогда 
				 ПоДокументуОтгрузки =
			     ?(ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеПечати, "ПредставлениеСтроки5а")
				 И ЗначениеЗаполнено(ДанныеПечати.ПредставлениеСтроки5а),
			     СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				 НСтр("ru = '%1, %2';
					 |en = '%1, %2'"),
				 ?(ДанныеПечати.ТолькоУслуги, НСтр("ru = 'Акт';
													|en = 'Act'",КодЯзыка), НСтр("ru = 'Товарная накладная';
																		|en = 'Delivery note'",КодЯзыка)),
				 ДанныеПечати.ПредставлениеСтроки5а),
			     НСтр("ru = '-- от --';
				 |en = '-- dated --'"));
		    Иначе		
			     ПоДокументуОтгрузки =
			     ?(ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеПечати, "ПредставлениеСтроки5а")
			     И ЗначениеЗаполнено(ДанныеПечати.ПредставлениеСтроки5а),
			     ДанныеПечати.ПредставлениеСтроки5а,
			     НСтр("ru = '-- от --'; en = '-- of --'; ar = '-- of --'",КодЯзыка));
			     ПоДокументуОтгрузки =  СтрЗаменить(ПоДокументуОтгрузки,НомерСчетаФактурыНаПечать1(ДанныеПечати.Номер, , Ложь) ,ДанныеПечати.Номер);
			     Если НЕ КодЯзыка = "ru" Тогда
				      ПоДокументуОтгрузки =  СтрЗаменить(ПоДокументуОтгрузки, "п/п", "");
				      ПоДокументуОтгрузки =  СтрЗаменить(ПоДокументуОтгрузки, "от", "of");
			     КонецЕсли;
			КонецЕсли;
			СтруктураПараметров.Вставить("ПоДокументуОтгрузки", ПоДокументуОтгрузки);
		КонецЕсли;
		
		ЕстьГрузополучатель = Не ДанныеПечати.КорректировочныйСчетФактура
		И НЕ (ДанныеПечати.ТолькоУслуги
		ИЛИ (ДействующиеПостановления.Постановление1137 И ОпцииПечатиСчетаФактуры.СчетФактураНаАванс)
		ИЛИ ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент);
		
		ПредставлениеПокупателя       = "";
		ПредставлениеАдресаПокупателя = "";
		ПредставлениеИННКПППокупателя = "";
		ПредставлениеГрузополучателя  = "";
		ТабЗн = управлениесвойствами.ЗначенияСвойств(ДанныеПечати.Ссылка.ДокументОснование,,,ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Бангладеш"));
		ТаблицаКонтрагентов = ТаблицаКонтрагентовСчетаФактуры(ДанныеПечати, ДанныеКонтрагентов);
		Если ТабЗн.Количество()>0 Тогда 
			Если ТабЗн[0].Значение = Истина Тогда
				ДанныеПечатиСтруктура =   ОбщегоНазначенияУТ.ПреобразоватьСтрокуТаблицыВСтруктуру(ДанныеПечати);
				ДанныеПечатиСтруктура.Контрагент = ДанныеПечати.Ссылка.ДокументОснование.Контрагент;
				ТаблицаКонтрагентов = ТаблицаКонтрагентовСчетаФактуры(ДанныеПечатиСтруктура, ДанныеКонтрагентов);
			КонецЕсли;
			
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ТаблицаКонтрагентов Цикл
			
			СведенияОПокупателе = СтрокаТаблицы.СведенияОПокупателе;
			
			КонтрагентКПП = ДанныеПечати.Контрагент.КПП;
			ГрузикКПП = ДанныеПечати.Грузополучатель.КПП;
			КонтрагентИНН = ДанныеПечати.Контрагент.ИНН;
			ГрузикИНН = ДанныеПечати.Грузополучатель.ИНН;
			
			СтрокаТаблицы.КПП =  КонтрагентКПП; // Для бангладеш
			СтрокаТаблицы.ИНН =  КонтрагентИНН;
			
			Если ДокОснование.ПечатьИННПокупателя Тогда        
				СтрокаТаблицы.КПП = КонтрагентКПП;
			Иначе
				СтрокаТаблицы.КПП = ГрузикКПП;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(КонтрагентИНН) Тогда
				СтрокаТаблицы.ИНН = ГрузикИНН;
			КонецЕсли;	
			
			ПредставлениеПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2'"),
			ПредставлениеПокупателя,
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь));
			
			ПредставлениеАдресаПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2'"),
			ПредставлениеАдресаПокупателя,
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь));
			
			ПредставлениеИННПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2%3'"),
			ПредставлениеИННПокупателя,
			СтрокаТаблицы.ИНН, 
			?(Не ПустаяСтрока(СтрокаТаблицы.КПП), "/" + СтрокаТаблицы.КПП, ""));
			
			Если ЕстьГрузополучатель Тогда
				СведенияОГрузополучателе = СтрокаТаблицы.СведенияОГрузополучателе;
				СведенияОГрузополучателе.Вставить("АдресДоставки",СведенияОГрузополучателе.ФактическийАдрес);
				Попытка
					Если ЗначениеЗаполнено(ДанныеПечати.Ссылка.ДокументОснование.ЗаказКлиента.АдресГрузополучателя) Тогда
						СведенияОГрузополучателе.АдресДоставки = ДанныеПечати.Ссылка.ДокументОснование.ЗаказКлиента.АдресГрузополучателя;
					КонецЕсли;
				Исключение
				КонецПопытки;
				
				ТвойАдрисГрузополучателя = "";
				Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
					Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
						ТвойАдрисГрузополучателя = Стр.Представление;
					КонецЕсли;
				КонецЦикла;
				АдрисГрузика = "";
				Для Каждого Стр Из ДокОснование.Грузополучатель.КонтактнаяИнформация Цикл
					Если Стр.Вид.Наименование = "Фактический адрес" Тогда
						АдрисГрузика = Стр.Представление;
					КонецЕсли;
				КонецЦикла; 
				ГрузополучательМеждународный = ДанныеПечати.Грузополучатель.НаименованиеМеждународное;
				ТекстГрузополучателяМеждународный = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1%2'; en = '%1%2'; ar = '%1%2'", КодЯзыка),
				ГрузополучательМеждународный, " " + ТвойАдрисГрузополучателя);   
				
				
				ПредставлениеГрузополучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
				(ДокОснование.Грузополучатель.НаименованиеПолное + ", " + АдрисГрузика), ТекстГрузополучателяМеждународный);
			КонецЕсли;
		КонецЦикла; 
		
		ТвойАдрисПокупателя = "";
		Для Каждого Стр Из ДокОснование.Контрагент.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрисПокупателя = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		ПокупательМеждународный = ДанныеПечати.Контрагент.НаименованиеМеждународное;
		
		ПредставлениеПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
		ДанныеПечати.Контрагент.НаименованиеПолное, ПокупательМеждународный);
		
		ПредставлениеАдресаПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь), ТвойАдрисПокупателя);
		
		ПредставлениеИННПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1'"),
		Сред(ПредставлениеИННПокупателя, 3));
		
		ПредставлениеГрузополучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1'; en = '%2'; ar = '%2'", КодЯзыка),
		ДокОснование.Грузополучатель.НаименованиеПолное + ", " + АдрисГрузика, ТекстГрузополучателяМеждународный);
		
		СтруктураПараметров.Вставить("ПредставлениеПокупателя", ПредставлениеПокупателя);
		СтруктураПараметров.Вставить("АдресПокупателя", ПредставлениеАдресаПокупателя);
		СтруктураПараметров.Вставить("ИННПокупателя", ПредставлениеИННПокупателя);
		Если Не ДанныеПечати.КорректировочныйСчетФактура Тогда
			СтруктураПараметров.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
		КонецЕсли;
		
		Если ДействующиеПостановления.Постановление1137 И ЗначениеЗаполнено(ДанныеПечати.Валюта) 
			И ОпцииПечатиСчетаФактуры.ПечатьВВалюте Тогда
			
			СтруктураПараметров.Вставить("Валюта", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1, %2'"),
			ДанныеПечати.ВалютаНаименованиеПолное,
			ДанныеПечати.ВалютаКод));
			
		ИначеЕсли ДействующиеПостановления.Постановление1137 Тогда
			СтруктураПараметров.Вставить("Валюта", НСтр("ru = 'Российский рубль, 643'; en = 'Russian ruble, 643'; ar = 'الروبل الروسي ، 643'", КодЯзыка));
		КонецЕсли;
		
		СтруктураПараметровИдентификаторГосКонтракта = Новый Структура("ИдентификаторГосКонтракта");
		ЗаполнитьЗначенияСвойств(СтруктураПараметровИдентификаторГосКонтракта, ДанныеПечати);
		Если ДействующиеПостановления.Постановление981 Тогда
			ПредставлениеИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1'"),
			СокрЛП(СтруктураПараметровИдентификаторГосКонтракта.ИдентификаторГосКонтракта));
		Иначе
			ПредставлениеИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1'"),
			СокрЛП(СтруктураПараметровИдентификаторГосКонтракта.ИдентификаторГосКонтракта));
		КонецЕсли;
		СтруктураПараметров.Вставить("ИдентификаторГосКонтракта", ПредставлениеИдентификаторГосКонтракта);
		
		Если ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент Тогда
			// для печати подвала берем сведения об организации из сведений о покупателе
			СведенияОПоставщике = СведенияОПокупателе;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		Если ЗначениеЗаполнено(ДанныеПечати.Контрагент.НалоговыйНомер) и ЗначениеЗаполнено(ДанныеПечати.Контрагент.РегистрационныйНомер) Тогда
			Если КодЯзыка = "ru" Тогда
				ОбластьМакета.Параметры.ИННПокупателя = "Налоговый номер " + ДанныеПечати.Контрагент.НалоговыйНомер + ", рег. номер " + ДанныеПечати.Контрагент.РегистрационныйНомер; 
			Иначе
				ОбластьМакета.Параметры.ИННПокупателя = "Tax number " + ДанныеПечати.Контрагент.НалоговыйНомер + ", reg. number " + ДанныеПечати.Контрагент.РегистрационныйНомер;
			КонецЕсли;
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецПроцедуры
	
	Процедура ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации)
		Если КодЯзыка = "ru" Тогда	
			СтруктураПараметров = Новый Структура;
			Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				СтруктураПараметров.Вставить("ФИОРуководителя", ДанныеПечати.Руководитель);
				СтруктураПараметров.Вставить("ФИОГлавногоБухгалтера", ДанныеПечати.ГлавныйБухгалтер);
			Иначе
				СтруктураПараметров.Вставить("ФИОПБОЮЛ", ДанныеПечати.Руководитель);
				СтруктураПараметров.Вставить("Свидетельство", СведенияОбОрганизации.Свидетельство);
			КонецЕсли;
		Иначе
			СтруктураПараметров = Новый Структура;
			Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				СтруктураПараметров.Вставить("ФИОРуководителя", ДокОснование.Руководитель.РабочееНаименованиеИнглиш);
				СтруктураПараметров.Вставить("ФИОГлавногоБухгалтера", ДокОснование.ГлавныйБухгалтер.РабочееНаименованиеИнглиш);
			Иначе
				СтруктураПараметров.Вставить("ФИОПБОЮЛ", ДокОснование.Руководитель.РабочееНаименованиеИнглиш);
				СтруктураПараметров.Вставить("Свидетельство", СведенияОбОрганизации.Свидетельство);
			КонецЕсли;	
		КонецЕсли; 
		ОбластьПодвала.Параметры.Заполнить(СтруктураПараметров);
		
	КонецПроцедуры
	
	Процедура ЗаполнитьТабличныйДокументСчетФактура(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ОпцииПечатиСчетаФактуры) Экспорт
		
		Перем ВыборкаОснований, ВыборкаКонтрагентов;
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
		МакетКорр_1096 = ПолучитьМакет("ПФ_MXL_СчетФактураКорректировочный1096_ru");  
		Макет1096ar    = ПолучитьМакет("ПФ_MXL_СчетФактура1096_ar");    
		Макет1096en    = ПолучитьМакет("ПФ_MXL_СчетФактура1096_en");
		Макет1096ru    = ПолучитьМакет("ПФ_MXL_СчетФактура1096_ru");
		Макет451       = ПолучитьМакет("ПФ_MXL_СчетФактура451_ru");
		Макет1137      = ПолучитьМакет("ПФ_MXL_СчетФактура1137_ru");
		Макет1137_625  = ПолучитьМакет("ПФ_MXL_СчетФактура1137_625_ru");
		Макет981       = ПолучитьМакет("ПФ_MXL_СчетФактура981_ru");
		Макет534       = ПолучитьМакет("ПФ_MXL_СчетФактура534_ru");
		Макет534en     = ПолучитьМакет("ПФ_MXL_СчетФактура534_en");
		Макет534ar     = ПолучитьМакет("ПФ_MXL_СчетФактура534_ar");
		МакетКорр      = ПолучитьМакет("ПФ_MXL_СчетФактураКорректировочный1137_ru");
		МакетКорр_625  = ПолучитьМакет("ПФ_MXL_СчетФактураКорректировочный1137_625_ru");
		МакетКорр_981  = ПолучитьМакет("ПФ_MXL_СчетФактураКорректировочный981_ru");
		МакетКорр_534  = ПолучитьМакет("ПФ_MXL_СчетФактураКорректировочный534_ru");
		
		ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
		
		ВыборкаПоТоварам    = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
		ВыборкаПоТоварамНовая = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить(); 
		ВыборкаПоТоварамНовая.Колонки.Добавить("НоменклатураКлиента");
		ВыборкаПоТоварамНовая.Очистить();		
		ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ДанныеДляПечати.Свойство("РезультатПоКонтрагентам") Тогда
			ВыборкаКонтрагентов = Неопределено;
		КонецЕсли;
		Если ДанныеДляПечати.Свойство("РезультатПоИсходнымДанным") Тогда
			ВыборкаОснований = ДанныеДляПечати.РезультатПоИсходнымДанным.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		
		ЕстьПостановление914 = ЛОЖЬ;
		ЕстьПостановление981 = ЛОЖЬ;
		ЕстьПостановление1137_625 = ЛОЖЬ;
		ЕстьПостановление1137 = ЛОЖЬ;
		ЕстьПостановление534 = ЛОЖЬ;
		ЕстьПостановление1096 = ЛОЖЬ;
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ДанныеПечати.ВалютаСчетаФактуры)
				И ОпцииПечатиСчетаФактуры.ПечатьВВалюте
				И ДанныеПечати.ВалютаСчетаФактуры = ВалютаРегламентированногоУчета Тогда
				
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для %1 указана валюта: рубли. Не требуется печатать счет-фактуру в иностранной валюте.'"),
				ДанныеПечати.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
				
			ИначеЕсли ЗначениеЗаполнено(ДанныеПечати.ВалютаСчетаФактуры)
				И НЕ ОпцииПечатиСчетаФактуры.ПечатьВВалюте
				И ДанныеПечати.ВалютаСчетаФактуры <> ВалютаРегламентированногоУчета  Тогда
				
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для %1 указана иностранная валюта. Не требуется печатать счет-фактуру в рублях.'"),
				ДанныеПечати.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
				
			Иначе
				
				ДействующиеПостановления = Новый Структура;
				ДействующиеПостановления.Вставить("Постановление914",  Ложь);
				ДействующиеПостановления.Вставить("Постановление1137", Истина);
				ДействующиеПостановления.Вставить("Постановление1137_625", ВедетсяУчетНДСПоФЗ56(ДанныеПечати.Дата,ДанныеПечати.ДатаИсправления));
				ДействующиеПостановления.Вставить("Постановление981", ДействуетПостановление981(ДанныеПечати.Дата,ДанныеПечати.ДатаИсправления));
				ДействующиеПостановления.Вставить("Постановление534", ДействуетПостановление534(ДанныеПечати.Дата, ДанныеПечати.ДатаИсправления));
				ДействующиеПостановления.Вставить("Постановление1096", ДействуетПостановление1096(ДанныеПечати.Дата, ДанныеПечати.ДатаИсправления));
	
				ОпцииПечатиСчетаФактуры.Вставить("ДействующиеПостановления", ДействующиеПостановления);
				
				Если ДанныеПечати.КорректировочныйСчетФактура Тогда
					Если ДействующиеПостановления.Постановление534 Тогда
						Макет = МакетКорр_534;
						ЕстьПостановление534 = Истина;
					ИначеЕсли ДействующиеПостановления.Постановление1096 Тогда
						Макет = МакетКорр_1096;
						ЕстьПостановление1096 = Истина;
					ИначеЕсли ДействующиеПостановления.Постановление981 Тогда
						Макет = МакетКорр_981;
						ЕстьПостановление981 = Истина;
					ИначеЕсли ДействующиеПостановления.Постановление1137_625 Тогда
						Макет = МакетКорр_625;
						ЕстьПостановление1137_625 = Истина;
					Иначе
						Макет = МакетКорр;
						ЕстьПостановление1137 = Истина;
					КонецЕсли;
				ИначеЕсли ДействующиеПостановления.Постановление914 Тогда
					Макет = Макет451;
					ЕстьПостановление914 = Истина; 
				ИначеЕсли ДействующиеПостановления.Постановление1096 Тогда
					ДокОснование = ?(ТипЗнч(ДанныеПечати.Ссылка.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),
					ДанныеПечати.Ссылка.ДокументОснование, ДанныеПечати.Ссылка);
					ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
					ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
					ДокЯз.Прочитать();
					Язычник = ДокЯз[0].Язык;
					Если Язычник = Перечисления.Языки.Русский Тогда
						Макет = Макет1096ru;    
						КодЯзыка = "ru";
					КонецЕсли; 
					Если Язычник = Перечисления.Языки.Английский Тогда 
						Макет = Макет1096en;    
						КодЯзыка = "en";
					КонецЕсли;
					Если Язычник = Перечисления.Языки.Арабский Тогда 
						Макет = Макет1096ar;    
						КодЯзыка = "ar";
					КонецЕсли;
					ЕстьПостановление1096 = Истина;
				ИначеЕсли ДействующиеПостановления.Постановление534 Тогда
					ДокОснование = ?(ТипЗнч(ДанныеПечати.Ссылка.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг"),
					ДанныеПечати.Ссылка.ДокументОснование, ДанныеПечати.Ссылка);
					ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
					ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
					ДокЯз.Прочитать();
					Язычник = ДокЯз[0].Язык;
					Если Язычник = Перечисления.Языки.Русский Тогда
						Макет = Макет534;    
						КодЯзыка = "ru";
					КонецЕсли; 
					Если Язычник = Перечисления.Языки.Английский Тогда 
						Макет = Макет534en;    
						КодЯзыка = "en";
					КонецЕсли;
					Если Язычник = Перечисления.Языки.Арабский Тогда 
						Макет = Макет534ar;    
						КодЯзыка = "ar";
					КонецЕсли;
					ЕстьПостановление534 = Истина;
				ИначеЕсли ДействующиеПостановления.Постановление981 Тогда
					Макет = Макет981;
					ЕстьПостановление981 = Истина;
				ИначеЕсли ДействующиеПостановления.Постановление1137_625 Тогда
					Макет = Макет1137_625;
					ЕстьПостановление1137_625 = Истина;
				Иначе
					Макет = Макет1137;
					ЕстьПостановление1137 = Истина;
				КонецЕсли;
				Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
				
				Если (ЕстьПостановление914 И ЕстьПостановление1137)
					ИЛИ (ЕстьПостановление914 И ЕстьПостановление981)
					ИЛИ ((ЕстьПостановление1137 ИЛИ ЕстьПостановление1137_625) И ЕстьПостановление981)
					Или ЕстьПостановление534 И (ЕстьПостановление914
					Или ЕстьПостановление1137
					Или ЕстьПостановление1137_625
					Или ЕстьПостановление981) Тогда
					
					Текст = НСтр("ru = 'Недоступна одновременная печать счетов-фактур, сформированных по разным постановлениям Правительства РФ'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка);
					
					ТабличныйДокумент.Очистить();
					Прервать;
					
				КонецЕсли;
				
				ОпцииПечатиСчетаФактуры.Вставить("Макет", Макет);
				
				Если Не ПервыйДокумент Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				ПервыйДокумент = Ложь;
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				
				// Выводим общие реквизиты шапки
				СведенияОбОрганизации = Новый Структура;
				ЗаполнитьРеквизитыШапкиСчетФактура(
				ДанныеПечати,
				ВыборкаОснований,
				СведенияОбОрганизации,
				ВыборкаКонтрагентов,
				ТабличныйДокумент, 
				ОпцииПечатиСчетаФактуры);
				
				// Выводим заголовок таблицы
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
				Если ДействующиеПостановления.Постановление914 И Не ДанныеПечати.КорректировочныйСчетФактура Тогда
					СтруктураПараметров = Новый Структура;
					Если ОпцииПечатиСчетаФактуры.ПечатьВВалюте Тогда
						СтруктураПараметров.Вставить("Валюта", ДанныеПечати.Валюта)
					Иначе
						СтруктураПараметров.Вставить("Валюта", ВалютаРегламентированногоУчета);
					КонецЕсли;
					ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
				КонецЕсли;
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				
				НомерСтраницы = 1;
				
				// Инициализация итогов в документе
				ИтоговыеСуммы = СтруктураИтоговыеСуммы();
				
				// Создаем массив для проверки вывода
				МассивВыводимыхОбластей = Новый Массив;
				
				// Выводим многострочную часть документа
				Если ОпцииПечатиСчетаФактуры.СчетФактураНаАванс И ДанныеПечати.КорректировочныйСчетФактура Тогда
					ОбластьМакетаСтандарт = Макет.ПолучитьОбласть("СтрокаАвансы");
				Иначе
					ОбластьМакетаСтандарт = Макет.ПолучитьОбласть("Строка");
				КонецЕсли;
				ОбластьИтого = Макет.ПолучитьОбласть("Итого");
				ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
				
				СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
				ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
				
				ИспользоватьНаборы = Ложь;
				Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(ВыборкаПоДокументам, "ЭтоНабор") Тогда
					ИспользоватьНаборы = Истина;
					ОбластьМакетаНабор         = Макет.ПолучитьОбласть("СтрокаНабор");
					ОбластьМакетаКомплектующие = Макет.ПолучитьОбласть("СтрокаКомплектующие");
				КонецЕсли;
				
				ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации);
				
				ВыводитьКодыТНВЭД = ВыводитьКодыТНВЭД(ДанныеПечати, ДействующиеПостановления.Постановление981);
				
				ОперацияОблагаетсяНДСУПокупателя = Ложь;
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеПечати,"НалогообложениеНДС") 
					И ДанныеПечати.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
					ОперацияОблагаетсяНДСУПокупателя = Истина;
				КонецЕсли; 
				Если ДокОснование.ОбъединитьСтроки = Ложь Тогда
					Для каждого ТоварыИзДокумента из ВыборкаПоДокументам.Ссылка.ДокументОснование.Товары Цикл
						СтрокаТЧ =	выборкаПоТоварамНовая.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТоварыИзДокумента);
						Если ТоварыИзДокумента.КоличествоУпаковок >0 тогда
							СтрокаТЧ.Количество = ТоварыИзДокумента.КоличествоУпаковок;
						КонецЕсли;
						СтрокаТЧ.СуммаБезНДС    = СтрокаТЧ.СуммаСНДС-СтрокаТЧ.СуммаНДС;
						СтрокаТЧ.НомерСтрокиНаборы  = СтрокаТЧ.НомерСтроки;
						
						Отбор = Новый Структура("Номенклатура",ТоварыИзДокумента.Номенклатура);
						Отбор.Вставить("НомерСтроки",ТоварыИзДокумента.НомерСтроки); 
						НашлиСтроки = выборкаПоТоварам.НайтиСтроки(Отбор);
						
						Если НашлиСтроки.Количество()>0 Тогда 
							НайденнаяСтрока = НашлиСтроки[0];
							ЗаполнитьЗначенияСвойств(СтрокаТЧ,НайденнаяСтрока,"СтавкаНДС, КоличествоДо,ЭтоВозвратнаяТара,НоменклатураНаименование,	НоменклатураКод,	ЕдиницаИзмерения,ЕдиницаИзмеренияНаименование,ЕдиницаИзмеренияКод,Ссылка,ВариантПредставленияНабораВПечатныхФормах,ВариантРасчетаЦеныНабора,НоменклатураНабора,ХарактеристикаНабора,ЭтоКомплектующие,ЭтоНабор,ПолныйНабор, НомерГТД,СтранаПроисхождения");
						КонецЕсли;	
						
					КонецЦикла;	
				Иначе
					ВыборкаПоТоварамНовая = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
					Для Каждого Стр ИЗ ВыборкаПоТоварамНовая Цикл
						Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
							ВыборкаПоТоварамНовая.Удалить(Стр);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				КоличествоСтрок = выборкаПоТоварамНовая.Количество();
				НомерСтроки = 0;
				ТолькоСтавкаБезНДС = Истина; 
				
				Для каждого СтрокаТовары из выборкаПоТоварамНовая Цикл
					Если СтрокаТовары.ЭтоНабор = Неопределено ИЛИ СтрокаТовары.ЭтоКомплектующие = Неопределено Тогда
						СтрокаТовары.ЭтоНабор = Ложь;
						СтрокаТовары.ЭтоКомплектующие = Ложь;  
						СтрокаТовары.ЭтоВозвратнаяТара = Ложь;
					КонецЕсли;
				КонецЦикла;	
				
				Для каждого СтрокаТовары из выборкаПоТоварамНовая Цикл
					
					ОбластьМакета = ОбластьМакетаСтандарт;
					
					НомерСтроки = НомерСтроки + 1;
					ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, 
					ОбластьМакета, 
					НомерСтроки, 
					ДанныеПечати.КорректировочныйСчетФактура, 
					ВыводитьКодыТНВЭД, 
					ОпцииПечатиСчетаФактуры.СчетФактураНаАванс);
					ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьМакета);
					
					СтруктураПараметров = Новый Структура;
					Если ОперацияОблагаетсяНДСУПокупателя Тогда
						СтруктураПараметров.Вставить("СтавкаНДС", НСтр("ru='НДС исчисляется налоговым агентом'", Метаданные.Языки.Русский.КодЯзыка));
						СтруктураПараметров.Вставить("СуммаНДС", "--");
						СтруктураПараметров.Вставить("СуммаНДСДо", "--");
						СтруктураПараметров.Вставить("РазницаНДСУменьшение", "--");
						СтруктураПараметров.Вставить("РазницаНДСУвеличение", "--");
						СтруктураПараметров.Вставить("СуммаСНДС", "--");
						СтруктураПараметров.Вставить("СуммаСНДСДо", "--");
						СтруктураПараметров.Вставить("РазницаСНДСУменьшение", "--");
						СтруктураПараметров.Вставить("РазницаСНДСУвеличение", "--");
						Если ОпцииПечатиСчетаФактуры.СчетФактураНаАванс Тогда
							СтруктураПараметров.Вставить("СуммаБезНДС", СтрокаТовары.СуммаСНДС);
						КонецЕсли;
					ИначеЕсли СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
						СтруктураПараметров.Вставить("СтавкаНДС", НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка));
						СтруктураПараметров.Вставить("СуммаНДС", НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка));
						СтруктураПараметров.Вставить("СуммаНДСДо", НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка));
					ИначеЕсли СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
						СтруктураПараметров.Вставить("СуммаНДС", 0);
						СтруктураПараметров.Вставить("СуммаНДСДо", 0);
						ТолькоСтавкаБезНДС = Ложь;
					Иначе
						ТолькоСтавкаБезНДС = Ложь;
					КонецЕсли;
					
					СтруктураПараметров.Вставить("Акциз", НСтр("ru = 'без акциза'; en = 'without excise duty'; ar = 'بدون ضريبة الإنتاج'", КодЯзыка));
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					
					Если НомерСтроки = КоличествоСтрок Тогда
						МассивВыводимыхОбластей.Добавить(ОбластьИтого);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					КонецЕсли;
					
					Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						
						Если Не ДействующиеПостановления.Постановление914 Тогда
							
							ОбластьНумерацияЛистов = Макет.ПолучитьОбласть("НумерацияЛистов");
							ОбластьНумерацияЛистов.Параметры.Номер = НомерСчетаФактурыНаПечать(ДанныеПечати.Номер, ДанныеПечати.ИндексПодразделения);
							ОбластьНумерацияЛистов.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДЛФ=ДД; ДП=--");
							ОбластьНумерацияЛистов.Параметры.НомерЛиста = НомерСтраницы;
							
							ТабличныйДокумент.Вывести(ОбластьНумерацияЛистов);
							
						КонецЕсли;
						
						ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
						
					КонецЕсли;
					
					ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
					
				КонецЦикла;
				
				// Выводим итоги по документу
				ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
				
				Если ДействующиеПостановления.Постановление1137
					И (НЕ ОпцииПечатиСчетаФактуры.СчетФактураНаАванс)
					И (НЕ ДанныеПечати.КорректировочныйСчетФактура)
					И ТолькоСтавкаБезНДС Тогда
					ИтоговыеСуммы.ИтогоСуммаНДС = НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка);
				КонецЕсли;
				
				Если ДанныеПечати.КорректировочныйСчетФактура
					И ТолькоСтавкаБезНДС Тогда
					ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУвеличение", НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка));
					ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУменьшение", НСтр("ru='без НДС'", Метаданные.Языки.Русский.КодЯзыка));
				КонецЕсли;
				
				Если ОперацияОблагаетсяНДСУПокупателя Тогда
					Если ОпцииПечатиСчетаФактуры.СчетФактураНаАванс Тогда
						ИтоговыеСуммы.Вставить("ИтогоСуммаБезНДС", ИтоговыеСуммы.ИтогоСуммаСНДС);
						ИтоговыеСуммы.Вставить("ИтогоСуммаБезНДСНаСтранице", ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице);
					КонецЕсли;
					ИтоговыеСуммы.Вставить("ИтогоСуммаНДС", "--");
					ИтоговыеСуммы.Вставить("ИтогоСуммаНДСНаСтранице", "--");
					ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", "--");
					ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", "--");
					Если ИтоговыеСуммы.ИтогоРазницаСНДСУменьшение <> 0 Тогда
						ИтоговыеСуммы.Вставить("ИтогоРазницаСНДСУменьшение", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаСНДСУменьшениеНаСтранице", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУменьшение", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУменьшениеНаСтранице", "--");
					КонецЕсли;
					Если ИтоговыеСуммы.ИтогоРазницаСНДСУвеличение <> 0 Тогда
						ИтоговыеСуммы.Вставить("ИтогоРазницаСНДСУвеличение", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаСНДСУвеличениеНаСтранице", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУвеличение", "--");
						ИтоговыеСуммы.Вставить("ИтогоРазницаНДСУвеличениеНаСтранице", "--");
					КонецЕсли;
				КонецЕсли;
				СуммаНаСтранице = 0;  
				СуммаНаСтраницеСНДС = 0;
				
				ОбластьИтого.Параметры.Заполнить(ИтоговыеСуммы);
				ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьИтого);                                                   
				Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда 
					Джига = 0;  
					Дрыга = 0;
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
					|	СуммыДокументовВВалютахУчета.СуммаНДСРегл КАК СуммаНДСРегл
					|ИЗ
					|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
					|ГДЕ
					|	СуммыДокументовВВалютахУчета.Регистратор = &Регистратор
					|	И СуммыДокументовВВалютахУчета.НомерСтроки = &НомерСтроки"; 
					Для Каждого Стр Из ДокОснование.Товары Цикл
						Запрос.УстановитьПараметр("Регистратор", ДокОснование);
						Запрос.УстановитьПараметр("НомерСтроки", Стр.НомерСтроки); 
						
						РезультатЗапроса = Запрос.Выполнить();
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
							Джига = Джига + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;  
							Дрыга = Дрыга + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
						КонецЦикла;
					КонецЦикла;
					ОбластьИтого.Параметры.ИтогоСуммаБезНДС = Джига;
					ОбластьИтого.Параметры.ИтогоСуммаСНДС   = Дрыга;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьИтого);
				
				ТабличныйДокумент.Вывести(ОбластьПодвала);
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
				
			КонецЕсли;
			СуммаНаСтранице = 0;
			СуммаНаСтраницеСНДС = 0;
			
			Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда 
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
				|	СуммыДокументовВВалютахУчета.СуммаНДСРегл КАК СуммаНДСРегл
				|ИЗ
				|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
				|ГДЕ
				|	СуммыДокументовВВалютахУчета.Регистратор = &Регистратор
				|	И СуммыДокументовВВалютахУчета.НомерСтроки = &НомерСтроки";
				Запрос.УстановитьПараметр("Регистратор", ДокОснование);
				Запрос.УстановитьПараметр("НомерСтроки", ОбластьМакета.Параметры.НомерСтроки);
				РезультатЗапроса = Запрос.Выполнить();
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл      
					ОбластьМакета.Параметры.СуммаБезНДС = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;
					ОбластьМакета.Параметры.СуммаСНДС   = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
					ОбластьМакета.Параметры.Цена = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл/ОбластьМакета.Параметры.Количество; 
					СуммаНаСтранице = СуммаНаСтранице + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;  
					СуммаНаСтраницеСНДС = СуммаНаСтраницеСНДС + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура СообщитьОбОшибкахПечатиСчетФактурыПоОснованиям(ТаблицаОшибок, ПечатьКомиссионеру = Ложь)
		
		Если ПечатьКомиссионеру Тогда
			ПредставлениеДокумента = НСтр("ru='счет-фактура комиссионера'");
		Иначе
			ПредставлениеДокумента = НСтр("ru='счет-фактура'");
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстОшибки = "";
			ПутьКДанным = "";
			
			Если СтрокаТаблицы.НеТребуетсяСчетФактура Тогда
				ТекстОшибки = НСтр("ru = 'Для документа %1 не требуется %2'");
			ИначеЕсли СтрокаТаблицы.НеТребуетсяПечатьВВалюте Тогда
				ТекстОшибки = НСтр("ru = 'Для документа %1 не требуется %2 в иностранной валюте'");
			ИначеЕсли СтрокаТаблицы.НеВыставленСчетФактура Тогда
				ТекстОшибки = НСтр("ru = 'Для документа %1 не введен %2'");
				ПутьКДанным = "ТекстСчетФактура";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
				
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.ДокументОснование,
				ПредставлениеДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, СтрокаТаблицы.ДокументОснование, , ПутьКДанным);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура СообщитьОбОшибкахПечатиСчетФактурыПолученного(ТаблицаОшибок)
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстОшибки = "";
			ПутьКДанным = "";
			
			Если СтрокаТаблицы.НеТребуетсяСчетФактура Тогда
				Продолжить;
			ИначеЕсли СтрокаТаблицы.НеТребуетсяПечатьВВалюте Тогда
				ТекстОшибки = НСтр("ru = 'Для документа %1 не требуется %2 в иностранной валюте'");
			ИначеЕсли СтрокаТаблицы.НеВыставленСчетФактура Тогда
				ТекстОшибки = НСтр("ru = 'Для документа %1 не введен %2'");
				ПутьКДанным = "ПредъявленСчетФактура";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
				
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.ДокументОснование,
				НСтр("ru='счет-фактура посредника'"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, СтрокаТаблицы.ДокументОснование, ПутьКДанным);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Функция СтруктураИтоговыеСуммы()
		
		Структура = Новый Структура;
		
		СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
		
		Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
			Структура.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
			Структура.Вставить("Итого"+Элемент.Ключ, 0);
		КонецЦикла;
		
		Возврат Структура;
		
	КонецФункции
	
	Процедура ОбнулитьИтогиПоСтранице(ИтоговыеСуммы)
		
		СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
		
		Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
			ИтоговыеСуммы.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары)
		
		СтруктураСуммПоСтроке = СтруктураРесурсовДляИтогов();
		
		ЗаполнитьЗначенияСвойств(СтруктураСуммПоСтроке, СтрокаТовары);
		ОкруглитьДоЦелого(СтруктураСуммПоСтроке.КоличествоМест);
		Для Каждого Элемент Из СтруктураСуммПоСтроке Цикл
			Если ЗначениеЗаполнено(Элемент.Значение) Тогда
				ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] = ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] + Элемент.Значение;
				ИтоговыеСуммы["Итого"+Элемент.Ключ] = ИтоговыеСуммы["Итого"+Элемент.Ключ] + Элемент.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета)
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ВсегоНомеров, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС, ВалютаРегламентированногоУчета));
		
	КонецПроцедуры
	
	Процедура ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки, ВыводитьКодНоменклатуры = Истина, ВыводитьКодТНВД = Неопределено, СчетФактураНаАванс = Ложь)
		
		ИспользоватьНаборы = ЛОЖЬ;
		
		ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(СтрокаТовары, ИспользоватьНаборы);
		
		ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КоличествоМест", 0);
		СтруктураПараметров.Вставить("КоличествоВОдномМесте", 0);
		СтруктураПараметров.Вставить("НоменклатураКод", "");
		СтруктураПараметров.Вставить("КодТНВЭД", "--");
		
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтрокаТовары);
		ОкруглитьДоЦелого(СтруктураПараметров.КоличествоМест);
		СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
		
		ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = СтрокаТовары.ЭтоВозвратнаяТара;	
		Если ВыводитьКодТНВД <> Неопределено Тогда
			ДополнительныеПараметрыПолученияНаименованияДляПечати.КодТНВЭД = ?(НЕ ВыводитьКодТНВД.ВыводитьВКолонке И ВыводитьКодТНВД.ВыводитьВСтроке, СтрокаТовары.КодТНВЭД, "");
			Если НЕ ВыводитьКодТНВД.ВыводитьВКолонке Тогда
				СтруктураПараметров.КодТНВЭД = "--";
			КонецЕсли;
		КонецЕсли;
		
		//ПредставлениеНоменклатуры
		Если КодЯзыка = "ru" Тогда
			Если Не СтрокаТовары.НоменклатураНаименование = Неопределено Тогда
				ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
				+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Строка(СтрокаТовары.НоменклатураНаименование),
				СтрокаТовары.ХарактеристикаНаименование,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати)
				+ ПрефиксИПостфикс.Постфикс;
			Иначе
				ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
				+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Строка(СтрокаТовары.Номенклатура),
				СтрокаТовары.ХарактеристикаНаименование,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати)
				+ ПрефиксИПостфикс.Постфикс;
			КонецЕсли;
		КонецЕсли;
		Если КодЯзыка = "en" Тогда
			ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
			+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			Строка(СтрокаТовары.Номенклатура.НаименованиеЯзык1),
			СтрокаТовары.ХарактеристикаНаименование,
			,
			,
			ДополнительныеПараметрыПолученияНаименованияДляПечати)
			+ ПрефиксИПостфикс.Постфикс;
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
			+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			Строка(СтрокаТовары.Номенклатура.НаименованиеЯзык2),
			СтрокаТовары.ХарактеристикаНаименование,
			,
			,
			ДополнительныеПараметрыПолученияНаименованияДляПечати)
			+ ПрефиксИПостфикс.Постфикс;
		КонецЕсли;
		//КонецПредставленияНоменклатуры
		
		СтруктураПараметров.Вставить("ПредставлениеНоменклатуры", ПредставлениеНоменклатуры);
		
		Если Не ВыводитьКодНоменклатуры Тогда
			СтруктураПараметров.НоменклатураКод = "";
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		
		Если ИспользоватьНаборы
			И СтрокаТовары.ЭтоКомплектующие
			И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
			И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
			ИЛИ СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
			// Область должна остаться незаполненной
			ОбластьМакета.Параметры.Заполнить(НаборыСервер.ПустыеДанные());
		ИначеЕсли ИспользоватьНаборы
			И СтрокаТовары.ЭтоНабор
			И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
			И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих
			ИЛИ СчетФактураНаАванс) Тогда
			// Область должна остаться незаполненной
			ОбластьМакета.Параметры.Заполнить(НаборыСервер.ПустыеДанные());
		КонецЕсли;
		Если КодЯзыка = "en" Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык1;
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык2;
		КонецЕсли;
		Если СтрокаТовары.ЕдиницаИзмерения = Неопределено Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = СтрокаТовары.Номенклатура.ЕдиницаИзмерения;
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = СтрокаТовары.Номенклатура.ЕдиницаИзмерения.Код;
		КонецЕсли;	
		Если ДокОснование.ЦенаВключаетНДС = Истина Тогда
			ОбластьМакета.Параметры.Цена = (СтрокаТовары.Цена / (1 + (СтрЗаменить(СтрокаТовары.СтавкаНДС,"%", "") / 100)))
		КонецЕсли;
		СуммаНаСтранице = 0;
		СуммаНаСтраницеСНДС = 0;
		
		Если ДокОснование.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда 
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
			|	СуммыДокументовВВалютахУчета.СуммаНДСРегл КАК СуммаНДСРегл
			|ИЗ
			|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
			|ГДЕ
			|	СуммыДокументовВВалютахУчета.Регистратор = &Регистратор
			|	И СуммыДокументовВВалютахУчета.НомерСтроки = &НомерСтроки";
			Запрос.УстановитьПараметр("Регистратор", ДокОснование);
			Запрос.УстановитьПараметр("НомерСтроки", ОбластьМакета.Параметры.НомерСтроки);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл      
				ОбластьМакета.Параметры.СуммаБезНДС = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;
				ОбластьМакета.Параметры.СуммаСНДС   = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
				ОбластьМакета.Параметры.Цена = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл/ОбластьМакета.Параметры.Количество; 
				СуммаНаСтранице = СуммаНаСтранице + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;  
				СуммаНаСтраницеСНДС = СуммаНаСтраницеСНДС + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
			КонецЦикла;
		КонецЕсли;	
		
		
	КонецПроцедуры
	
	Функция НомерСчетаФактурыНаПечать(Номер, ИндексПодразделения, УдалитьПользовательскийПрефикс = Ложь)
		
		НомерНаПечать = "";
		НомерНаПечать = СокрЛП(Номер);
		Возврат НомерНаПечать;
		
		Если Номер <> Неопределено Тогда
			
			НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Ложь, УдалитьПользовательскийПрефикс);
			
			ПозицияРазделителя = СтрНайти(НомерНаПечать, "-");
			Префикс = Лев(НомерНаПечать, ПозицияРазделителя);
			НомерБезПрефикса = Сред(НомерНаПечать, ПозицияРазделителя + 1);
			
			Если Лев(НомерБезПрефикса, 1) = "И" Тогда
				НомерНаПечать = Префикс + Сред(НомерБезПрефикса, 2);
			КонецЕсли;
			Если ЗначениеЗаполнено(ИндексПодразделения) Тогда
				НомерНаПечать = НомерНаПечать + "/" + ИндексПодразделения;
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат НомерНаПечать;
		
	КонецФункции
	
	Функция НомерСчетаФактурыНаПечать1(Номер, ИндексПодразделения, УдалитьПользовательскийПрефикс = Ложь)
		
		НомерНаПечать = "";
		НомерНаПечать = СокрЛП(Номер);
		
		Если Номер <> Неопределено Тогда
			
			НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Ложь, УдалитьПользовательскийПрефикс);
			
			ПозицияРазделителя = СтрНайти(НомерНаПечать, "-");
			Префикс = Лев(НомерНаПечать, ПозицияРазделителя);
			НомерБезПрефикса = Сред(НомерНаПечать, ПозицияРазделителя + 1);
			
			Если Лев(НомерБезПрефикса, 1) = "И" Тогда
				НомерНаПечать = Префикс + Сред(НомерБезПрефикса, 2);
			КонецЕсли;
			Если ЗначениеЗаполнено(ИндексПодразделения) Тогда
				НомерНаПечать = НомерНаПечать + "/" + ИндексПодразделения;
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат НомерНаПечать;
		
	КонецФункции
	
	
	#КонецОбласти
	
	
	#Область ПрограммныйИнтерфейс
	
	// Возвращает сведения о внешней обработке.
	Функция СведенияОВнешнейОбработке() Экспорт
		ПараметрыРегистрации				= ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(СтандартныеПодсистемыСервер.ВерсияБиблиотеки());
		ПараметрыРегистрации.Вид			= ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
		ПараметрыРегистрации.Версия			= "1.1";
		ПараметрыРегистрации.БезопасныйРежим= Истина;
		ПараметрыРегистрации.Информация		= "Дополнительная печатная форма Счет-фактура. №534 от 2 апреля 2021.";
		ПараметрыРегистрации.Назначение.Добавить("Документ.РеализацияТоваровУслуг");
		ПараметрыРегистрации.Назначение.Добавить("Документ.СчетФактураВыданный");
		
		НоваяКоманда				= ПараметрыРегистрации.Команды.Добавить();
		НоваяКоманда.Представление = НСтр("ru = 'ОИР Счет-фактура'");
		НоваяКоманда.Идентификатор = "СчетФактура";
		НоваяКоманда.Использование	= ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
		НоваяКоманда.ПоказыватьОповещение = Истина;
		НоваяКоманда.Модификатор = "ПечатьMXL";
		//НоваяКоманда.ЗаменяемыеКоманды = "УПД";	
		Возврат ПараметрыРегистрации;
		
	КонецФункции
	
	#КонецОбласти
	
	#Область Печать
	
	Функция ПолучитьСчетаФактурыНаПечать_СчетФактураВыданный(МассивОбъектов, Корректировочный = Ложь, ПечатьВВалюте = Ложь)
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТаблицаОснований = Новый ТаблицаЗначений;
		ТаблицаОснований.Колонки.Добавить("ДокументОснование", Документы.ТипВсеСсылки());
		Для Каждого ДокументОснование Из МассивОбъектов Цикл
			СтрокаОснования = ТаблицаОснований.Добавить();
			СтрокаОснования.ДокументОснование = ДокументОснование;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ДокументыОснования
		|ИЗ
		|	&ТаблицаОснований КАК ДокументыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК Ссылка,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ДанныеОснованийСчетовФактур.Валюта ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК НеТребуетсяСчетФактура,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА &ПечатьВВалюте
		|					И ЕСТЬNULL(ДанныеОснованийСчетовФактур.Валюта, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК НеТребуетсяПечатьВВалюте
		|ПОМЕСТИТЬ ТаблицаОснований
		|ИЗ
		|	ДокументыОснования КАК ДокументыОснования
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
		|		ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
		|			И (ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторМетаданных)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
		|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
		|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
		|
		|ПОМЕСТИТЬ НомераИсправлений
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетаФактурыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетаФактуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсправленныйСчетФактура
		|			ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
		|				И СчетаФактуры.Исправление
		|		ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
		|			И СчетаФактуры.Проведен
		|			И НЕ СчетаФактуры.ПометкаУдаления
		|			//УсловиеКорректировочный
		|	ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
		|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
		|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
		|	ТаблицаОснований.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
		|
		|ПОМЕСТИТЬ ОснованияСоСчетФактурой
		|ИЗ
		|	НомераИсправлений КАК СчетаФактурыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураВыданный.Ссылка КАК СчетФактура
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		НомераИсправлений КАК НомераИсправлений
		|	ПО
		|		НомераИсправлений.НомерИсправления = СчетФактураВыданный.НомерИсправления
		|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураВыданный.Исправление ТОГДА
		|		                                         СчетФактураВыданный.СчетФактураОснование
		|		                                     ИНАЧЕ
		|		                                         СчетФактураВыданный.Ссылка
		|		                                     КОНЕЦ
		|		И СчетФактураВыданный.Проведен
		|		И НЕ СчетФактураВыданный.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
		|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
		|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
		|	ВЫБОР
		|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                     КАК НеВыставленСчетФактура
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
		|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
		
		Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
		Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		Запрос.УстановитьПараметр("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
		
		Если Корректировочный Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеКорректировочный",
			"И СчетаФактуры.Корректировочный");
			
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		СчетаФактурыНаПечать = РезультатЗапроса[4].Выгрузить().ВыгрузитьКолонку("СчетФактура");
		ТаблицаОшибок        = РезультатЗапроса[5].Выгрузить();
		
		Структура = Новый Структура;
		Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
		Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
		
		Возврат Структура;
		
	КонецФункции
	
	Функция ТекстЗапросаТаблицаОснований_СчетФактураВыданный()
		
		Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА &ПоТорговымДокументам
		|				ИЛИ НЕ ТаблицаОснований.Ссылка.Корректировочный
		|					И НЕ ТаблицаОснований.Ссылка.Исправление
		|			ТОГДА ТаблицаОснований.ДокументОснование
		|		ИНАЧЕ ТаблицаОснований.Ссылка
		|	КОНЕЦ КАК ДокументОснование,
		|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
		|	ТаблицаОснований.Ссылка.Дата КАК Дата
		|ПОМЕСТИТЬ СчетаФактурыОснования
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.Ссылка КАК Ссылка,
		|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
		|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный,
		|	ТаблицаОснований.Ссылка.Дата КАК Дата
		|ПОМЕСТИТЬ СчетаФактурыОснования_Шапка
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
		|	И (НЕ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			И НЕ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|		ИЛИ НЕ ТаблицаОснований.Ссылка.Корректировочный)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.Ссылка,
		|	ЕСТЬNULL(СчетФактураВыданныйДокументыОснования.ДокументОснование, ТаблицаОснований.Ссылка),
		|	ТаблицаОснований.Ссылка.Корректировочный,
		|	ТаблицаОснований.Ссылка.Дата
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК ТаблицаТовары
		|		ПО ТаблицаОснований.Ссылка = ТаблицаТовары.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		|		ПО (ТаблицаТовары.ИсходныйСчетФактура = СчетФактураВыданныйДокументыОснования.Ссылка)
		|ГДЕ
		|	ТаблицаОснований.Ссылка В(&МассивОбъектов)
		|	И (ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|			ИЛИ ТаблицаОснований.ДокументОснование ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования_Шапка.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	СчетаФактурыОснования_Шапка КАК СчетаФактурыОснования_Шапка";
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуШапокОснований_СчетФактураВыданный(МенеджерВременныхТаблиц, МассивОснований)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
		
		ТекстЗапроса           = "";
		ТекстОтветственныеЛица = "";
		ПервыйТип                  = Истина;
		ПервыйТипОтветственныеЛица = Истина;
		
		Для Каждого ТипОснования Из ТипыОснований Цикл
			
			ОбъектыТипа = ТипОснования.Значение;
			ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
			
			Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
			
			Если Не ПустаяСтрока(ТекстЗапроса) Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
				ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[ИмяОбъекта];
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
			
			ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
			
			СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
			ОбъектыТипа, МенеджерВременныхТаблиц, , ,
			ИмяВременнойТаблицы);
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти(ИмяВременнойТаблицы) <> Неопределено Тогда
				ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
				|ВЫБРАТЬ
				|	Таблица.Ссылка                       КАК Ссылка,
				|	Таблица.РуководительНаименование     КАК РуководительНаименование,
				|	Таблица.РуководительДолжность        КАК РуководительДолжность,
				|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
				|//ОператорПОМЕСТИТЬ
				|ИЗ
				|	" + ИмяВременнойТаблицы + " КАК Таблица";
				
				ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
				"//ОператорПОМЕСТИТЬ", ?(ПервыйТипОтветственныеЛица, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
				ПервыйТипОтветственныеЛица = Ложь;
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаШапокДокументов", ""));
			
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		Если ТекстЗапроса = "" Тогда
			ТекстЗапроса = ПустойТекстЗапросаШапокОснований_СчетФактураВыданный();
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ТекстОтветственныеЛица = "" Тогда
			ТекстОтветственныеЛица = "
			|ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Ссылка,
			|	""""         КАК РуководительНаименование,
			|	""""         КАК РуководительДолжность,
			|	""""         КАК ГлавныйБухгалтерНаименование
			|ПОМЕСТИТЬ ТаблицаОтветственныеЛица";
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	Процедура ПоместитьВременнуюТаблицуДанныхОснований_СчетФактураВыданный(МенеджерВременныхТаблиц, МассивОснований)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
		
		ТекстЗапроса           = "";
		ПервыйТип              = Истина;
		
		Для Каждого ТипОснования Из ТипыОснований Цикл
			
			ОбъектыТипа = ТипОснования.Значение;
			ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
			
			Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
			
			Если Не ПустаяСтрока(ТекстЗапроса) Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[ИмяОбъекта];
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
			
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	Функция ПоместитьВременнуюТаблицуПлатежноРасчетныхДокументов_СчетФактураВыданный(МенеджерВременныхТаблиц, МассивАналитикУчетаПоПартнерам)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов_СчетФактураВыданный();	
		Запрос.УстановитьПараметр("МассивАналитикУчетаПоПартнерам", МассивАналитикУчетаПоПартнерам);
		Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
		
		ПлатежноРасчетныеДокументыСводно = Новый ТаблицаЗначений;
		ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("Ссылка",
		Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
		ПлатежноРасчетныеДокументыСводно.Колонки.Добавить("СтрокаПлатежноРасчетныеДокументы",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1000)));
		
		ПлатежноРасчетныеДокументы = Новый ТаблицаЗначений;
		ПлатежноРасчетныеДокументы.Колонки.Добавить("НомерПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30)));
		ПлатежноРасчетныеДокументы.Колонки.Добавить("ДатаПлатежноРасчетногоДокумента",
		Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
		
		ВыборкаСчетФактур = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетФактур.Следующий() Цикл
			
			ПлатежноРасчетныеДокументы.Очистить();
			
			ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке_СчетФактураВыданный(ПлатежноРасчетныеДокументы, ВыборкаСчетФактур);
			
			НоваяСтрока = ПлатежноРасчетныеДокументыСводно.Добавить();		
			НоваяСтрока.Ссылка = ВыборкаСчетФактур.СчетФактура;
			НоваяСтрока.СтрокаПлатежноРасчетныеДокументы = СтрокаРасчетноПлатежныхДокументов_СчетФактураВыданный(ПлатежноРасчетныеДокументы);
			
		КонецЦикла;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.СтрокаПлатежноРасчетныеДокументы
		|ПОМЕСТИТЬ ТаблицаПлатежноРасчетныеДокументы
		|ИЗ
		|	&ПлатежноРасчетныеДокументы КАК Таблица";
		
		Запрос.УстановитьПараметр("ПлатежноРасчетныеДокументы", ПлатежноРасчетныеДокументыСводно); 
		
		Запрос.Выполнить();
		
		Возврат ПлатежноРасчетныеДокументы;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуЗаполненияПлатежноРасчетныхДокументов_СчетФактураВыданный(МенеджерВременныхТаблиц)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактураВыданныйДокументыОснования.Ссылка,
		|	СчетФактураВыданныйДокументыОснования.Ссылка.Организация КАК Организация,
		|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов
		|ИЗ
		|	СчетаФактурыОснования_Шапка КАК СчетФактураВыданныйДокументыОснования
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК СчетФактураВыданныйПлатежноРасчетныеДокументы
		|		ПО СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка
		|ГДЕ
		|	СчетФактураВыданныйПлатежноРасчетныеДокументы.НомерСтроки ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование,
		|	Организация";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	Функция КонецРасчетаДляАктуализацииПлатежноРасчетныхДокументов_СчетФактураВыданный(МенеджерВременныхТаблиц)
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(Расчеты.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
		|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
		|			И Расчеты.АналитикаУчетаПоПартнерам.Организация = ТаблицаДокументов.Организация
		|ГДЕ
		|	Расчеты.Активность
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(Расчеты.Период) ЕСТЬ НЕ NULL";
		
		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
			ТаблицаПериод = Результат.Выгрузить();
			КонецРасчета = КонецМесяца(ТаблицаПериод[0].Период) + 1;
		Иначе
			КонецРасчета = КонецМесяца(ТекущаяДатаСеанса())+1;
		КонецЕсли;
		
		Возврат КонецРасчета;
		
	КонецФункции
	
	Процедура СформироватьВременнуюТаблицуТоваровДляПечати_СчетФактураВыданный(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
		
		ТекстОбщейТаблицыТовары = "";
		ПервыйТип               = Истина;
		ЕстьНаборы              = Ложь;
		
		Для Каждого ТипОснования Из ТипыОснований Цикл
			
			ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
			ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
			ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
			
			ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
			
			Если ИмяОбъекта = "ВозвратТоваровПоставщику"
				Или ИмяОбъекта = "ВыкупВозвратнойТарыКлиентом"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж"
				Или ИмяОбъекта = "ПередачаТоваровМеждуОрганизациями"
				Или ИмяОбъекта = "РеализацияТоваровУслуг" 
				Или ИмяОбъекта = "КорректировкаРеализации" 
				Или ИмяОбъекта = "ВыкупТоваровХранителем" Тогда
				ПараметрыЗаполнения.ВключаяНомераГТД = Истина;
			КонецЕсли;
			
			Если ИмяОбъекта = "КорректировкаРеализации" Тогда
				ПараметрыЗаполнения.ВключаяДоКорректировки = Истина;
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[ИмяОбъекта];
			КонецЕсли;	
			Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
				МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваровПоВознаграждению(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
			Иначе
				МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
			КонецЕсли;
			
			Если ИмяОбъекта = "КорректировкаРеализации"
				Или ИмяОбъекта = "ВозвратТоваровОтКлиента" 
				Или ИмяОбъекта = "ВозвратТоваровМеждуОрганизациями" 
				Тогда
				МенеджерОбъекта.ПреобразоватьВременнуюТаблицуТоваровДляСчетаФактуры(МенеджерВременныхТаблиц);
			КонецЕсли;
			
			Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
				ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|ВЫБРАТЬ
			|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
			|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
			|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
			|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
			|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
			|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
			|//ДанныеТНВЭД
			|	ТаблицаДокумента.Количество                                КАК Количество,
			|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
			|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
			|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
			|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
			|	%Содержание                                                КАК Содержание,
			|//ДанныеНабора
			|//ДанныеКорректировки
			|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар,
			|	ТаблицаДокумента.ВернутьМногооборотнуюТару                 КАК ВернутьМногооборотнуюТару
			|//ОператорПОМЕСТИТЬ
			|ИЗ
			|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
			
			Если ИмяОбъекта = "АктВыполненныхРабот"
				Или ИмяОбъекта = "КорректировкаРеализации"
				Или ИмяОбъекта = "СчетФактураВыданный"
				Или ИмяОбъекта = "РеализацияУслугПрочихАктивов"
				Или ИмяОбъекта = "ЗаписьКнигиПродаж" Тогда
				ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", "ТаблицаДокумента.Содержание");
			Иначе
				ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "%Содержание", """""");
			КонецЕсли;
			
			Если ИмяОбъекта = "АктВыполненныхРабот" Или ИмяОбъекта = "РеализацияТоваровУслуг" Тогда
				ЕстьНаборы = Истина;
				ТекстЗамены =
				"	ТаблицаДокумента.ВариантКомплектацииНоменклатуры             КАК ВариантКомплектацииНоменклатуры,
				|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
				|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
				|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
				|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,";
			Иначе
				ТекстЗамены =
				"	НЕОПРЕДЕЛЕНО                                                 КАК ВариантКомплектацииНоменклатуры,
				|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантПредставленияНабораВПечатныхФормах,
				|	НЕОПРЕДЕЛЕНО                                                 КАК ВариантРасчетаЦеныНабора,
				|	&ПустаяНоменклатура                                          КАК НоменклатураНабора,
				|	НЕОПРЕДЕЛЕНО                                                 КАК ХарактеристикаНабора,";
			КонецЕсли;
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеНабора", ТекстЗамены);
			
			Если ИмяОбъекта = "КорректировкаРеализации" Или ИмяОбъекта = "ВозвратТоваровОтКлиента" Или ИмяОбъекта = "ВозвратТоваровМеждуОрганизациями"
				Или ИмяОбъекта = "СчетФактураВыданный" Тогда
				ТекстЗамены =
				"	ТаблицаДокумента.КоличествоДо                                КАК КоличествоДо,
				|	ТаблицаДокумента.КоличествоУпаковокДо                        КАК КоличествоУпаковокДо,
				|	ТаблицаДокумента.СуммаБезНДСДо                               КАК СуммаБезНДСДо,
				|	ТаблицаДокумента.СуммаНДСДо                                  КАК СуммаНДСДо,
				|	ТаблицаДокумента.РазницаБезНДСУвеличение                     КАК РазницаБезНДСУвеличение,
				|	ТаблицаДокумента.РазницаБезНДСУменьшение                     КАК РазницаБезНДСУменьшение,
				|	ТаблицаДокумента.РазницаНДСУвеличение                        КАК РазницаНДСУвеличение,
				|	ТаблицаДокумента.РазницаНДСУменьшение                        КАК РазницаНДСУменьшение,
				|	ТаблицаДокумента.РазницаСНДСУвеличение                       КАК РазницаСНДСУвеличение,
				|	ТаблицаДокумента.РазницаСНДСУменьшение                       КАК РазницаСНДСУменьшение,";
			Иначе
				ТекстЗамены = 
				"	0                                                            КАК КоличествоДо,
				|	0                                                            КАК КоличествоУпаковокДо,
				|	0                                                            КАК СуммаБезНДСДо,
				|	0                                                            КАК СуммаНДСДо,
				|	0                                                            КАК РазницаБезНДСУвеличение,
				|	0                                                            КАК РазницаБезНДСУменьшение,
				|	0                                                            КАК РазницаНДСУвеличение,
				|	0                                                            КАК РазницаНДСУменьшение,
				|	0                                                            КАК РазницаСНДСУвеличение,
				|	0                                                            КАК РазницаСНДСУменьшение,";
			КонецЕсли;
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеКорректировки", ТекстЗамены);
			
			Если ИмяОбъекта = "ЗаписьКнигиПродаж"
				Или ИмяОбъекта = "РеализацияТоваровУслуг" 
				Или ИмяОбъекта = "КорректировкаРеализации" Тогда
				ТекстЗамены = "	ТаблицаДокумента.КодТНВЭД             КАК КодТНВЭД,";
			Иначе
				ТекстЗамены = "	НЕОПРЕДЕЛЕНО                          КАК КодТНВЭД,";
			КонецЕсли;
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары, "//ДанныеТНВЭД", ТекстЗамены);
			
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		ТекстТаблицыНаборов =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                КАК Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
		|	ТаблицаТоваров.СтавкаНДС             КАК СтавкаНДС,
		|	ТаблицаТоваров.КодТНВЭД              КАК КодТНВЭД,
		|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
		|	СУММА(ТаблицаТоваров.СуммаБезНДС)    КАК СуммаБезНДС,
		|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО ДанныеНоменклатуры.Ссылка = ТаблицаТоваров.Номенклатура
		|
		|ГДЕ
		|	ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
		|	И (ДанныеНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		ИЛИ НЕ ТаблицаТоваров.ВернутьМногооборотнуюТару)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора,
		|	ТаблицаТоваров.СтавкаНДС,
		|	ТаблицаТоваров.КодТНВЭД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка                                    КАК Ссылка,
		|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
		|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
		|	Товары.НоменклатураНабора,
		|	Товары.ХарактеристикаНабора,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
		|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ОсновнаяКомплектующая,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	0 КАК КоличествоПоУмолчанию,
		|	Товары.Количество КАК Количество
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
		|ИЗ
		|	ТаблицаТоваров КАК Товары
		|
		|ГДЕ
		|	Товары.НоменклатураНабора <> &ПустаяНоменклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Ссылка                                                                                КАК Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
		|	ЛОЖЬ КАК ОсновнаяКомплектующая,
		|	NULL КАК СтавкаНДС,
		|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
		|	0 КАК Количество
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ ТаблицаТоваров КАК Т) КАК Т
		|		ПО ИСТИНА
		|ГДЕ
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ ТаблицаТоваров КАК Т)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантРасчетаЦеныНабора,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
		|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
		|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
		|	СУММА(Таблица.Количество) КАК Количество
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантРасчетаЦеныНабора,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.ОсновнаяКомплектующая
		|				ТОГДА Результат.СтавкаНДС
		|			ИНАЧЕ null
		|		КОНЕЦ) КАК СтавкаНДС,
		|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) КАК КоэффициентМаксимум,
		|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоэффициентМинимум
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
		|СГРУППИРОВАТЬ ПО
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
		|
		|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию)
		|			И ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
		|		&ВариантНаборИКомплектующие
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|
		|	ВЫБОР КОГДА ДанныеОснований.ХозяйственнаяОперация В (&ХозяйственныеОперацииПередачаНаКомиссию) ТОГДА
		|		ВЫБОР КОГДА
		|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = &ВариантТолькоНабор ТОГДА
		|				&ВариантНаборИКомплектующие
		|			ИНАЧЕ
		|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|			КОНЕЦ = &ВариантНаборИКомплектующие
		|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
		|
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
		|		ИНАЧЕ
		|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
		|		КОНЕЦ
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
		|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
		|
		|	Таблица.Ссылка                            КАК Ссылка,
		|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
		|	Таблица.НомерСтроки                       КАК НомерСтроки,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
		|	ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПолныйНабор,
		|	Таблица.СуммаБезНДС                       КАК СуммаБезНДС,
		|	Таблица.СуммаНДС                          КАК СуммаНДС,
		|	Таблица.КодТНВЭД                          КАК КодТНВЭД,
		|	Таблица.СтавкаНДС                         КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
		|ИЗ
		|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
		|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
		|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
		|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
		|	ПО ДанныеОснований.Ссылка = Таблица.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		ТекстРезультирующейТаблицы = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
		|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
		|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
		|		ДанныеНоменклатуры.НаименованиеПолное
		|	ИНАЧЕ 
		|		ТаблицаТоваров.Содержание
		|	КОНЕЦ                                                    КАК НоменклатураНаименование,
		|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
		|		ДанныеНоменклатуры.Артикул
		|	ИНАЧЕ
		|		ДанныеНоменклатуры.Код
		|	КОНЕЦ                                                    КАК НоменклатураКод,
		|	ТаблицаТоваров.КодТНВЭД                                  КАК КодТНВЭД,
		|	ВЫБОР
		|		КОГДА ДанныеНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|				И ТаблицаТоваров.ВернутьМногооборотнуюТару
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                    КАК ЭтоВозвратнаяТара,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения И ТаблицаТоваров.Номенклатура <> Неопределено
		|			ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
		|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
		|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
		|	ВЫБОР КОГДА ТаблицаТоваров.Содержание = """" ТОГДА
		|		ТаблицаТоваров.Характеристика
		|	ИНАЧЕ 
		|		""""
		|	КОНЕЦ                                                    КАК Характеристика,
		|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
		|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
		|
		|//РеквизитыТаблицыНаборов
		|
		|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.Количество
		|	КОГДА ТаблицаТоваров.КоличествоУпаковок = 0 ТОГДА
		|		ТаблицаТоваров.Количество
		|	ИНАЧЕ
		|		ТаблицаТоваров.КоличествоУпаковок
		|	КОНЕЦ                                                    КАК Количество,
		|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.КоличествоДо
		|	КОГДА КоличествоУпаковокДо = 0 ТОГДА
		|		ТаблицаТоваров.КоличествоДо
		|	ИНАЧЕ
		|		ТаблицаТоваров.КоличествоУпаковокДо
		|	КОНЕЦ                                                    КАК КоличествоДо,
		|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
		|		0
		|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	КОГДА ТаблицаТоваров.КоличествоУпаковок = 0 ТОГДА
		|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	ИНАЧЕ
		|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
		|	КОНЕЦ                                                    КАК Цена,
		|	ВЫБОР КОГДА ТаблицаТоваров.КоличествоДо = 0 ТОГДА
		|		0
		|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоДо
		|	КОГДА ТаблицаТоваров.КоличествоУпаковокДо = 0 ТОГДА
		|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоДо
		|	ИНАЧЕ
		|		ТаблицаТоваров.СуммаБезНДСДо / ТаблицаТоваров.КоличествоУпаковокДо
		|	КОНЕЦ                                                    КАК ЦенаДо,
		|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаТоваров.СуммаБезНДСДо                             КАК СуммаБезНДСДо,
		|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
		|	ТаблицаТоваров.СуммаНДСДо                                КАК СуммаНДСДо,
		|	ТаблицаТоваров.РазницаБезНДСУвеличение                   КАК РазницаБезНДСУвеличение,
		|	ТаблицаТоваров.РазницаБезНДСУменьшение                   КАК РазницаБезНДСУменьшение,
		|	ТаблицаТоваров.РазницаНДСУвеличение                      КАК РазницаНДСУвеличение,
		|	ТаблицаТоваров.РазницаНДСУменьшение                      КАК РазницаНДСУменьшение,
		|	ТаблицаТоваров.РазницаСНДСУвеличение                     КАК РазницаСНДСУвеличение,
		|	ТаблицаТоваров.РазницаСНДСУменьшение                     КАК РазницаСНДСУменьшение
		|
		|ПОМЕСТИТЬ ТаблицаТоваровДокументов
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|//СоединениеТаблицыНаборов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
		|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка
		|ГДЕ
		|	ТаблицаТоваров.НоменклатураНабора = &ПустаяНоменклатура
		|	ИЛИ (ТаблицаТоваров.НоменклатураНабора <> &ПустаяНоменклатура
		|		И ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах В (
		|		&ВариантТолькоКомплектующие, &ВариантНаборИКомплектующие))";
		
		Если ЕстьНаборы Тогда
			
			ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
			"	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
			|		ВременнаяТаблицаНаборы.НомерСтроки
			|	ИНАЧЕ
			|		ТаблицаТоваров.НомерСтроки
			|	КОНЕЦ                                                    КАК НомерСтрокиНаборы,
			|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
			|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
			|	ИНАЧЕ
			|		&ПустойВариантПредставленияНаборов
			|	КОНЕЦ                                                    КАК ВариантПредставленияНабораВПечатныхФормах,
			|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
			|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
			|	ИНАЧЕ
			|		&ПустойВариантРасчетаЦенНаборов
			|	КОНЕЦ                                                    КАК ВариантРасчетаЦеныНабора,
			|	ТаблицаТоваров.НоменклатураНабора                        КАК НоменклатураНабора,
			|	ТаблицаТоваров.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
			|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
			|		ИСТИНА
			|	ИНАЧЕ
			|		ЛОЖЬ
			|	КОНЕЦ                                                    КАК ЭтоКомплектующие,
			|	ЛОЖЬ                                                     КАК ЭтоНабор,
			|	ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
			|		ВременнаяТаблицаНаборы.ПолныйНабор
			|	ИНАЧЕ
			|		ЛОЖЬ
			|	КОНЕЦ                                                    КАК ПолныйНабор,");
			
			ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//СоединениеТаблицыНаборов",
			"		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
			|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
			|			И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
			|			И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
			|			И ВременнаяТаблицаНаборы.СтавкаНДС = ТаблицаТоваров.СтавкаНДС
			|			И  ВременнаяТаблицаНаборы.КодТНВЭД = ТаблицаТоваров.КодТНВЭД");
			
			ТекстРезультирующейТаблицы = ТекстРезультирующейТаблицы + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|" +
			
			"ВЫБРАТЬ
			|	ВременнаяТаблицаНаборы.Ссылка               КАК Ссылка,
			|	0                                           КАК НомерСтроки,
			|	ВременнаяТаблицаНаборы.НоменклатураНабора   КАК Номенклатура,
			|	ДанныеНоменклатуры.НаименованиеПолное       КАК НоменклатураНаименование,
			|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
			|		ДанныеНоменклатуры.Артикул
			|	ИНАЧЕ
			|		ДанныеНоменклатуры.Код
			|	КОНЕЦ                                       КАК НоменклатураКод,
			|	ВременнаяТаблицаНаборы.КодТНВЭД             КАК КодТНВЭД,
			|	ЛОЖЬ                                        КАК ЭтоВозвратнаяТара,
			|	ДанныеНоменклатуры.ЕдиницаИзмерения         КАК ЕдиницаИзмерения,
			|	ВременнаяТаблицаНаборы.ХарактеристикаНабора КАК Характеристика,
			|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
			|	ВременнаяТаблицаНаборы.СтавкаНДС            КАК СтавкаНДС,
			|
			|	ВременнаяТаблицаНаборы.НомерСтроки                               КАК НомерСтрокиНаборы,
			|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
			|	ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
			|	ВременнаяТаблицаНаборы.НоменклатураНабора                        КАК НоменклатураНабора,
			|	ВременнаяТаблицаНаборы.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
			|	ЛОЖЬ                                                             КАК ЭтоКомплектующие,
			|	ИСТИНА                                                           КАК ЭтоНабор,
			|	ВременнаяТаблицаНаборы.ПолныйНабор                               КАК ПолныйНабор,
			|
			|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
			|		ВременнаяТаблицаНаборы.Количество
			|	ИНАЧЕ
			|		ВременнаяТаблицаНаборы.КоличествоУпаковок
			|	КОНЕЦ                                       КАК Количество,
			|	0                                           КАК КоличествоДо,
			|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
			|		ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.Количество
			|	ИНАЧЕ
			|		ВременнаяТаблицаНаборы.СуммаБезНДС / ВременнаяТаблицаНаборы.КоличествоУпаковок
			|	КОНЕЦ                                       КАК Цена,
			|	0                                           КАК ЦенаДо,
			|	ВременнаяТаблицаНаборы.СуммаБезНДС          КАК СуммаБезНДС,
			|	0                                           КАК СуммаБезНДСДо,
			|	ВременнаяТаблицаНаборы.СуммаНДС             КАК СуммаНДС,
			|	0                                           КАК СуммаНДСДо,
			|	0                                           КАК РазницаБезНДСУвеличение,
			|	0                                           КАК РазницаБезНДСУменьшение,
			|	0                                           КАК РазницаНДСУвеличение,
			|	0                                           КАК РазницаНДСУменьшение,
			|	0                                           КАК РазницаСНДСУвеличение,
			|	0                                           КАК РазницаСНДСУменьшение
			|
			|ИЗ
			|	ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
			|		ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ДанныеНоменклатуры.Ссылка
			|
			|ГДЕ
			|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (
			|		&ВариантТолькоНабор, &ВариантНаборИКомплектующие)";
			
		Иначе
			
			ТекстРезультирующейТаблицы = СтрЗаменить(ТекстРезультирующейТаблицы, "//РеквизитыТаблицыНаборов",
			"	ТаблицаТоваров.НомерСтроки          КАК НомерСтрокиНаборы,
			|	&ПустойВариантПредставленияНаборов  КАК ВариантПредставленияНабораВПечатныхФормах,
			|	&ПустойВариантРасчетаЦенНаборов     КАК ВариантРасчетаЦеныНабора,
			|	ТаблицаТоваров.НоменклатураНабора   КАК НоменклатураНабора,
			|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
			|	ЛОЖЬ                                КАК ЭтоКомплектующие,
			|	ЛОЖЬ                                КАК ЭтоНабор,
			|	ЛОЖЬ                                КАК ПолныйНабор,");
			
		КонецЕсли;
		
		Запрос.Текст = ТекстОбщейТаблицыТовары +
		?(ЕстьНаборы, ТекстТаблицыНаборов, "") +
		ТекстРезультирующейТаблицы;
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Ссылка",
		"ТаблицаТоваров.Упаковка",
		?(ИмяОбъекта = "РеализацияУслугПрочихАктивов","","ТаблицаТоваров.Номенклатура")));
		
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		Запрос.УстановитьПараметр("ПустаяНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
		
		КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
			КолонкаКодов = "Код";
		КонецЕсли;
		Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
		
		Запрос.УстановитьПараметр("ВариантТолькоНабор", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор);
		Запрос.УстановитьПараметр("ВариантТолькоКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие);
		Запрос.УстановитьПараметр("ВариантНаборИКомплектующие",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие);
		Запрос.УстановитьПараметр("ПустойВариантПредставленияНаборов",
		Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойВариантРасчетаЦенНаборов", Перечисления.ВариантыРасчетаЦенНаборов.ПустаяСсылка());
		
		МассивОперацийПередачаНаКомиссию = Новый Массив;
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
		Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
		
		Запрос.УстановитьПараметр("МассивОснований", МассивОснований);
		Запрос.Текст = Запрос.Текст + 
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ШтрихкодУпаковки
		|ПОМЕСТИТЬ ШтрихкодыУпаковок
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивОснований)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ШтрихкодУпаковки
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ШтрихкодыУпаковок КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивОснований)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ШтрихкодУпаковки
		|ИЗ
		|	Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивОснований)
		|";
		
		Запрос.Выполнить();
		
		ПараметрыПечати.ВыводитьНаборы = ЕстьНаборы;
		
	КонецПроцедуры
	
	Процедура ЗаполнитьТаблицуПлатежноРасчетныхДокументовПоВыборке_СчетФактураВыданный(ПлатежноРасчетныеДокументы, ДанныеВыборки)
		
		Выборка = ДанныеВыборки.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ПлатежноРасчетныеДокументы.Добавить();
			
			Если ЗначениеЗаполнено(Выборка.НомерВходящегоДокумента) Тогда
				НоваяСтрока.НомерПлатежноРасчетногоДокумента = Выборка.НомерВходящегоДокумента;
			Иначе
				НоваяСтрока.НомерПлатежноРасчетногоДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
				Выборка.Номер,
				Ложь,
				Истина);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ДатаВходящегоДокумента) Тогда
				НоваяСтрока.ДатаПлатежноРасчетногоДокумента = Выборка.ДатаВходящегоДокумента;
			Иначе
				НоваяСтрока.ДатаПлатежноРасчетногоДокумента = Выборка.Дата;
			КонецЕсли;
			
		КонецЦикла;
		ПлатежноРасчетныеДокументы.Свернуть("ДатаПлатежноРасчетногоДокумента, НомерПлатежноРасчетногоДокумента", "");
		ПлатежноРасчетныеДокументы.Сортировать("ДатаПлатежноРасчетногоДокумента Возр, НомерПлатежноРасчетногоДокумента Возр");
		
	КонецПроцедуры
	
	Функция СтрокаРасчетноПлатежныхДокументов_СчетФактураВыданный(ПлатежноРасчетныеДокументы)
		
		СтрокаНомеровИДата = "";
		Для Каждого СтрокаТаблицы Из ПлатежноРасчетныеДокументы Цикл
			СтрокаНомеровИДата = СтрокаНомеровИДата + ?(ПустаяСтрока(СтрокаНомеровИДата), "", ", ")
			+ СтрокаТаблицы.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(СтрокаТаблицы.ДатаПлатежноРасчетногоДокумента, "ДЛФ=D");
		КонецЦикла; 
		
		Возврат СтрокаНомеровИДата;
		
	КонецФункции
	
	Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры_СчетФактураВыданный(ПараметрыПечати)
		
		ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ СчетаФактурыОснованияПервые
		|ИЗ
		|	СчетаФактурыОснования_Шапка КАК СчетаФактурыОснования
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
		|	
		|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
		|	ИНАЧЕ
		|		СчетФактураВыданный.Организация
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПокупатель.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеОрганизацийПокупатель.ГоловнаяОрганизация
		|	КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеКонтрагента.ГоловнойКонтрагент
		|	ИНАЧЕ
		|		СчетФактураВыданный.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|
		|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеОснований.Грузоотправитель) = ТИП(Справочник.Контрагенты)
		|		И ДанныеОснований.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		ДанныеОснований.Грузоотправитель
		|	КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане
		|	КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураВыданный.Организация
		|	ИНАЧЕ
		|		ДанныеОснований.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|
		|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		СчетФактураВыданный.Контрагент
		|	ИНАЧЕ
		|		ДанныеОснований.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|
		|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
		|	КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеОрганизацийПоставщик.ЦифровойИндексОбособленногоПодразделения
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК ЦифровойИндекс,
		|
		|	ВЫБОР КОГДА НЕ ДанныеПодразделенийДляКПП.РегистрацияВНалоговомОргане.Ссылка ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделенийДляКПП.РегистрацияВНалоговомОргане.КПП
		|	ИНАЧЕ
		|		ДанныеОрганизацийПоставщик.КПП
		|	КОНЕЦ КАК КПППоставщика,
		|
		|	ВЫБОР КОГДА СчетФактураВыданный.КППКонтрагента ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
		|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		СчетФактураВыданный.КППКонтрагента
		|	КОНЕЦ КАК КПППокупателя,
		|
		|	ВЫБОР КОГДА СчетФактураВыданный.ИННКонтрагента ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
		|			  КОГДА СчетФактураВыданный.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		СчетФактураВыданный.ИННКонтрагента
		|	КОНЕЦ КАК ИННПокупателя,
		|
		|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
		|	ДанныеОснований.Комиссионер КАК Комиссионер,
		|	ДанныеВалюты.Ссылка КАК Валюта,
		|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	ДанныеВалюты.Код КАК ВалютаКод,
		|//РеквизитыОснованийДляУПД
		|	ВЫБОР
		|//УсловиеУПДВыданного
		|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
		|			ИЛИ СчетФактураВыданный.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ПечататьСчетФактураВыданный
		|
		|ПОМЕСТИТЬ ДанныеОснований
		|ИЗ
		|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|	ПО СчетФактураВыданный.Ссылка = СчетаФактурыОснования.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаШапокДокументов КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
		|	ПО СчетФактураВыданный.Организация = ДанныеОрганизацийПоставщик.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
		|	ПО ДанныеПодразделений.Организация = СчетФактураВыданный.Организация
		|		И ДанныеПодразделений.Подразделение = ЕСТЬNULL(ДанныеОснований.Склад.Подразделение, ДанныеОснований.Подразделение)
		|		И ДанныеПодразделений.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделенийДляКПП
		|	ПО ДанныеПодразделенийДляКПП.Организация = СчетФактураВыданный.Организация
		|		И ДанныеПодразделенийДляКПП.Подразделение = ЕСТЬNULL(СчетФактураВыданный.Склад.Подразделение, СчетФактураВыданный.Подразделение)
		|		И ДанныеПодразделенийДляКПП.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
		|	ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактураВыданный.Контрагент
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|	ПО ДанныеКонтрагента.Ссылка = СчетФактураВыданный.Контрагент
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
		|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьУслуги,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьТовары
		|ПОМЕСТИТЬ
		|	НоменклатураДокументов
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ПечататьСчетаФактурыПолученные Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
			|	ТаблицаОснований.Ссылка            КАК Ссылка
			|
			|ПОМЕСТИТЬ СчетаФактурыПолученныеОснования
			|ИЗ
			|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
			|ГДЕ
			|	ТаблицаОснований.Ссылка В (&МассивСчетФактураПолученный)
			|;
			|
			|/////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СчетаФактурыОснования.Ссылка КАК Ссылка,
			|	МИНИМУМ(СчетаФактурыОснования.ДокументОснование) КАК ДокументОснование
			|ПОМЕСТИТЬ СчетаФактурыПолученныеОснованияПервые
			|ИЗ
			|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
			|
			|СГРУППИРОВАТЬ ПО
			|	СчетаФактурыОснования.Ссылка
			|
			|;
			|/////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СчетаФактурыОснования.Ссылка КАК Ссылка,
			|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
			|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаРегистрации,
			|
			|	ВЫБОР КОГДА ДанныеКонтрагента.ОбособленноеПодразделение ТОГДА
			|		ДанныеКонтрагента.ГоловнойКонтрагент
			|	ИНАЧЕ
			|		ДанныеКонтрагента.Ссылка
			|	КОНЕЦ КАК Организация,
			|
			|	ВЫБОР КОГДА ДанныеОрганизации.ОбособленноеПодразделение ТОГДА
			|		ДанныеОрганизации.ГоловнаяОрганизация
			|	ИНАЧЕ
			|		ДанныеОрганизации.Ссылка
			|	КОНЕЦ КАК Контрагент,
			|
			|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
			|		СчетФактураПолученный.Контрагент
			|	ИНАЧЕ
			|		ДанныеОснований.Грузоотправитель
			|	КОНЕЦ КАК Грузоотправитель,
			|
			|	ВЫБОР КОГДА ДанныеОснований.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
			|		СчетФактураПолученный.Организация
			|	ИНАЧЕ
			|		ДанныеОснований.Грузополучатель
			|	КОНЕЦ КАК Грузополучатель,
			|
			|	ДанныеКонтрагента.КПП КАК КПППоставщика,
			|	ДанныеОрганизации.КПП КАК КПППокупателя,
			|	ДанныеОрганизации.ИНН КАК ИННПокупателя,
			|
			|	ВЫБОР КОГДА ДанныеОснований.Комиссионер = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
			|		ДанныеОснований.Организация.Префикс
			|	ИНАЧЕ
			|		ДанныеОснований.Комиссионер.Префикс
			|	КОНЕЦ КАК Префикс,
			|	
			|	ДанныеОснований.Комиссионер КАК Комиссионер,
			|	ДанныеВалюты.Ссылка КАК Валюта,
			|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
			|	ДанныеВалюты.Код КАК ВалютаКод
			|
			|ПОМЕСТИТЬ ДанныеОснованийСчетФактураПолученный
			|ИЗ
			|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
			|	ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаШапокДокументов КАК ДанныеОснований
			|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизации
			|	ПО СчетФактураПолученный.Организация = ДанныеОрганизации.Ссылка
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
			|	ПО СчетФактураПолученный.Контрагент = ДанныеКонтрагента.Ссылка
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
			|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|
			|;
			|/////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СчетаФактурыОснования.Ссылка КАК Ссылка,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ЕстьУслуги,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ТаблицаТоваров.ЭтоТовар
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ЕстьТовары
			|ПОМЕСТИТЬ
			|	НоменклатураДокументовПолученные
			|ИЗ
			|	СчетаФактурыПолученныеОснования КАК СчетаФактурыОснования
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
			|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаТоваров.Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	СчетаФактурыОснования.Ссылка
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|/////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка                                КАК Ссылка,
		|	ДанныеДокумента.ИдентификаторГосКонтракта             КАК ИдентификаторГосКонтракта,
		|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
		|	
		|	&ПредставлениеСчетФактура                             КАК ПредставлениеДокумента,
		|	ДанныеДокумента.ПредставлениеНомера                   КАК Номер,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
		|	ИНАЧЕ 
		|		ДанныеДокумента.Дата
		|	КОНЕЦ                                                 КАК Дата,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.НомерИсправления 
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК НомерИсправления,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.Дата
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК ДатаИсправления,
		|	ДанныеДокумента.Исправление                           КАК Исправление,
		|	ДанныеДокумента.Корректировочный                      КАК КорректировочныйСчетФактура,
		|	ЕСТЬNULL(ТаблицаПлатежноРасчетныеДокументы.СтрокаПлатежноРасчетныеДокументы,
		|		ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы) КАК СтрокаПоДокументу,
		|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
		|	ДанныеОснований.Контрагент                            КАК Контрагент,
		|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
		|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
		|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
		|	ДанныеОснований.Организация                           КАК Организация,
		|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
		|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
		|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
		|	ДанныеОснований.Префикс                               КАК Префикс,
		|	0                                                     КАК ИндексПодразделения,
		|	ВЫБОР
		|		КОГДА ОтветственныеЛицаСФ.РуководительНаименование = """"
		|			ТОГДА ТаблицаОтветственныеЛица.РуководительНаименование
		|		ИНАЧЕ ОтветственныеЛицаСФ.РуководительНаименование
		|	КОНЕЦ                                                 КАК Руководитель,
		|	ВЫБОР
		|		КОГДА ОтветственныеЛицаСФ.РуководительДолжность = """"
		|			ТОГДА ТаблицаОтветственныеЛица.РуководительДолжность
		|		ИНАЧЕ ОтветственныеЛицаСФ.РуководительДолжность
		|	КОНЕЦ                                                 КАК ДолжностьРуководителя,
		|	ВЫБОР
		|		КОГДА ОтветственныеЛицаСФ.ГлавныйБухгалтерНаименование = """"
		|			ТОГДА ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование
		|		ИНАЧЕ ОтветственныеЛицаСФ.ГлавныйБухгалтерНаименование
		|	КОНЕЦ                                                 КАК ГлавныйБухгалтер,
		|	ДанныеОснований.Валюта                                КАК Валюта,
		|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
		|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
		|	//РеквизитыОснованийДляУПД
		|	//ДанныеУПДВыданного
		|	ВЫБОР
		|		КОГДА НоменклатураДокументов.ЕстьУслуги
		|				И НЕ НоменклатураДокументов.ЕстьТовары
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                 КАК ТолькоУслуги
		|ИЗ
		|	СчетаФактурыОснованияПервые КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДанныеДокумента
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
		|		И ДанныеОснований.ПечататьСчетФактураВыданный
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
		|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ОтветственныеЛицаСФ КАК ОтветственныеЛицаСФ
		|	ПО ДанныеДокумента.Ссылка = ОтветственныеЛицаСФ.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПлатежноРасчетныеДокументы КАК ТаблицаПлатежноРасчетныеДокументы
		|	ПО СчетаФактурыОснования.Ссылка = ТаблицаПлатежноРасчетныеДокументы.Ссылка";
		
		Если ПечататьСчетаФактурыПолученные Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|" +
			
			"ВЫБРАТЬ
			|	ДанныеДокумента.Ссылка                                КАК Ссылка,
			|	НЕОПРЕДЕЛЕНО                                          КАК ИдентификаторГосКонтракта,
			|	ДанныеОснований.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
			|	ДанныеОснований.СтранаРегистрации                     КАК СтранаРегистрации,
			|	&ПредставлениеСчетФактураПосредника                   КАК ПредставлениеДокумента,
			|	ДанныеДокумента.Номер                                 КАК Номер,
			|	ДанныеДокумента.ДатаСоставления                       КАК Дата,
			|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.НомерИсправления
			|	ИНАЧЕ
			|		НЕОПРЕДЕЛЕНО
			|	КОНЕЦ                                                 КАК НомерИсправления,
			|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
			|		ДанныеДокумента.ДатаИсправления
			|	ИНАЧЕ
			|		НЕОПРЕДЕЛЕНО
			|	КОНЕЦ                                                 КАК ДатаИсправления,
			|	ДанныеДокумента.Исправление                           КАК Исправление,
			|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
			|	""""                                                  КАК СтрокаПоДокументу,
			|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
			|	ДанныеОснований.Контрагент                            КАК Контрагент,
			|	ДанныеОснований.КПППокупателя                         КАК КПППокупателя,
			|	ДанныеОснований.ИННПокупателя                         КАК ИННПокупателя,
			|	ДанныеОснований.Грузополучатель                       КАК Грузополучатель,
			|	ДанныеОснований.Организация                           КАК Организация,
			|	НЕОПРЕДЕЛЕНО                                          КАК НалогообложениеНДС,
			|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
			|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
			|	ДанныеОснований.Префикс                               КАК Префикс,
			|	0                                                     КАК ИндексПодразделения,
			|	""""                                                  КАК Руководитель,
			|	""""                                                  КАК ДолжностьРуководителя,
			|	""""                                                  КАК ГлавныйБухгалтер,
			|	ДанныеОснований.Валюта                                КАК Валюта,
			|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
			|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
			|	//ДанныеУПДПолученного
			|	ВЫБОР
			|		КОГДА НоменклатураДокументов.ЕстьУслуги
			|				И НЕ НоменклатураДокументов.ЕстьТовары
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ                                                 КАК ТолькоУслуги
			|
			|ИЗ
			|	СчетаФактурыПолученныеОснованияПервые КАК СчетаФактурыОснования
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДанныеДокумента
			|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
			|	
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснованийСчетФактураПолученный КАК ДанныеОснований
			|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокументовПолученные КАК НоменклатураДокументов
			|	ПО СчетаФактурыОснования.Ссылка = НоменклатураДокументов.Ссылка";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
			"	ДанныеОснований.Основание           КАК Основание,
			|	ДанныеОснований.ОснованиеДата       КАК ОснованиеДата,
			|	ДанныеОснований.ОснованиеНомер      КАК ОснованиеНомер,
			|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
			|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
			|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
			|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
			|	ДанныеОснований.Кладовщик           КАК Кладовщик,
			|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
			"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
			|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
			|	НЕ ДанныеДокумента.Корректировочный КАК ПечатьНеТребуется,
			|	1                                   КАК СтатусУПД,");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеУПДВыданного",
			"		КОГДА ТИПЗНАЧЕНИЯ(СчетФактураВыданный.ДокументОснование) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
			|				И СчетФактураВыданный.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
			|			ТОГДА ЛОЖЬ");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДПолученного",
			"	НЕОПРЕДЕЛЕНО                        КАК Основание,
			|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеДата,
			|	НЕОПРЕДЕЛЕНО                        КАК ОснованиеНомер,
			|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьНомер,
			|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьДата,
			|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьВыдана,
			|	НЕОПРЕДЕЛЕНО                        КАК ДоверенностьЛицо,
			|	НЕОПРЕДЕЛЕНО                        КАК Кладовщик,
			|	НЕОПРЕДЕЛЕНО                        КАК ДолжностьКладовщика,
			|	ЛОЖЬ                                КАК ВыводитьКодНоменклатуры,
			|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
			|	ЛОЖЬ                                КАК ПечатьНеТребуется,
			|	1                                   КАК СтатусУПД,");
			
		КонецЕсли;
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапросаПолученияНомеровИДатПлатежноРасчетныхДокументов_СчетФактураВыданный()
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР 
		|		КОГДА НЕ РасчетыВзаимозачета.РасчетныйДокумент ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(РасчетыВзаимозачета.РасчетныйДокумент,Неопределено)
		|		ИНАЧЕ Расчеты.РасчетныйДокумент 
		|	КОНЕЦ КАК РасчетныйДокумент,
		|	ТаблицаДокументов.Ссылка КАК СчетФактура
		|ПОМЕСТИТЬ ВтТаблицаДокументов
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
		|		ПО Расчеты.Регистратор = ТаблицаДокументов.ДокументОснование
		|			И (Расчеты.АналитикаУчетаПоПартнерам В (&МассивАналитикУчетаПоПартнерам))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыВзаимозачета
		|		ПО РасчетыВзаимозачета.Регистратор = Расчеты.РасчетныйДокумент
		|			И Расчеты.РасчетныйДокумент ССЫЛКА Документ.ВзаимозачетЗадолженности
		|ГДЕ
		|	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Расчеты.Предоплата > 0
		|	И Расчеты.Активность
		|	И НЕ &НоваяАрхитектураВзаиморасчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР 
		|		КОГДА НЕ РасчетыВзаимозачета.РасчетныйДокумент ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(РасчетыВзаимозачета.РасчетныйДокумент,Неопределено)
		|		ИНАЧЕ Расчеты.РасчетныйДокумент 
		|	КОНЕЦ КАК РасчетныйДокумент,
		|	ТаблицаДокументов.Ссылка КАК СчетФактура
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Расчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗаполненияПлатежноРасчетныхДокументов КАК ТаблицаДокументов
		|		ПО Расчеты.ДокументРегистратор = ТаблицаДокументов.ДокументОснование
		|			И (Расчеты.АналитикаУчетаПоПартнерам В (&МассивАналитикУчетаПоПартнерам))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыВзаимозачета
		|		ПО РасчетыВзаимозачета.ДокументРегистратор = Расчеты.РасчетныйДокумент
		|			И Расчеты.РасчетныйДокумент ССЫЛКА Документ.ВзаимозачетЗадолженности
		|ГДЕ
		|	Расчеты.Предоплата > 0
		|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И &НоваяАрхитектураВзаиморасчетов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РасчетныйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата КАК Дата,
		|	ДанныеДокумента.Номер КАК Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ТаблицаДокументов.СчетФактура КАК СчетФактура
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	0,
		|	0,
		|	ТаблицаДокументов.СчетФактура
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ТаблицаДокументов.СчетФактура
		|ИЗ
		|	Документ.ПервичныйДокумент КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	0,
		|	0,
		|	ТаблицаДокументов.СчетФактура
		|ИЗ
		|	Документ.ОперацияПоПлатежнойКарте КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаДокументов КАК ТаблицаДокументов
		|		ПО ДанныеДокумента.Ссылка = ТаблицаДокументов.РасчетныйДокумент
		|ИТОГИ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтТаблицаДокументов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаЗаполненияПлатежноРасчетныхДокументов";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапросаДанныхМаркировки_СчетФактураВыданный()
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ШтрихкодыУпаковок.ШтрихкодУпаковки КАК Штрихкод,
		|	СчетаФактурыОснования.Ссылка КАК Ссылка
		|ИЗ ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
		|	ПО СчетаФактурыОснования.ДокументОснование = ШтрихкодыУпаковок.Ссылка
		|
		|////////////////////////////////////////////////////////////////////////////
		|";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапросаИсходныхДокументовДляПечатиСчетаФактуры_СчетФактураВыданный()
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК ИсходныйДокумент,
		|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.ПредставлениеНомера, """") КАК НомерСчетаФактуры,
		|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.СчетФактураОснование.Дата, СчетФактураТовары.ПредыдущийСчетФактура.Дата) КАК ДатаСчетаФактуры,
		|	ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.НомерИсправления, """") КАК НомерИсправленияСчетаФактуры,
		|	ВЫБОР
		|		КОГДА СчетФактураТовары.ПредыдущийСчетФактура.Исправление
		|			ТОГДА ЕСТЬNULL(СчетФактураТовары.ПредыдущийСчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1))
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ДатаИсправленияСчетаФактуры
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураТовары
		|		ПО СчетаФактурыОснования.Ссылка = СчетФактураТовары.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ИсходныйДокумент
		|ИТОГИ ПО
		|	Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////
		|";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры_СчетФактураВыданный(ПараметрыПечати)
		
		ПечататьСчетаФактурыПолученные = ПараметрыПечати.Свойство("МассивСчетФактураПолученный");
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
		|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
		
		|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
		|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
		|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
		|	ТаблицаДокумента.КодТНВЭД                                    КАК КодТНВЭД,
		|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
		|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
		|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
		|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
		|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
		|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" 
		|		ТОГДА ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ   КАК НомерГТД,
		|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
		|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
		|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
		|	ТаблицаДокумента.Цена                                        КАК Цена,
		|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
		|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
		|	СУММА(ТаблицаДокумента.СуммаБезНДС
		|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
		|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
		|
		|	СУММА(ТаблицаДокумента.КоличествоДо)                         КАК КоличествоДо,
		|	ТаблицаДокумента.ЦенаДо                                      КАК ЦенаДо,
		|	СУММА(ТаблицаДокумента.СуммаБезНДСДо)                        КАК СуммаБезНДСДо,
		|	СУММА(ТаблицаДокумента.РазницаБезНДСУвеличение)              КАК РазницаБезНДСУвеличение,
		|	СУММА(ТаблицаДокумента.РазницаБезНДСУменьшение)              КАК РазницаБезНДСУменьшение,
		|	СУММА(ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаНДСДо,
		|	СУММА(ТаблицаДокумента.РазницаНДСУвеличение)                 КАК РазницаНДСУвеличение,
		|	СУММА(ТаблицаДокумента.РазницаНДСУменьшение)                 КАК РазницаНДСУменьшение,
		|	СУММА(ТаблицаДокумента.СуммаБезНДСДо
		|		+ ТаблицаДокумента.СуммаНДСДо)                           КАК СуммаСНДСДо,
		|	СУММА(ТаблицаДокумента.РазницаСНДСУвеличение)                КАК РазницаСНДСУвеличение,
		|	СУММА(ТаблицаДокумента.РазницаСНДСУменьшение)                КАК РазницаСНДСУменьшение,
		|
		|	//ДанныеНаборов
		|
		|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара
		|
		|ИЗ ТаблицаТоваровДокументов КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыОснования КАК СчетаФактурыОснования
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
		|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
		|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
		|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
		|
		|ГДЕ
		|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка,
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.НоменклатураНаименование,
		|	ТаблицаДокумента.НоменклатураКод,
		|	ТаблицаДокумента.КодТНВЭД,
		|	ТаблицаДокумента.ЕдиницаИзмерения,
		|	ДанныеЕдиницыИзмерения.Представление,
		|	ДанныеЕдиницыИзмерения.Код,
		|	ТаблицаДокумента.Характеристика,
		|	ДанныеХарактеристики.НаименованиеПолное,
		|	ВЫБОР КОГДА ТаблицаДокумента.НомерГТД.РегистрационныйНомер = """" ТОГДА ТаблицаДокумента.НомерГТД ИНАЧЕ ТаблицаДокумента.НомерГТД.РегистрационныйНомер КОНЕЦ,
		|	ДанныеСтраныПросхождения.Ссылка,
		|	ТаблицаДокумента.Цена,
		|	ТаблицаДокумента.ЦенаДо,
		|	//ГруппировкаНаборов
		|	ТаблицаДокумента.СтавкаНДС";
		
		Если ПараметрыПечати.ВыводитьНаборы Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеНаборов",
			"МИНИМУМ(ТаблицаДокумента.НомерСтрокиНаборы)                     КАК НомерСтрокиНаборы,
			|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах   КАК ВариантПредставленияНабораВПечатныхФормах,
			|	ТаблицаДокумента.ВариантРасчетаЦеныНабора                    КАК ВариантРасчетаЦеныНабора,
			|	ТаблицаДокумента.НоменклатураНабора                          КАК НоменклатураНабора,
			|	ТаблицаДокумента.ХарактеристикаНабора                        КАК ХарактеристикаНабора,
			|	ТаблицаДокумента.ЭтоКомплектующие                            КАК ЭтоКомплектующие,
			|	ТаблицаДокумента.ЭтоНабор                                    КАК ЭтоНабор,
			|	ТаблицаДокумента.ПолныйНабор                                 КАК ПолныйНабор,");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ГруппировкаНаборов",
			"ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах,
			|	ТаблицаДокумента.ВариантРасчетаЦеныНабора,
			|	ТаблицаДокумента.НоменклатураНабора,
			|	ТаблицаДокумента.ХарактеристикаНабора,
			|	ТаблицаДокумента.ЭтоКомплектующие,
			|	ТаблицаДокумента.ЭтоНабор,
			|	ТаблицаДокумента.ПолныйНабор,");
			
		КонецЕсли;
		
		Если ПечататьСчетаФактурыПолученные Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|" +
			СтрЗаменить(ТекстЗапроса, "СчетаФактурыОснования", "СчетаФактурыПолученныеОснования");
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	//ПорядокНаборов
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка
		|;";
		
		Если ПараметрыПечати.ВыводитьНаборы Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПорядокНаборов",
			"НомерСтрокиНаборы,
			|	НоменклатураНабора,
			|	ХарактеристикаНабора,
			|	ЭтоНабор УБЫВ,");
			
		КонецЕсли;
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ПустойТекстЗапросаШапокОснований_СчетФактураВыданный()
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО                                               КАК Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)  КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                   КАК Валюта,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)     КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                   КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузоотправитель,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)              КАК Грузополучатель,
		|	ЛОЖЬ                                                       КАК РасчетыЧерезОтдельногоКонтрагента,
		|	НЕОПРЕДЕЛЕНО                                               КАК Номенклатура,
		|	""""                                                       КАК Содержание,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)              КАК Комиссионер,
		|	""""                                                       КАК Основание,
		|	ДАТАВРЕМЯ(1,1,1)                                           КАК ОснованиеДата,
		|	""""                                                       КАК ОснованиеНомер,
		|	""""                                                       КАК ДоверенностьНомер,
		|	ДАТАВРЕМЯ(1,1,1)                                           КАК ДоверенностьДата,
		|	""""                                                       КАК ДоверенностьВыдана,
		|	""""                                                       КАК ДоверенностьЛицо,
		|	""""                                                       КАК Кладовщик,
		|	""""                                                       КАК ДолжностьКладовщика
		|ПОМЕСТИТЬ ТаблицаШапокДокументов";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ПолучитьСчетаФактурыНаПечать_СчетФактураПолученный(МассивОбъектов, ПечатьВВалюте = Ложь)
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТаблицаОснований = Новый ТаблицаЗначений;
		ТаблицаОснований.Колонки.Добавить("ДокументОснование",
		Метаданные.Документы.СчетФактураПолученный.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип);
		Для Каждого ДокументОснование Из МассивОбъектов Цикл
			СтрокаОснования = ТаблицаОснований.Добавить();
			СтрокаОснования.ДокументОснование = ДокументОснование;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ДокументыОснования
		|ИЗ
		|	&ТаблицаОснований КАК ДокументыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК Ссылка,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ДанныеОснованийСчетовФактур.Валюта ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК НеТребуетсяСчетФактура,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА &ПечатьВВалюте
		|					И ЕСТЬNULL(ДанныеОснованийСчетовФактур.Валюта, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК НеТребуетсяПечатьВВалюте
		|ПОМЕСТИТЬ ТаблицаОснований
		|ИЗ
		|	ДокументыОснования КАК ДокументыОснования
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
		|		ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
		|			И (ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторМетаданных)
		|			И (ДанныеОснованийСчетовФактур.Контрагент ССЫЛКА Справочник.Контрагенты)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыОснования.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
		|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
		|ПОМЕСТИТЬ НомераИсправлений
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетаФактуры
		|			ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
		|			И НЕ СчетаФактуры.ПометкаУдаления
		|		ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
		|			И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
		|			И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОснований.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
		|
		|ПОМЕСТИТЬ ОснованияСоСчетФактурой
		|ИЗ
		|	НомераИсправлений КАК СчетаФактурыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураПолученный.Ссылка КАК Ссылка
		|ИЗ
		|	НомераИсправлений КАК НомераИсправлений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
		|		ПО НомераИсправлений.ДокументОснование = СчетаФактурыОснования.ДокументОснование
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|		ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
		|			И НЕ СчетФактураПолученный.ПометкаУдаления
		|			И НомераИсправлений.НомерИсправления = СчетФактураПолученный.НомерИсправления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
		|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
		|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
		|	ВЫБОР
		|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                     КАК НеВыставленСчетФактура
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
		|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
		
		Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
		Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		Запрос.УстановитьПараметр("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный"));
		
		Запрос.Текст = ТекстЗапроса;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		СчетаФактурыНаПечать = РезультатЗапроса[4].Выгрузить().ВыгрузитьКолонку("Ссылка");
		ТаблицаОшибок        = РезультатЗапроса[5].Выгрузить();
		
		Структура = Новый Структура;
		Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
		Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
		
		Возврат Структура;
		
	КонецФункции
	
	Функция ПолучитьДанныеДляПечатнойФормыСчетФактура_СчетФактураВыданныйАванс(ПараметрыПечати, МассивОбъектов)
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактураВыданныйАванс.Ссылка КАК Ссылка,
		|	СчетФактураВыданныйАванс.Ссылка КАК ИсходныйСчетФактура,
		|	ЛОЖЬ КАК Корректировочный
		|ПОМЕСТИТЬ СчетаФактуры
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
		|ГДЕ
		|	СчетФактураВыданныйАванс.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ИсходныйСчетФактура,
		|	ИСТИНА КАК Корректировочный
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
		|	И ТаблицаДокумента.Ссылка.Корректировочный
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка                               КАК Ссылка,
		|	ТаблицаОснований.ИсходныйСчетФактура                  КАК ДокументОснование,
		|	ТаблицаОснований.ИсходныйСчетФактура                  КАК ИсходныйДокумент,
		|	ТаблицаОснований.ИсходныйСчетФактура.Номер КАК НомерСчетаФактуры,
		|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
		|		ЕСТЬNULL(ТаблицаОснований.ИсходныйСчетФактура.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
		|	ИНАЧЕ 
		|		ТаблицаОснований.ИсходныйСчетФактура.Дата
		|	КОНЕЦ КАК ДатаСчетаФактуры,
		|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
		|		ТаблицаОснований.ИсходныйСчетФактура.НомерИсправления 
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправленияСчетаФактуры,
		|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
		|		ТаблицаОснований.ИсходныйСчетФактура.Дата
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДатаИсправленияСчетаФактуры
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка В(&МассивДокументов)
		|	И ТаблицаОснований.Ссылка.Корректировочный
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ИсходныйДокумент
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
		|	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
		|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
		|	ТаблицаДокумента.Содержание                         	КАК Содержание,
		|	ТаблицаДокумента.Сумма                              	КАК Сумма,
		|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
		|	ТаблицаДокумента.СуммаНДС                              	КАК СуммаНДС,
		|	
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
		|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ 													КАК ЭтоТовар,
		|	ЛОЖЬ                                                    КАК ЭтоНеВозвратнаяТара,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
		|
		|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаДокумента
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.НоменклатураНабора
		|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.ХарактеристикаНабора
		|		И ВариантыКомплектацииНоменклатуры.Основной
		|
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В(ВЫБРАТЬ Т.ИсходныйСчетФактура ИЗ СчетаФактуры КАК Т)
		|	И ТаблицаДокумента.Ссылка.Проведен
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьУслуги,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаТоваров.ЭтоТовар
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьТовары
		|ПОМЕСТИТЬ
		|	НоменклатураДокументов
		|ИЗ
		|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактура.Ссылка КАК Ссылка,
		|	СчетФактура.НалогообложениеНДС КАК НалогообложениеНДС,
		|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
		|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
		|	СчетФактура.Номер КАК Номер,
		|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
		|		ЕСТЬNULL(СчетФактура.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
		|	ИНАЧЕ 
		|		СчетФактура.Дата
		|	КОНЕЦ КАК Дата,
		|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
		|		СчетФактура.НомерИсправления 
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НомерИсправления,
		|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
		|		СчетФактура.Дата
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДатаИсправления,
		|	СчетФактура.Исправление КАК Исправление,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
		|	СчетФактура.Корректировочный КАК КорректировочныйСчетФактура,
		|	СчетФактура.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
		|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
		|	ВЫБОР
		|		КОГДА СчетФактура.Контрагент.ОбособленноеПодразделение
		|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
		|		ИНАЧЕ СчетФактура.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	ВЫБОР
		|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
		|			ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
		|		ИНАЧЕ СчетФактура.Организация
		|	КОНЕЦ КАК Организация,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	СчетФактура.Организация.Префикс КАК Префикс,
		|	ВЫБОР
		|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
		|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексПодразделения,
		|	СчетФактура.Контрагент КАК Грузополучатель,
		|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
		|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
		|	СчетФактура.Организация КАК Грузоотправитель,
		|	СчетФактура.Организация.КПП КАК КПППоставщика,
		|
		|	ВЫБОР КОГДА СчетФактура.КППКонтрагента ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
		|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		СчетФактура.КППКонтрагента
		|	КОНЕЦ КАК КПППокупателя,
		|
		|	ВЫБОР КОГДА СчетФактура.ИННКонтрагента ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
		|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		СчетФактура.ИННКонтрагента
		|	КОНЕЦ КАК ИННПокупателя,
		|
		|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
		|	&ВалютаРеглУчета КАК Валюта,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
		|	ВЫБОР
		|		КОГДА НоменклатураДокументов.ЕстьУслуги
		|				И НЕ НоменклатураДокументов.ЕстьТовары
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТолькоУслуги,
		|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
		|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
		|		ПО СчетФактура.Ссылка = НоменклатураДокументов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
		|		ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактура.Контрагент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|		ПО ДанныеКонтрагента.Ссылка = СчетФактура.Контрагент
		|ГДЕ
		|	СчетФактура.Ссылка В(&МассивДокументов)
		|	И СчетФактура.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                КАК Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
		|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
		|	СУММА(ТаблицаТоваров.Сумма)    		 КАК Сумма,
		|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
		|ИЗ
		|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
		|
		|ГДЕ
		|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка                                    КАК Ссылка,
		|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
		|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Товары.НоменклатураНабора,
		|	Товары.ХарактеристикаНабора,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
		|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ОсновнаяКомплектующая,
		|	Товары.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
		|ИЗ
		|	РеализацияТоваровУслугТаблицаТоваров КАК Товары
		|
		|ГДЕ
		|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Ссылка                                                                                КАК Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
		|	ЛОЖЬ КАК ОсновнаяКомплектующая,
		|	NULL КАК СтавкаНДС
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т) КАК Т
		|		ПО ИСТИНА
		|ГДЕ
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
		|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.ОсновнаяКомплектующая
		|				ТОГДА Результат.СтавкаНДС
		|			ИНАЧЕ null
		|		КОНЕЦ) КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
		|СГРУППИРОВАТЬ ПО
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
		|	ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|
		|	Таблица.Ссылка                            КАК Ссылка,
		|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
		|	Таблица.НомерСтроки                       КАК НомерСтроки,
		|	ИСТИНА 										КАК ПолныйНабор,
		|	Таблица.Сумма                             КАК Сумма,
		|	Таблица.СуммаНДС                          КАК СуммаНДС,
		|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
		|ИЗ
		|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
		|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
		|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
		|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка) КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаДокумента.ЭтоКомплектующие КАК ЭтоКомплектующие,
		|	ТаблицаДокумента.ЭтоНабор КАК ЭтоНабор,
		|	ТаблицаДокумента.ПолныйНабор КАК ПолныйНабор,
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(1))) <> """"
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(1000))
		|		КОГДА ТаблицаДокумента.ЭтоНабор
		|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
		|		КОГДА ТаблицаДокумента.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
		|		ИНАЧЕ &ПредставлениеПредварительнаяОплата
		|	КОНЕЦ КАК НоменклатураНаименование,
		|	ТаблицаДокумента.Характеристика КАК Характеристика,
		|	ТаблицаДокумента.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
		|	"""" КАК НомерГТД,
		|	"""" КАК СтранаПроисхождения,
		|	"""" КАК СтранаПроисхожденияКод,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
		|	0 КАК Количество,
		|	0 КАК Цена,
		|	0 КАК СуммаБезНДС,
		|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
		|	ТаблицаДокумента.Сумма КАК СуммаСНДС,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ПОМЕСТИТЬ РезультатПоТабличнойЧасти
		|ИЗ
		|(
		|	ВЫБРАТЬ
		|		ТаблицаТоваров.Ссылка,
		|
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
		|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|
		|		ТаблицаТоваров.НоменклатураНабора,
		|		ТаблицаТоваров.ХарактеристикаНабора,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|		КОНЕЦ КАК ЭтоКомплектующие,
		|		ЛОЖЬ КАК ЭтоНабор,
		|		ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.НомерСтроки
		|		ИНАЧЕ
		|			ТаблицаТоваров.НомерСтроки
		|		КОНЕЦ КАК НомерСтрокиНаборы,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.ПолныйНабор
		|		ИНАЧЕ
		|			ЛОЖЬ
		|		КОНЕЦ КАК ПолныйНабор,
		|		ТаблицаТоваров.Номенклатура,
		|		ТаблицаТоваров.Содержание,
		|		ТаблицаТоваров.СтавкаНДС,
		|		ТаблицаТоваров.Сумма,
		|		ТаблицаТоваров.СуммаНДС,
		|		ТаблицаТоваров.Характеристика,
		|		ТаблицаТоваров.Упаковка
		|	ИЗ
		|		РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
		|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
		|			 И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
		|
		|	ГДЕ
		|		ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		ИЛИ (ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
		|	                                                                			  ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаНаборы.Ссылка,
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
		|		ВременнаяТаблицаНаборы.НоменклатураНабора,
		|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|		ЛОЖЬ КАК ЭтоКомплектующие,
		|		ИСТИНА КАК ЭтоНабор,
		|		0 КАК НомерСтроки,
		|		ВременнаяТаблицаНаборы.НомерСтроки КАК НомерСтрокиНаборы,
		|		ВременнаяТаблицаНаборы.ПолныйНабор КАК ПолныйНабор,
		|		ВременнаяТаблицаНаборы.НоменклатураНабора,
		|		"""",
		|		ВременнаяТаблицаНаборы.СтавкаНДС,
		|		ВременнаяТаблицаНаборы.Сумма,
		|		ВременнаяТаблицаНаборы.СуммаНДС,
		|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
		|	ИЗ
		|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|	ГДЕ
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
		|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
		|) КАК ТаблицаДокумента
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	Таблица.ЭтоКомплектующие КАК ЭтоКомплектующие,
		|	Таблица.ЭтоНабор КАК ЭтоНабор,
		|	Таблица.ПолныйНабор КАК ПолныйНабор,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.НоменклатураНаименование КАК НоменклатураНаименование,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
		|	Таблица.НомерГТД КАК НомерГТД,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Таблица.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
		|	МАКСИМУМ(Таблица.СтавкаНДСДо) КАК СтавкаНДСДо,
		|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
		|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Таблица.Количество КАК Количество,
		|	Таблица.Цена КАК Цена,
		|	СУММА(Таблица.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(Таблица.СуммаНДС) КАК СуммаНДС,
		|	СУММА(Таблица.СуммаНДСДо) КАК СуммаНДСДо,
		|	СУММА(Таблица.СуммаНДСУвеличение) КАК РазницаНДСУвеличение,
		|	СУММА(Таблица.СуммаСНДС) КАК СуммаСНДС,
		|	СУММА(Таблица.СуммаСНДСДо) КАК СуммаСНДСДо,
		|	СУММА(Таблица.СуммаСНДСУвеличение) КАК РазницаСНДСУвеличение,
		|	МАКСИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
		|	МАКСИМУМ(Таблица.НомерСтрокиНаборы) КАК НомерСтрокиНаборы,
		|	Таблица.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
		|ИЗ
		|	(ВЫБРАТЬ
		|		КорректировочныеСФ.Ссылка КАК Ссылка,
		|		ТаблицаДо.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|		ТаблицаДо.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|		ТаблицаДо.НоменклатураНабора КАК НоменклатураНабора,
		|		ТаблицаДо.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|		ТаблицаДо.ЭтоКомплектующие КАК ЭтоКомплектующие,
		|		ТаблицаДо.ЭтоНабор КАК ЭтоНабор,
		|		ТаблицаДо.ПолныйНабор КАК ПолныйНабор,
		|		ТаблицаДо.Номенклатура КАК Номенклатура,
		|		ТаблицаДо.НоменклатураНаименование КАК НоменклатураНаименование,
		|		ТаблицаДо.Характеристика КАК Характеристика,
		|		ТаблицаДо.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
		|		ТаблицаДо.НомерГТД КАК НомерГТД,
		|		ТаблицаДо.СтранаПроисхождения КАК СтранаПроисхождения,
		|		ТаблицаДо.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
		|		ТаблицаДо.СтавкаНДС КАК СтавкаНДСДо,
		|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
		|		ТаблицаДо.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ТаблицаДо.Количество КАК Количество,
		|		ТаблицаДо.Цена КАК Цена,
		|		ТаблицаДо.СуммаБезНДС КАК СуммаБезНДС,
		|		0 КАК СуммаНДС,
		|		ТаблицаДо.СуммаНДС КАК СуммаНДСДо,
		|		0 КАК СуммаНДСУвеличение,
		|		0 КАК СуммаСНДС,
		|		ТаблицаДо.СуммаСНДС КАК СуммаСНДСДо,
		|		0 КАК СуммаСНДСУвеличение,
		|		ТаблицаДо.НомерСтроки КАК НомерСтроки,
		|		ТаблицаДо.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
		|		ТаблицаДо.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
		|	ИЗ
		|		РезультатПоТабличнойЧасти КАК ТаблицаДо
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
		|			ПО КорректировочныеСФ.ИсходныйСчетФактура = ТаблицаДо.Ссылка
		|				И КорректировочныеСФ.Корректировочный
		|	ГДЕ
		|		ТаблицаДо.Ссылка.Корректировочный
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПосле.Ссылка,
		|		ТаблицаПосле.ВариантПредставленияНабораВПечатныхФормах,
		|		ТаблицаПосле.ВариантРасчетаЦеныНабора,
		|		ТаблицаПосле.НоменклатураНабора,
		|		ТаблицаПосле.ХарактеристикаНабора,
		|		ТаблицаПосле.ЭтоКомплектующие,
		|		ТаблицаПосле.ЭтоНабор,
		|		ТаблицаПосле.ПолныйНабор,
		|		ТаблицаПосле.Номенклатура,
		|		ТаблицаПосле.НоменклатураНаименование,
		|		ТаблицаПосле.Характеристика,
		|		ТаблицаПосле.ХарактеристикаНаименование,
		|		ТаблицаПосле.НомерГТД,
		|		ТаблицаПосле.СтранаПроисхождения,
		|		ТаблицаПосле.СтранаПроисхожденияКод,
		|		НЕОПРЕДЕЛЕНО,
		|		ТаблицаПосле.СтавкаНДС,
		|		ТаблицаПосле.ЕдиницаИзмерения,
		|		ТаблицаПосле.Количество,
		|		ТаблицаПосле.Цена,
		|		ТаблицаПосле.СуммаБезНДС,
		|		0,
		|		0,
		|		ТаблицаПосле.СуммаНДС,
		|		0,
		|		0,
		|		ТаблицаПосле.СуммаСНДС,
		|		ТаблицаПосле.НомерСтроки,
		|		ТаблицаПосле.НомерСтрокиНаборы,
		|		ТаблицаПосле.ЭтоВозвратнаяТара
		|	ИЗ
		|		РезультатПоТабличнойЧасти КАК ТаблицаПосле
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
		|			ПО КорректировочныеСФ.ИсходныйСчетФактура = ТаблицаПосле.Ссылка
		|				И НЕ КорректировочныеСФ.Корректировочный
		|	ГДЕ
		|		ТаблицаПосле.Ссылка.Корректировочный
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КорректировочныеСФ.Ссылка,
		|		РезультатПоТабличнойЧасти.ВариантПредставленияНабораВПечатныхФормах,
		|		РезультатПоТабличнойЧасти.ВариантРасчетаЦеныНабора,
		|		РезультатПоТабличнойЧасти.НоменклатураНабора,
		|		РезультатПоТабличнойЧасти.ХарактеристикаНабора,
		|		РезультатПоТабличнойЧасти.ЭтоКомплектующие,
		|		РезультатПоТабличнойЧасти.ЭтоНабор,
		|		РезультатПоТабличнойЧасти.ПолныйНабор,
		|		РезультатПоТабличнойЧасти.Номенклатура,
		|		РезультатПоТабличнойЧасти.НоменклатураНаименование,
		|		РезультатПоТабличнойЧасти.Характеристика,
		|		РезультатПоТабличнойЧасти.ХарактеристикаНаименование,
		|		РезультатПоТабличнойЧасти.НомерГТД,
		|		РезультатПоТабличнойЧасти.СтранаПроисхождения,
		|		РезультатПоТабличнойЧасти.СтранаПроисхожденияКод,
		|		НЕОПРЕДЕЛЕНО,
		|		РезультатПоТабличнойЧасти.СтавкаНДС,
		|		РезультатПоТабличнойЧасти.ЕдиницаИзмерения,
		|		РезультатПоТабличнойЧасти.Количество,
		|		РезультатПоТабличнойЧасти.Цена,
		|		РезультатПоТабличнойЧасти.СуммаБезНДС,
		|		РезультатПоТабличнойЧасти.СуммаНДС,
		|		0,
		|		0,
		|		РезультатПоТабличнойЧасти.СуммаСНДС,
		|		0,
		|		0,
		|		РезультатПоТабличнойЧасти.НомерСтроки,
		|		РезультатПоТабличнойЧасти.НомерСтрокиНаборы,
		|		РезультатПоТабличнойЧасти.ЭтоВозвратнаяТара
		|	ИЗ
		|		РезультатПоТабличнойЧасти КАК РезультатПоТабличнойЧасти
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
		|			ПО КорректировочныеСФ.ИсходныйСчетФактура = РезультатПоТабличнойЧасти.Ссылка
		|	ГДЕ
		|		РезультатПоТабличнойЧасти.Ссылка.Корректировочный
		|	) КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Характеристика,
		|	Таблица.НомерГТД,
		|	Таблица.ПолныйНабор,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.ЭтоНабор,
		|	Таблица.ХарактеристикаНаименование,
		|	Таблица.СтранаПроисхождения,
		|	Таблица.Ссылка,
		|	Таблица.ВариантРасчетаЦеныНабора,
		|	Таблица.ЭтоКомплектующие,
		|	Таблица.Номенклатура,
		|	Таблица.НоменклатураНаименование,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ЭтоВозвратнаяТара,
		|	Таблица.СтранаПроисхожденияКод,
		|	Таблица.ЕдиницаИзмерения,
		|	Таблица.Цена,
		|	Таблица.Количество
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	Таблица.ЭтоКомплектующие КАК ЭтоКомплектующие,
		|	Таблица.ЭтоНабор КАК ЭтоНабор,
		|	Таблица.ПолныйНабор КАК ПолныйНабор,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.НоменклатураНаименование КАК НоменклатураНаименование,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
		|	Таблица.НомерГТД КАК НомерГТД,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Таблица.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
		|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСДо,
		|	Таблица.СтавкаНДС КАК СтавкаНДС,
		|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Таблица.Количество КАК Количество,
		|	Таблица.Цена КАК Цена,
		|	Таблица.СуммаБезНДС КАК СуммаБезНДС,
		|	Таблица.СуммаНДС КАК СуммаНДС,
		|	0 КАК СуммаНДСДо,
		|	0 КАК РазницаНДСУвеличение,
		|	Таблица.СуммаСНДС КАК СуммаСНДС,
		|	0 КАК СуммаСНДСДо,
		|	0 КАК РазницаСНДСУвеличение,
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
		|	Таблица.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
		|ИЗ
		|	РезультатПоТабличнойЧасти КАК Таблица
		|ГДЕ
		|	НЕ Таблица.Ссылка.Корректировочный
		|
		|УПОРЯДОЧИТЬ ПО
		|	Таблица.Ссылка,
		|	МАКСИМУМ(Таблица.НомерСтрокиНаборы),
		|	Таблица.ЭтоНабор УБЫВ,
		|	МАКСИМУМ(Таблица.НомерСтроки)
		|ИТОГИ ПО
		|	Ссылка";
		
		ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
		Запрос.УстановитьПараметр("ПредставлениеПредварительнаяОплата", НСтр("ru = 'Предварительная оплата'"));
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		РезультатПоШапке          = МассивРезультатов[4];
		РезультатПоТабличнойЧасти = МассивРезультатов[11];
		РезультатПоИсходнымДанным = МассивРезультатов[1];
		
		СтруктураДанныхДляПечати = Новый Структура;
		СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
		СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
		СтруктураДанныхДляПечати.Вставить("РезультатПоИсходнымДанным", РезультатПоИсходнымДанным);
		СтруктураДанныхДляПечати.Вставить("СчетФактураНаАванс", Истина);
		
		Возврат СтруктураДанныхДляПечати;
	КонецФункции
	
	Функция ПолучитьСчетаФактурыНаПечать_СчетФактураКомиссионеру(МассивОбъектов, ПечатьВВалюте = Ложь)
		
		УстановитьПривилегированныйРежим(Истина);
		
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		
		Запрос = Новый Запрос;
		
		ТекстЗапроса = "";
		ПервыйТип    = Истина;
		
		Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
			ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
			
			Если Не ПустаяСтрока(ТекстЗапроса) Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ДокументОснование_" + ИмяОбъекта, СтруктураОбъектов.Значение);
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	ДанныеДокумента.Ссылка КАК Ссылка,
			|	ЛОЖЬ КАК НеТребуетсяСчетФактура,
			|	ВЫБОР
			|		КОГДА &ПечатьВВалюте И ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета ТОГДА
			|			ИСТИНА
			|	ИНАЧЕ
			|		ЛОЖЬ
			|	КОНЕЦ КАК НеТребуетсяПечатьВВалюте
			|		
			|//ОператорПОМЕСТИТЬ
			|ИЗ
			|	Документ.%ИмяОбъекта% КАК ДанныеДокумента
			|ГДЕ
			|	ДанныеДокумента.Ссылка В (&ДокументОснование_%ИмяОбъекта%)";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ИмяОбъекта);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОснований", ""));
			
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка) КАК СчетФактура,
		|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
		|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
		|
		|ПОМЕСТИТЬ НомераИсправлений
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК СчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ИсправленныйСчетФактура
		|		ПО СчетаФактуры.СчетФактураОснование = ИсправленныйСчетФактура.Ссылка
		|			И СчетаФактуры.Исправление
		|	ПО ТаблицаОснований.Ссылка = СчетаФактуры.ДокументОснование
		|		И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
		|		И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
		|		И СчетаФактуры.Проведен
		|		И НЕ СчетаФактуры.ПометкаУдаления
		|	
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ИсправленныйСчетФактура.Ссылка, СчетаФактуры.Ссылка),
		|	ТаблицаОснований.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
		|
		|ПОМЕСТИТЬ ОснованияСоСчетФактурой
		|ИЗ
		|	НомераИсправлений КАК СчетаФактурыОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетФактураКомиссионеру.Ссылка КАК СчетФактура
		|ИЗ
		|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		НомераИсправлений КАК НомераИсправлений
		|	ПО
		|		НомераИсправлений.НомерИсправления = СчетФактураКомиссионеру.НомерИсправления
		|		И НомераИсправлений.СчетФактура    = ВЫБОР КОГДА СчетФактураКомиссионеру.Исправление ТОГДА
		|		                                         СчетФактураКомиссионеру.СчетФактураОснование
		|		                                     ИНАЧЕ
		|		                                         СчетФактураКомиссионеру.Ссылка
		|		                                     КОНЕЦ
		|		И СчетФактураКомиссионеру.Проведен
		|		И НЕ СчетФактураКомиссионеру.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
		|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
		|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
		|	ВЫБОР
		|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ                                     КАК НеВыставленСчетФактура
		|ИЗ
		|	ТаблицаОснований КАК ТаблицаОснований
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
		|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
		
		Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		
		Запрос.Текст = ТекстЗапроса;
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		СчетаФактурыНаПечать = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("СчетФактура");
		ТаблицаОшибок        = РезультатЗапроса[4].Выгрузить();
		
		Структура = Новый Структура;
		Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
		Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
		
		Возврат Структура;
		
	КонецФункции
	
	Функция ПолучитьДанныеДляПечатнойФормыСчетФактура_СчетФактураКомиссионеру(ПараметрыПечати, МассивОбъектов)
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеСчетаФактуры.Ссылка                  КАК Ссылка,
		|	ДанныеСчетаФактуры.ДокументОснование       КАК ДокументОснование,
		|	ДанныеСчетаФактуры.Дата                    КАК Дата
		|ПОМЕСТИТЬ СчетаФактурыОснования
		|ИЗ
		|	Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
		|ГДЕ
		|	ДанныеСчетаФактуры.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактурыОснования.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования");
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		РезультатЗапроса  = Запрос.Выполнить();
		
		МассивОснований = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДокументОснование");
		
		ПоместитьВременнуюТаблицуДанныхОснований_СчетФактураКомиссионеру(МенеджерВременныхТаблиц, МассивОснований);
		
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",Константы.ВалютаУправленческогоУчета.Получить());
		
		// Актуализировать расчеты для получения сумм по товарам документа-основания
		Если Не ПараметрыПечати.ПечатьВВалюте Тогда
			
			Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	ТаблицаДанныхДокументов КАК ДанныеДокументов
				|ГДЕ 
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
				МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				РегистрыСведений.СуммыДокументовВВалютеРегл.РассчитатьСуммыДокументовВВалютеРегл(МассивДокументов);
				
			Иначе
				
				Запрос.Текст = "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
				|ИЗ
				|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
				|
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		ТаблицаДанныхДокументов КАК ДанныеДокументов
				|	ПО
				|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
				|
				|ГДЕ
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	И РасчетыСКлиентами.Активность
				|";
				
				ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
				МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
				
				Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
					КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
					АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
					АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
					Попытка
						РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(КонецРасчета, АналитикиРасчета);
					Исключение
						ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
						|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецПопытки;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
		СформироватьВременнуюТаблицуТоваровДляПечати_СчетФактураКомиссионеру(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати);
		
		Запрос.Текст = ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры_СчетФактураКомиссионеру(ПараметрыПечати)
		+ ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры_СчетФактураКомиссионеру();
		
		Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
		Запрос.УстановитьПараметр("ПредставлениеСчетФактураКомиссионера", НСтр("ru='счет-фактура комиссионера'"));
		Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
		
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		МассивОперацийПередачаНаКомиссию = Новый Массив;
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
		МассивОперацийПередачаНаКомиссию.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
		Запрос.УстановитьПараметр("ХозяйственныеОперацииПередачаНаКомиссию", МассивОперацийПередачаНаКомиссию);
		
		МассивРезультатов         = Запрос.ВыполнитьПакет();
		КоличествоРезультатов     = МассивРезультатов.Количество();
		РезультатПоШапке          = МассивРезультатов[КоличествоРезультатов - 3];
		РезультатПоКонтрагентам   = МассивРезультатов[КоличествоРезультатов - 2];
		РезультатПоТабличнойЧасти = МассивРезультатов[КоличествоРезультатов - 1];
		
		СтруктураДанныхДляПечати  = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоКонтрагентам",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		РезультатПоКонтрагентам);
		
		Возврат СтруктураДанныхДляПечати;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуДанныхОснований_СчетФактураКомиссионеру(МенеджерВременныхТаблиц, МассивОснований)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
		
		ТекстЗапроса           = "";
		ТекстОтветственныеЛица = "";
		ПервыйТип              = Истина;
		
		Для Каждого ТипОснования Из ТипыОснований Цикл
			
			ОбъектыТипа = ТипОснования.Значение;
			ИмяОбъекта  = Сред(ТипОснования.Ключ, 10);
			
			Запрос.Параметры.Вставить("ДокументОснование_" + ИмяОбъекта, ОбъектыТипа);
			
			Если Не ПустаяСтрока(ТекстЗапроса) Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			Если Не ПустаяСтрока(ТекстОтветственныеЛица) Тогда
				ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[ИмяОбъекта];
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса +
			МенеджерОбъекта.ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура();
			
			ИмяВременнойТаблицы = ИмяОбъекта + "ОтветственныеЛица";
			
			Если ИмяОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
				
				РеквизитыОтветственныеЛица = Новый Структура(
				"Руководитель, ГлавныйБухгалтер",
				Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,
				Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
				
				СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц,
				"Организация", РеквизитыОтветственныеЛица,
				ИмяВременнойТаблицы);
				
			Иначе
				
				СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
				ОбъектыТипа, МенеджерВременныхТаблиц, , ,
				ИмяВременнойТаблицы);
				
			КонецЕсли;
			
			ТекстОтветственныеЛица = ТекстОтветственныеЛица + "
			|ВЫБРАТЬ
			|	Таблица.Ссылка                       КАК Ссылка,
			|	Таблица.РуководительНаименование     КАК РуководительНаименование,
			|	Таблица.РуководительДолжность        КАК РуководительДолжность,
			|	Таблица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерНаименование
			|//ОператорПОМЕСТИТЬ
			|ИЗ
			|	" + ИмяВременнойТаблицы + " КАК Таблица";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаДанныхДокументов", ""));
			ТекстОтветственныеЛица = СтрЗаменить(ТекстОтветственныеЛица,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОтветственныеЛица", ""));
			
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = ТекстЗапроса + ТекстОтветственныеЛица;
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	Процедура СформироватьВременнуюТаблицуТоваровДляПечати_СчетФактураКомиссионеру(МенеджерВременныхТаблиц, МассивОснований, ПараметрыПечати)
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ТипыОснований = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОснований);
		
		ТекстОбщейТаблицыТовары = "";
		ПервыйТип               = Истина;
		
		Для Каждого ТипОснования Из ТипыОснований Цикл
			
			ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
			ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = НЕ ПараметрыПечати.ПечатьВВалюте;
			ПараметрыЗаполнения.АктуализироватьРасчеты = Ложь;
			
			ИмяОбъекта = Сред(ТипОснования.Ключ, 10);
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(ИмяОбъекта);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = Документы[ИмяОбъекта];
			КонецЕсли;
			МенеджерОбъекта.ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
			
			Если Не ПустаяСтрока(ТекстОбщейТаблицыТовары) Тогда
				ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
			|ВЫБРАТЬ
			|	ТаблицаДокумента.Ссылка                                    КАК Ссылка,
			|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
			|	ТаблицаДокумента.Номенклатура                              КАК Номенклатура,
			|	ТаблицаДокумента.Характеристика                            КАК Характеристика,
			|	ТаблицаДокумента.Упаковка                                  КАК Упаковка,
			|	ТаблицаДокумента.НомерГТД                                  КАК НомерГТД,
			|	ТаблицаДокумента.Количество                                КАК Количество,
			|	ТаблицаДокумента.КоличествоУпаковок                        КАК КоличествоУпаковок,
			|	ТаблицаДокумента.СуммаБезНДС                               КАК СуммаБезНДС,
			|	ТаблицаДокумента.СтавкаНДС                                 КАК СтавкаНДС,
			|	ТаблицаДокумента.СуммаНДС                                  КАК СуммаНДС,
			|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
			|	ТаблицаДокумента.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера,
			|	ТаблицаДокумента.Покупатель                                КАК Покупатель,
			|	ТаблицаДокумента.ЭтоТовар                                  КАК ЭтоТовар
			|//ОператорПОМЕСТИТЬ
			|ИЗ
			|	" + ИмяОбъекта + "ТаблицаТоваров КАК ТаблицаДокумента";
			
			ТекстОбщейТаблицыТовары = СтрЗаменить(ТекстОбщейТаблицыТовары,
			"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаТоваров", ""));
			ПервыйТип = Ложь;
			
		КонецЦикла;
		
		ТекстОбщейТаблицыТовары = ТекстОбщейТаблицыТовары + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		ТекстРезультирующейТаблицы = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                                    КАК Ссылка,
		|	ТаблицаТоваров.НомерСтроки                               КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура                              КАК Номенклатура,
		|	ДанныеНоменклатуры.НаименованиеПолное                    КАК НоменклатураНаименование,
		|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
		|		ДанныеНоменклатуры.Артикул
		|	ИНАЧЕ
		|		ДанныеНоменклатуры.Код
		|	КОНЕЦ                                                    КАК НоменклатураКод,
		|	ЛОЖЬ                                                     КАК ЭтоВозвратнаяТара,
		|	ВЫБОР 
		|		КОГДА НЕ ДанныеУпаковки.Ссылка ЕСТЬ NULL ТОГДА
		|			ДанныеУпаковки.ЕдиницаИзмерения
		|		КОГДА ДанныеНоменклатуры.Ссылка ЕСТЬ NULL ТОГДА
		|			ТаблицаТоваров.Упаковка
		|		ИНАЧЕ
		|			ДанныеНоменклатуры.ЕдиницаИзмерения
		|	КОНЕЦ                                                    КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.Характеристика                            КАК Характеристика,
		|	ТаблицаТоваров.НомерГТД                                  КАК НомерГТД,
		|	ТаблицаТоваров.СтавкаНДС                                 КАК СтавкаНДС,
		|	ВЫБОР КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.Количество
		|	ИНАЧЕ
		|		ТаблицаТоваров.КоличествоУпаковок
		|	КОНЕЦ                                                    КАК Количество,
		|	ВЫБОР КОГДА ТаблицаТоваров.Количество = 0 ТОГДА
		|		0
		|	КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	ИНАЧЕ
		|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
		|	КОНЕЦ                                                    КАК Цена,
		|	ТаблицаТоваров.СуммаБезНДС                               КАК СуммаБезНДС,
		|	ТаблицаТоваров.СуммаНДС                                  КАК СуммаНДС,
		|	ТаблицаТоваров.Покупатель                                КАК Покупатель,
		|	ТаблицаТоваров.ДатаСчетаФактурыКомиссионера              КАК ДатаСчетаФактурыКомиссионера,
		|	ТаблицаТоваров.НомерСчетаФактурыКомиссионера             КАК НомерСчетаФактурыКомиссионера
		|
		|ПОМЕСТИТЬ ТаблицаТоваровДокументов
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
		|		ПО ТаблицаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеУпаковки
		|		ПО НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			И ТаблицаТоваров.Упаковка = ДанныеУпаковки.Ссылка";
		
		Запрос.Текст = ТекстОбщейТаблицыТовары + ТекстРезультирующейТаблицы;
		
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
			КолонкаКодов = "Код";
		КонецЕсли;
		Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	Функция ТекстЗапросаДанныхШапкиДляПечатиСчетаФактуры_СчетФактураКомиссионеру(ПараметрыПечати)
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка КАК Ссылка,
		|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеОснований.НалогообложениеНДС КАК НалогообложениеНДС,
		|
		|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеОрганизацийПоставщик.ГоловнаяОрганизация
		|	ИНАЧЕ
		|		ДанныеСчетаФактуры.Организация
		|	КОНЕЦ КАК Организация,
		|	
		|	ВЫБОР КОГДА ДанныеОснований.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
		|		ДанныеСчетаФактуры.Организация
		|	ИНАЧЕ
		|		ДанныеОснований.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|
		|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
		|	КОГДА ЕСТЬNULL(ДанныеОрганизацийПоставщик.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеОрганизацийПоставщик.ЦифровойИндексОбособленногоПодразделения
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК ЦифровойИндекс,
		|
		|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
		|	ИНАЧЕ
		|		ДанныеОрганизацийПоставщик.КПП
		|	КОНЕЦ КАК КПППоставщика,
		|
		|	ДанныеОрганизацийПоставщик.Префикс КАК Префикс,
		|	ДанныеСчетаФактуры.Комиссионер КАК Комиссионер,
		|	ДанныеВалюты.Ссылка КАК Валюта,
		|	ДанныеВалюты.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	ДанныеВалюты.Код КАК ВалютаКод,
		|//РеквизитыОснованийДляУПД
		|	ВЫБОР
		|		КОГДА НЕ ДанныеОснований.РасчетыЧерезОтдельногоКонтрагента
		|			ИЛИ ДанныеСчетаФактуры.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ПечататьСчетФактуру
		|
		|ПОМЕСТИТЬ ДанныеОснований
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеСчетаФактуры
		|	ПО ДанныеСчетаФактуры.Ссылка = СчетаФактурыОснования.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.ДокументОснование = ДанныеОснований.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПоставщик
		|	ПО ДанныеСчетаФактуры.Организация = ДанныеОрганизацийПоставщик.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
		|	ПО ДанныеПодразделений.Организация = ДанныеСчетаФактуры.Организация
		|		И ДанныеПодразделений.Подразделение = ДанныеОснований.Подразделение
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК ДанныеВалюты
		|	ПО ДанныеОснований.Валюта = ДанныеВалюты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка                                КАК Ссылка,
		|	ВЫБОР 
		|		КОГДА ДанныеДокумента.Организация <> ДанныеОснований.Комиссионер ТОГДА
		|			&ПредставлениеСчетФактураКомиссионера
		|		ИНАЧЕ &ПредставлениеСчетФактура
		|	КОНЕЦ                                                 КАК ПредставлениеДокумента,
		|	ДанныеДокумента.Номер                                 КАК Номер,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ЕСТЬNULL(ДанныеДокумента.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
		|	ИНАЧЕ 
		|		ДанныеДокумента.Дата
		|	КОНЕЦ                                                 КАК Дата,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.НомерИсправления 
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК НомерИсправления,
		|	ВЫБОР КОГДА ДанныеДокумента.Исправление ТОГДА
		|		ДанныеДокумента.Дата
		|	ИНАЧЕ
		|		НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                                 КАК ДатаИсправления,
		|	ДанныеДокумента.Исправление                           КАК Исправление,
		|	ЛОЖЬ                                                  КАК КорректировочныйСчетФактура,
		|	ДанныеДокумента.СтрокаПлатежноРасчетныеДокументы      КАК СтрокаПоДокументу,
		|	ДанныеДокумента.Валюта                                КАК ВалютаСчетаФактуры,
		|	ДанныеОснований.Организация                           КАК Организация,
		|	ДанныеОснований.НалогообложениеНДС                    КАК НалогообложениеНДС,
		|	ДанныеОснований.КПППоставщика                         КАК КПППоставщика,
		|	ДанныеОснований.Грузоотправитель                      КАК Грузоотправитель,
		|	ДанныеОснований.Префикс                               КАК Префикс,
		|	ДанныеОснований.ЦифровойИндекс                        КАК ИндексПодразделения,
		|	ТаблицаОтветственныеЛица.РуководительНаименование     КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность        КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	ДанныеОснований.Валюта                                КАК Валюта,
		|	ДанныеОснований.ВалютаНаименованиеПолное              КАК ВалютаНаименованиеПолное,
		|	ДанныеОснований.ВалютаКод                             КАК ВалютаКод,
		|	//РеквизитыОснованийДляУПД
		|	//ДанныеУПДВыданного
		|	ЛОЖЬ                                                  КАК ТолькоУслуги
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру КАК ДанныеДокумента
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеДокумента.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
		|	ПО СчетаФактурыОснования.Ссылка = ДанныеОснований.Ссылка
		|		И ДанныеОснований.ПечататьСчетФактуру
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаОтветственныеЛица.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаФактуры.Ссылка      КАК Ссылка,
		|	Покупатели.Покупатель    КАК Грузополучатель,
		|
		|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеКонтрагента.ОбособленноеПодразделение, ЛОЖЬ) ТОГДА
		|		ДанныеКонтрагента.ГоловнойКонтрагент
		|	ИНАЧЕ
		|		Покупатели.Покупатель
		|	КОНЕЦ                    КАК Контрагент,
		|
		|	ВЫБОР КОГДА Покупатели.КПППокупателя ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА """"
		|			  КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		Покупатели.КПППокупателя
		|	КОНЕЦ КАК КПППокупателя,
		|
		|	ВЫБОР КОГДА Покупатели.ИННПокупателя ПОДОБНО """" ТОГДА
		|		ВЫБОР КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
		|			  КОГДА Покупатели.Покупатель ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
		|			  ИНАЧЕ """"
		|		КОНЕЦ
		|	ИНАЧЕ
		|		Покупатели.ИННПокупателя
		|	КОНЕЦ КАК ИННПокупателя
		|
		|ИЗ
		|	СчетаФактурыОснования КАК СчетаФактуры
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
		|	ПО СчетаФактуры.Ссылка = Покупатели.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|	ПО ДанныеКонтрагента.Ссылка = Покупатели.Покупатель
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
		|	ПО ДанныеОрганизацийПокупатель.Ссылка = Покупатели.Покупатель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ПараметрыПечати.Свойство("ДополнитьДаннымиУПД") И ПараметрыПечати.ДополнитьДаннымиУПД Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//РеквизитыОснованийДляУПД",
			"	ДанныеОснований.Основание           КАК Основание,
			|	ДанныеОснований.ДоверенностьНомер   КАК ДоверенностьНомер,
			|	ДанныеОснований.ДоверенностьДата    КАК ДоверенностьДата,
			|	ДанныеОснований.ДоверенностьВыдана  КАК ДоверенностьВыдана,
			|	ДанныеОснований.ДоверенностьЛицо    КАК ДоверенностьЛицо,
			|	ДанныеОснований.Кладовщик           КАК Кладовщик,
			|	ДанныеОснований.ДолжностьКладовщика КАК ДолжностьКладовщика,");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДанныеУПДВыданного",
			"	ИСТИНА                              КАК ВыводитьКодНоменклатуры,
			|	ИСТИНА                              КАК ТребуетсяНаличиеСФ,
			|	ЛОЖЬ                                КАК ПечатьНеТребуется,
			|	1                                   КАК СтатусУПД,");
			
		КонецЕсли;
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры_СчетФактураКомиссионеру()
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаФактурыОснования.Ссылка                                 КАК Ссылка,
		|	МИНИМУМ(ТаблицаДокумента.НомерСтроки)                        КАК НомерСтроки,
		|
		|	ТаблицаДокумента.Номенклатура                                КАК Номенклатура,
		|	ТаблицаДокумента.НоменклатураНаименование                    КАК НоменклатураНаименование,
		|	ТаблицаДокумента.НоменклатураКод                             КАК НоменклатураКод,
		|	ТаблицаДокумента.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
		|	ДанныеЕдиницыИзмерения.Представление                         КАК ЕдиницаИзмеренияНаименование,
		|	ДанныеЕдиницыИзмерения.Код                                   КАК ЕдиницаИзмеренияКод,
		|	ТаблицаДокумента.Характеристика                              КАК Характеристика,
		|	ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """")      КАК ХарактеристикаНаименование,
		|	ТаблицаДокумента.НомерГТД                                    КАК НомерГТД,
		|	ДанныеСтраныПросхождения.Ссылка                              КАК СтранаПроисхождения,
		|	ДанныеСтраныПросхождения.Код                                 КАК СтранаПроисхожденияКод,
		|	СУММА(ТаблицаДокумента.Количество)                           КАК Количество,
		|	ТаблицаДокумента.Цена                                        КАК Цена,
		|	СУММА(ТаблицаДокумента.СуммаБезНДС)                          КАК СуммаБезНДС,
		|	СУММА(ТаблицаДокумента.СуммаНДС)                             КАК СуммаНДС,
		|	СУММА(ТаблицаДокумента.СуммаБезНДС
		|		+ ТаблицаДокумента.СуммаНДС)                             КАК СуммаСНДС,
		|	ТаблицаДокумента.СтавкаНДС                                   КАК СтавкаНДС,
		|
		|	Покупатели.Покупатель                                        КАК Покупатель,
		|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера                КАК Дата,
		|	ЛОЖЬ                                                         КАК ЭтоВозвратнаяТара
		|
		|ИЗ СчетаФактурыОснования КАК СчетаФактурыОснования
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК Покупатели
		|	ПО СчетаФактурыОснования.Ссылка = Покупатели.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваровДокументов КАК ТаблицаДокумента
		|	ПО СчетаФактурыОснования.ДокументОснование = ТаблицаДокумента.Ссылка
		|		И Покупатели.Покупатель = ТаблицаДокумента.Покупатель
		|		И (ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ ТаблицаДокумента.ДатаСчетаФактурыКомиссионера = НАЧАЛОПЕРИОДА(СчетаФактурыОснования.Дата, ДЕНЬ))
		|		И (Покупатели.НомерСчетаФактуры = ТаблицаДокумента.НомерСчетаФактурыКомиссионера)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
		|	ПО ТаблицаДокумента.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
		|	ПО ТаблицаДокумента.Характеристика = ДанныеХарактеристики.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
		|	ПО ТаблицаДокумента.НомерГТД.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка
		|
		|ГДЕ
		|	НЕ ТаблицаДокумента.ЭтоВозвратнаяТара
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетаФактурыОснования.Ссылка,
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.НоменклатураНаименование,
		|	ТаблицаДокумента.НоменклатураКод,
		|	ТаблицаДокумента.ЕдиницаИзмерения,
		|	ДанныеЕдиницыИзмерения.Представление,
		|	ДанныеЕдиницыИзмерения.Код,
		|	ТаблицаДокумента.Характеристика,
		|	ДанныеХарактеристики.НаименованиеПолное,
		|	ТаблицаДокумента.НомерГТД,
		|	ДанныеСтраныПросхождения.Ссылка,
		|	ТаблицаДокумента.Цена,
		|	ТаблицаДокумента.СтавкаНДС,
		|	Покупатели.Покупатель,
		|	ТаблицаДокумента.ДатаСчетаФактурыКомиссионера
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		Возврат ТекстЗапроса;
		
	КонецФункции
	
	Функция ПолучитьДанныеДляПечатнойФормыСчетФактура_СчетФактураНалоговыйАгент(ПараметрыПечати, МассивОбъектов)
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодтверждениеОплатыНДСВБюджет.СчетФактура КАК Документ,
		|	МАКСИМУМ(ПодтверждениеОплатыНДСВБюджет.СтрокаПлатежноРасчетныеДокументы) КАК СтрокаПлатежноРасчетныеДокументы
		|ПОМЕСТИТЬ ОплатаВБюджет
		|ИЗ
		|	РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
		|ГДЕ
		|	ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодтверждениеОплатыНДСВБюджет.СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактура.Ссылка КАК Ссылка,
		|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
		|	СчетФактура.Номер КАК Номер,
		|	СчетФактура.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
		|	ЛОЖЬ КАК Исправление,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
		|	ЛОЖЬ КАК КорректировочныйСчетФактура,
		|	ВЫБОР СчетФактура.ВидАгентскогоДоговора
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
		|			ТОГДА ЕСТЬNULL(ОплатаВБюджет.СтрокаПлатежноРасчетныеДокументы, """")
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
		|			ТОГДА ЕСТЬNULL(ОплатаВБюджет.СтрокаПлатежноРасчетныеДокументы, """")
		|		ИНАЧЕ СчетФактура.СтрокаПлатежноРасчетныеДокументы
		|	КОНЕЦ КАК СтрокаПоДокументу,
		|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
		|	ВЫБОР
		|		КОГДА СчетФактура.Поставщик.ОбособленноеПодразделение
		|			ТОГДА СчетФактура.Поставщик.ГоловнойКонтрагент
		|		ИНАЧЕ СчетФактура.Поставщик
		|	КОНЕЦ КАК Организация,
		|	СчетФактура.Организация КАК Контрагент,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	СчетФактура.Организация.Префикс КАК Префикс,
		|	ВЫБОР
		|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
		|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексПодразделения,
		|	СчетФактура.Поставщик КАК Грузополучатель,
		|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
		|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
		|	СчетФактура.Организация КАК Грузоотправитель,
		|	СчетФактура.Поставщик.КПП КАК КПППоставщика,
		|	СчетФактура.Организация.КПП КАК КПППокупателя,
		|	СчетФактура.Организация.ИНН КАК ИННПокупателя,
		|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
		|	&ВалютаРеглУчета КАК Валюта,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
		|	ЛОЖЬ КАК ТолькоУслуги,
		|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
		|ИЗ
		|	Документ.СчетФактураНалоговыйАгент КАК СчетФактура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатаВБюджет КАК ОплатаВБюджет
		|		ПО СчетФактура.Ссылка = ОплатаВБюджет.Документ
		|ГДЕ
		|	СчетФактура.Ссылка В(&МассивДокументов)
		|	И СчетФактура.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.НоменклатураНаименование КАК НоменклатураНаименование,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	"""" КАК ХарактеристикаНаименование,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	"""" КАК НомерГТД,
		|	"""" КАК СтранаПроисхождения,
		|	"""" КАК СтранаПроисхожденияКод,
		|	0 КАК Количество,
		|	0 КАК Цена,
		|	СУММА(ВложенныйЗапрос.Сумма - ВложенныйЗапрос.СуммаНДС) КАК СуммаБезНДС,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВложенныйЗапрос.Сумма) КАК СуммаСНДС,
		|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТовары.Ссылка КАК Ссылка,
		|		НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|		ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1))) <> """"
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(100))
		|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Ссылка.ВидАгентскогоДоговора)
		|		КОНЕЦ КАК НоменклатураНаименование,
		|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|		ТаблицаТовары.СуммаСНДС КАК Сумма,
		|		ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаТовары
		|	ГДЕ
		|		ТаблицаТовары.Ссылка В(&МассивДокументов)
		|		И ТаблицаТовары.Ссылка.Проведен) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	ВложенныйЗапрос.НоменклатураНаименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		РезультатПоШапке          = МассивРезультатов[1];
		РезультатПоТабличнойЧасти = МассивРезультатов[2];
		
		СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, СчетФактураНалоговыйАгент",
		РезультатПоШапке, РезультатПоТабличнойЧасти, Истина);
		
		Возврат СтруктураДанныхДляПечати;
	КонецФункции
	
	Функция ПолучитьДанныеДляПечатнойФормыСчетФактура_СчетФактураНаНеподтвержденнуюРеализацию0(ПараметрыПечати, МассивОбъектов)
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка               КАК Ссылка,
		|	ДанныеДокументов.Номер                КАК Номер,
		|	ДанныеДокументов.Дата                 КАК Дата,
		|	ДанныеДокументов.Организация          КАК Организация,
		|	ДанныеДокументов.Контрагент           КАК Контрагент,
		|	ДанныеДокументов.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПлатежноРасчетныеДокументы,
		|	ДанныеДокументов.ДокументОснование    КАК ДокументОснование,
		|
		|	ВЫБОР КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
		|		ДанныеОрганизаций.ГоловнаяОрганизация
		|	ИНАЧЕ
		|		ДанныеОрганизаций.Ссылка
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	
		|	ДанныеОрганизаций.Ссылка КАК Грузоотправитель, 
		|	
		|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане.ЦифровойИндексОбособленногоПодразделения
		|	КОГДА ДанныеОрганизаций.ОбособленноеПодразделение ТОГДА
		|		ДанныеОрганизаций.ЦифровойИндексОбособленногоПодразделения
		|	ИНАЧЕ
		|		""""
		|	КОНЕЦ КАК ИндексПодразделения,
		|	
		|	ВЫБОР КОГДА ДанныеДокументов.КППКонтрагента ПОДОБНО """" ТОГДА """"
		|		  ИНАЧЕ ДанныеДокументов.КППКонтрагента
		|	КОНЕЦ КАК КПППокупателя,
		|
		|	ВЫБОР КОГДА ДанныеДокументов.ИННКонтрагента ПОДОБНО """" ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
		|		ИНАЧЕ ДанныеДокументов.ИННКонтрагента
		|	КОНЕЦ КАК ИННПокупателя,
		|	
		|	ВЫБОР КОГДА НЕ ДанныеПодразделений.РегистрацияВНалоговомОргане ЕСТЬ NULL ТОГДА
		|		ДанныеПодразделений.РегистрацияВНалоговомОргане.КПП
		|	ИНАЧЕ
		|		ДанныеОрганизаций.КПП
		|	КОНЕЦ КАК КПППоставщика
		|
		|ПОМЕСТИТЬ СчетаФактуры
		|ИЗ
		|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК ДанныеДокументов
		| 	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.Организации КАК ДанныеОрганизаций
		|	ПО
		|		ДанныеДокументов.Организация = ДанныеОрганизаций.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
		|	ПО ДанныеКонтрагента.Ссылка = ДанныеДокументов.Контрагент
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.РегистрацииВНалоговомОргане КАК ДанныеПодразделений
		|	ПО
		|		ДанныеПодразделений.Организация = ДанныеДокументов.Организация
		|		И ДанныеПодразделений.Подразделение = 
		|			ВЫБОР 
		|				КОГДА ДанныеДокументов.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
		|					ТОГДА ДанныеДокументов.ДокументОснование.Склад.Подразделение
		|				КОГДА ДанныеДокументов.ДокументОснование ССЫЛКА Документ.АктВыполненныхРабот 
		|					ТОГДА ДанныеДокументов.ДокументОснование.Подразделение
		|			КОНЕЦ
		|	
		|ГДЕ
		|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Запрос.Выполнить();
		
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьУслуги,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьТовары
		|ПОМЕСТИТЬ
		|	НоменклатураДокументов
		|ИЗ
		|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТоваров
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|ВЫБРАТЬ
		|	СчетаФактуры.Ссылка КАК Ссылка,
		|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
		|	СчетаФактуры.Номер КАК Номер,
		|	СчетаФактуры.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
		|	ЛОЖЬ КАК Исправление,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
		|	ЛОЖЬ КАК КорректировочныйСчетФактура,
		|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
		|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
		|	РеализацияТоваровУслуг.Партнер КАК Партнер,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Контрагент.ОбособленноеПодразделение
		|			ТОГДА РеализацияТоваровУслуг.Контрагент.ГоловнойКонтрагент
		|		ИНАЧЕ РеализацияТоваровУслуг.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	ЕСТЬNULL(СчетаФактуры.ГоловнаяОрганизация, РеализацияТоваровУслуг.Организация) КАК Организация,
		|	СчетаФактуры.Организация.Префикс КАК Префикс,
		|	СчетаФактуры.ИндексПодразделения КАК ИндексПодразделения,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РеализацияТоваровУслуг.Контрагент
		|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(СчетаФактуры.Грузоотправитель, РеализацияТоваровУслуг.Организация)
		|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	СчетаФактуры.КПППоставщика КАК КПППоставщика,
		|	СчетаФактуры.КПППокупателя КАК КПППокупателя,
		|	СчетаФактуры.ИННПокупателя КАК ИННПокупателя,
		|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
		|	РеализацияТоваровУслуг.Валюта КАК Валюта,
		|	РеализацияТоваровУслуг.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	РеализацияТоваровУслуг.Валюта.Код КАК ВалютаКод,
		|	ВЫБОР
		|		КОГДА НоменклатураДокументов.ЕстьУслуги
		|				И НЕ НоменклатураДокументов.ЕстьТовары
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТолькоУслуги,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
		|ИЗ
		|	СчетаФактуры КАК СчетаФактуры
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|	ПО 
		|		РеализацияТоваровУслуг.Ссылка = СчетаФактуры.ДокументОснование
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		НоменклатураДокументов КАК НоменклатураДокументов
		|	ПО 
		|		СчетаФактуры.Ссылка = НоменклатураДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|	ПО 
		|		СчетаФактуры.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетаФактуры.Ссылка КАК Ссылка,
		|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
		|	СчетаФактуры.Номер КАК Номер,
		|	СчетаФактуры.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
		|	ЛОЖЬ КАК Исправление,
		|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
		|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
		|	ЛОЖЬ КАК КорректировочныйСчетФактура,
		|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
		|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
		|	АктВыполненныхРабот.Партнер КАК Партнер,
		|	ВЫБОР
		|		КОГДА АктВыполненныхРабот.Контрагент.ОбособленноеПодразделение
		|			ТОГДА АктВыполненныхРабот.Контрагент.ГоловнойКонтрагент
		|		ИНАЧЕ АктВыполненныхРабот.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	СчетаФактуры.ГоловнаяОрганизация КАК Организация,
		|	СчетаФактуры.Организация.Префикс КАК Префикс,
		|	СчетаФактуры.ИндексПодразделения КАК ИндексПодразделения,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	АктВыполненныхРабот.Контрагент КАК Грузополучатель,
		|	СчетаФактуры.Грузоотправитель КАК Грузоотправитель,
		|	СчетаФактуры.КПППоставщика КАК КПППоставщика,
		|	СчетаФактуры.КПППокупателя КАК КПППокупателя,
		|	СчетаФактуры.ИННПокупателя КАК ИННПокупателя,
		|	"""" КАК АдресДоставки,
		|	АктВыполненныхРабот.Валюта КАК Валюта,
		|	АктВыполненныхРабот.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	АктВыполненныхРабот.Валюта.Код КАК ВалютаКод,
		|	ИСТИНА КАК ТолькоУслуги,
		|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
		|ИЗ
		|	СчетаФактуры КАК СчетаФактуры
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		Документ.АктВыполненныхРабот КАК АктВыполненныхРабот
		|	ПО 
		|		АктВыполненныхРабот.Ссылка = СчетаФактуры.ДокументОснование
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|	ПО 
		|		СчетаФактуры.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Представление
		|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Код
		|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТовары.Количество
		|		ИНАЧЕ ТаблицаТовары.КоличествоУпаковок
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество
		|		ИНАЧЕ (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.КоличествоУпаковок
		|	КОНЕЦ КАК Цена,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДС,
		|	ТаблицаТовары.СуммаНДС  КАК СуммаНДС,
		|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
		|	ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	ТаблицаТовары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаТовары.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка В (&МассивДокументов)
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка";
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Ссылка",
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Код",
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
		
		ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
		Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		РезультатПоШапке          = МассивРезультатов[1];
		РезультатПоТабличнойЧасти = МассивРезультатов[2];
		
		СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке, РезультатПоТабличнойЧасти);
		
		Возврат СтруктураДанныхДляПечати;
		
	КонецФункции
	
	#КонецОбласти
	
	Функция ПараметрыЗаполненияВременнойТаблицыТоваров()
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПересчитыватьВВалютуРегл", Истина);
		СтруктураПараметров.Вставить("ВключаяНомераГТД", Ложь);
		СтруктураПараметров.Вставить("ВключаяДоКорректировки", Ложь);
		СтруктураПараметров.Вставить("АктуализироватьРасчеты", Истина);
		
		Возврат СтруктураПараметров;
		
	КонецФункции
	
	Процедура СформироватьВременнуюТаблицуОтветственныхЛицДокументов(ОтборДокументы, МенеджерВременныхТаблиц,
		ИмяРеквизитаОрганизация = "Организация", РеквизитыОтветственныеЛица = Неопределено,
		ИмяТаблицыОтветственныеЛица = "ТаблицаОтветственныеЛица")
		
		Если (ТипЗнч(ОтборДокументы) = Тип("Массив") ИЛИ ТипЗнч(ОтборДокументы) = Тип("ФиксированныйМассив"))
			И ОтборДокументы.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ОтборДокументы) <> Тип("Массив") И ТипЗнч(ОтборДокументы) <> Тип("ФиксированныйМассив") Тогда // это ссылка на документ
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(ОтборДокументы);
		Иначе // это массив ссылок на документы
			МассивОбъектов = ОтборДокументы;
		КонецЕсли;
		
		МетаданныеДокумента = МассивОбъектов[0].Метаданные();
		
		ИменаПолейПереданыВПараметрах = (РеквизитыОтветственныеЛица <> Неопределено);
		Если НЕ ИменаПолейПереданыВПараметрах Тогда
			РеквизитыОтветственныеЛица = ОтветственныеЛицаПовтИсп.РеквизитыОтветственныхЛицДокумента(МетаданныеДокумента.Имя);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РеквизитыОтветственныеЛица) Тогда
			Возврат;
		КонецЕсли;
		
		ИмяРеквизитаОрганизация = "ДокументДляПечати." + ИмяРеквизитаОрганизация;
		
		Если МенеджерВременныхТаблиц = Неопределено Тогда
			МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		// Получим данные из документов
		ШаблонЗапроса = 
		"ВЫБРАТЬ
		|	ДокументДляПечати.Ссылка 					КАК Ссылка,
		|	НАЧАЛОПЕРИОДА(ДокументДляПечати.Дата, ДЕНЬ) КАК Дата,
		|	%Организация%								КАК Организация,
		|	%ИмяРеквизита% 								КАК ВыбранноеОтветственноеЛицо,
		|	ЗНАЧЕНИЕ(%ОтветственноеЛицо%) 				КАК ОтветственноеЛицо
		|%СозданиеВременнойТаблицы%
		|ИЗ
		|	Документ." + МетаданныеДокумента.Имя + " КАК ДокументДляПечати
		|ГДЕ
		|	ДокументДляПечати.Ссылка В(&МассивОбъектов)";
		
		Индекс = 0;
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			
			Индекс 		 = Индекс + 1;
			ТекстЗапроса = ШаблонЗапроса;
			
			Если Индекс > 1 Тогда
				ТекстЗапроса = "
				|ОБЪЕДИНИТЬ ВСЕ
				|" + ТекстЗапроса;
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%Организация%", 			 	ИмяРеквизитаОрганизация);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяРеквизита%", 			
			?(ИменаПолейПереданыВПараметрах, 
			"ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)", // будут выбраны значения по умолчанию
			"ДокументДляПечати." + КлючИЗначение.Ключ));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ОтветственноеЛицо%", 		ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%СозданиеВременнойТаблицы%", ?(Индекс = 1, "ПОМЕСТИТЬ ВТДанныеДокументов", ""));
			
			Запрос.Текст = Запрос.Текст + ТекстЗапроса;
			
		КонецЦикла;
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		// Заполним пустые поля ответственных лиц значениями по умолчанию
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДанныеДокументов.Организация КАК Организация,
		|	ВТДанныеДокументов.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|	ВТДанныеДокументов.Дата КАК Дата
		|ПОМЕСТИТЬ ВТНезаполненныеОтветственные
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|ГДЕ
		|	ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТНезаполненныеОтветственные.Организация КАК Организация,
		|	ВТНезаполненныеОтветственные.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|	ВТНезаполненныеОтветственные.Дата КАК Дата,
		|	ОтветственныеЛицаОрганизаций.Ссылка КАК Ответственный,
		|	ОтветственныеЛицаОрганизаций.ПравоПодписиПоДоверенности КАК ПравоПодписиПоДоверенности
		|ПОМЕСТИТЬ ВТКандидатыВОтветственныеПоУмолчанию
		|ИЗ
		|	ВТНезаполненныеОтветственные КАК ВТНезаполненныеОтветственные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
		|		ПО ВТНезаполненныеОтветственные.Организация = ОтветственныеЛицаОрганизаций.Владелец
		|			И ВТНезаполненныеОтветственные.ОтветственноеЛицо = ОтветственныеЛицаОрганизаций.ОтветственноеЛицо
		|			И ВТНезаполненныеОтветственные.Дата >= ОтветственныеЛицаОрганизаций.ДатаНачала
		|			И (ВТНезаполненныеОтветственные.Дата <= ОтветственныеЛицаОрганизаций.ДатаОкончания
		|				ИЛИ ОтветственныеЛицаОрганизаций.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|	ВТКандидатыВОтветственныеПоУмолчанию.Дата,
		|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицоПоУмолчанию
		|ПОМЕСТИТЬ ВТОтветственныеПоУмолчанию
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация КАК Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата КАК Дата,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Ответственный КАК ОтветственноеЛицоПоУмолчанию
		|	ИЗ
		|		ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
		|	ГДЕ
		|		НЕ ВТКандидатыВОтветственныеПоУмолчанию.ПравоПодписиПоДоверенности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата,
		|		МИНИМУМ(ВТКандидатыВОтветственныеПоУмолчанию.Ответственный)
		|	ИЗ
		|		ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
		|
		|	СГРУППИРОВАТЬ ПО
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата
		|	
		|	ИМЕЮЩИЕ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТКандидатыВОтветственныеПоУмолчанию.Ответственный) = 1
		|	) КАК ВТКандидатыВОтветственныеПоУмолчанию
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.Ссылка,
		|	ВТДанныеДокументов.Дата,
		|	ВТДанныеДокументов.ОтветственноеЛицо,
		|	ВЫБОР
		|		КОГДА ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ВТОтветственныеПоУмолчанию.ОтветственноеЛицоПоУмолчанию, ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка))
		|		ИНАЧЕ ВТДанныеДокументов.ВыбранноеОтветственноеЛицо
		|	КОНЕЦ КАК ОтветственноеЛицоПоУмолчанию
		|ПОМЕСТИТЬ ВТДокументыСОтветственными
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственныеПоУмолчанию КАК ВТОтветственныеПоУмолчанию
		|		ПО ВТДанныеДокументов.Организация = ВТОтветственныеПоУмолчанию.Организация
		|			И ВТДанныеДокументов.ОтветственноеЛицо = ВТОтветственныеПоУмолчанию.ОтветственноеЛицо
		|			И ВТДанныеДокументов.Дата = ВТОтветственныеПоУмолчанию.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТДокументыСОтветственными.Ссылка,
		|	МАКСИМУМ(ФИОФизическихЛиц.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериодыФИОФизЛиц
		|ИЗ
		|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
		|			И ВТДокументыСОтветственными.Дата >= ФИОФизическихЛиц.Период
		|ГДЕ
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И ФИОФизическихЛиц.Период ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо,
		|	ВТДокументыСОтветственными.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПериодыФИОФизЛиц.ФизическоеЛицо,
		|	ВТПериодыФИОФизЛиц.Ссылка,
		|	ВЫРАЗИТЬ(ФИОФизическихЛиц.Фамилия + ВЫБОР
		|			КОГДА ФИОФизическихЛиц.Имя = """"
		|				ТОГДА """"
		|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Имя, 1, 1) + "".""
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ФИОФизическихЛиц.Отчество = """"
		|				ТОГДА """"
		|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Отчество, 1, 1) + "".""
		|		КОНЕЦ КАК СТРОКА(50)) КАК ФИО
		|ПОМЕСТИТЬ ВТФИОФизЛиц
		|ИЗ
		|	ВТПериодыФИОФизЛиц КАК ВТПериодыФИОФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|		ПО ВТПериодыФИОФизЛиц.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
		|			И ВТПериодыФИОФизЛиц.Период = ФИОФизическихЛиц.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДокументыСОтветственными.Ссылка,
		|	ВТДокументыСОтветственными.ОтветственноеЛицо,
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию,
		|	ЕСТЬNULL(ВТФИОФизЛиц.ФИО, """") КАК ФИО
		|ПОМЕСТИТЬ ВТДокументыСФИООтветственных
		|ИЗ
		|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизЛиц КАК ВТФИОФизЛиц
		|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ВТФИОФизЛиц.ФизическоеЛицо
		|			И ВТДокументыСОтветственными.Ссылка = ВТФИОФизЛиц.Ссылка";
		
		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		// Свернем результат - поместим всех ответственных в одну запись выборки запроса
		ШаблонЗапроса = "
		|ВЫБРАТЬ
		|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаЗапроса%
		|ПОМЕСТИТЬ ВТДокументыСФИООтветственныхСвернутая
		|ИЗ
		|(%ВложенныйЗапрос%) КАК ВТДокументыСФИООтветственных
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТДокументыСФИООтветственных.Ссылка
		|";
		
		ШаблонВложенногоЗапроса = "
		|ВЫБРАТЬ
		|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаВложенногоЗапроса%
		|ИЗ
		|	ВТДокументыСФИООтветственных КАК ВТДокументыСФИООтветственных
		|ГДЕ
		|	ВТДокументыСФИООтветственных.ОтветственноеЛицо = ЗНАЧЕНИЕ(%ОтветственноеЛицо%)
		|";
		
		Индекс = 0;
		СтрокаВыборкаЗапроса = "";
		ТекстВложенногоЗапроса = "";
		
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			
			Индекс = Индекс + 1;
			
			СтрокаВыборкаВложенногоЗапроса = "";
			Для Каждого КлючИЗначение2 Из РеквизитыОтветственныеЛица Цикл
				
				Если КлючИЗначение.Ключ = КлючИЗначение2.Ключ Тогда
					СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
					|	ВТДокументыСФИООтветственных.ОтветственноеЛицоПоУмолчанию КАК " + КлючИЗначение2.Ключ + ",
					|	ВТДокументыСФИООтветственных.ФИО КАК " + КлючИЗначение2.Ключ + "ФИО";
				Иначе
					СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
					|	ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка) КАК " + КлючИЗначение2.Ключ + ",
					|	"""" КАК " + КлючИЗначение2.Ключ + "ФИО";
				КонецЕсли;
				
			КонецЦикла;
			
			Если Индекс > 1 Тогда
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + ШаблонВложенногоЗапроса;
			
			ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%СтрокаВыборкаВложенногоЗапроса%", СтрокаВыборкаВложенногоЗапроса);
			ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%ОтветственноеЛицо%", 			  ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
			
			СтрокаВыборкаЗапроса = СтрокаВыборкаЗапроса + ",
			|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + ") КАК " + КлючИЗначение.Ключ + ",
			|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + "ФИО) КАК " + КлючИЗначение.Ключ + "ФИО";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборкаЗапроса%", СтрокаВыборкаЗапроса);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса ,  "%ВложенныйЗапрос%", 	 ТекстВложенногоЗапроса);
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		// Расшифруем данные - выберем нужные реквизиты ответственных лиц в отдельные поля
		ШаблонЗапроса = "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСвернутая.Ссылка КАК Ссылка%СтрокаВыборка%
		|ПОМЕСТИТЬ %ИмяТаблицыОтветственныеЛица%
		|ИЗ
		|	ВТДокументыСФИООтветственныхСвернутая КАК ВТСвернутая
		|";
		
		ШаблонСтрокиВыборки = ",
		|	ВТСвернутая.%Реквизит% КАК %Реквизит%,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК %Реквизит%ФизическоеЛицо,
		|	ВТСвернутая.%Реквизит%ФИО 
		|		+ ВЫБОР
		|			КОГДА ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи ЕСТь NULL
		|				ИЛИ ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи = """"
		|			ТОГДА """"
		|			ИНАЧЕ "", "" + ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи
		|		  КОНЕЦ КАК %Реквизит%Наименование,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.Должность, """") КАК %Реквизит%Должность,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи, """") КАК %Реквизит%ОснованиеПраваПодписи";
		
		СтрокаВыборка = "";
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			СтрокаВыборка = СтрокаВыборка + СтрЗаменить(ШаблонСтрокиВыборки , "%Реквизит%", КлючИЗначение.Ключ);
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборка%", СтрокаВыборка);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяТаблицыОтветственныеЛица%", ИмяТаблицыОтветственныеЛица);
		
		// Удалим ненужные временные таблицы
		Запрос.Текст = Запрос.Текст + ТекстЗапроса + "
		|;
		|УНИЧТОЖИТЬ ВТДанныеДокументов
		|;
		|УНИЧТОЖИТЬ ВТНезаполненныеОтветственные
		|;
		|УНИЧТОЖИТЬ ВТОтветственныеПоУмолчанию
		|;
		|УНИЧТОЖИТЬ ВТКандидатыВОтветственныеПоУмолчанию
		|;
		|УНИЧТОЖИТЬ ВТДокументыСОтветственными
		|;
		|УНИЧТОЖИТЬ ВТПериодыФИОФизЛиц
		|;
		|УНИЧТОЖИТЬ ВТФИОФизЛиц
		|;
		|УНИЧТОЖИТЬ ВТДокументыСФИООтветственных
		|;
		|УНИЧТОЖИТЬ ВТДокументыСФИООтветственныхСвернутая
		|";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	//{{MRG[ <-> ]
#Иначе
	//}}MRG[ <-> ]
	//{{MRG[ <-> ]
	//#КонецЕсли
	//}}MRG[ <-> ]
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

