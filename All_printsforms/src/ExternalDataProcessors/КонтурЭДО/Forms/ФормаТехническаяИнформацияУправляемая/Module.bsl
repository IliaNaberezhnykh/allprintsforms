
&НаКлиенте
Перем МодульТиповой;

&НаКлиенте
Перем ИмяФайлаМодуля;

&НаКлиенте
Перем РасположениеМодуля;

&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Функция Модуль_ЯдроНаСервере() Экспорт
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект()

	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки = ПолучитьИзВременногоХранилища(Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
		Если Не СтруктураОбработки = Неопределено Тогда
			ОбработкаОбъект = СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	BoxId = "";
	Параметры.Свойство("BoxId", BoxId);
	
	Элементы.СкопироватьТехИнформацию.ЦветФона = Новый Цвет(255, 225, 0);
	
	ТехническиеДанные = ТехническиеДанные();
	
	ТехническаяИнформация = СформироватьТехническуюИнформацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормы();
	
	УстановитьВидимостьКнопкиСкачатьПМ();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокФормы()
	
	АвтоЗаголовок = Ложь;
	Заголовок = "Диадок: техническая поддержка";
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКнопкиСкачатьПМ()
	
	Элементы.СкачатьПМ.Видимость = МожноСкачатьПМ(ТехническиеДанные);
	
КонецПроцедуры

&НаКлиенте
Функция МожноСкачатьПМ(ТехническиеДанные)
	
	Результат = Ложь;
	
	Если ТехническиеДанные.Настройки.ИспользоватьПодключаемыйМодуль Тогда
		
		Если ТехническиеДанные.Настройки.МестонахождениеПодключаемогоМодуля = "Диск"
			Или ТехническиеДанные.Настройки.МестонахождениеПодключаемогоМодуля = "1С" Тогда
			
			Результат = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СкачатьПМ(Команда)
	
	Действие = "Скачать ПМ";
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки("Форма технической информации", "Техподдержка", Действие);
	
	ОписаниеОповещения = ОсновнаяФорма().НовыйОписаниеОповещения("СкачатьПодключаемыйМодульЗавершение", ЭтаФорма);
	
	ДиалогСохранения 					= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохранения.Заголовок 			= "Укажите куда сохранить файл с подключаемым модулем";
	ДиалогСохранения.МножественныйВыбор = Ложь;
	ДиалогСохранения.Фильтр 			= "Внешняя обработка (*.epf)|*.epf";
	ДиалогСохранения.ПолноеИмяФайла 	= ДиалогСохранения.Каталог + "Подключаемый модуль.epf";
	
	ДиалогСохранения.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьПодключаемыйМодульЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = ВыбранныеФайлы[0];
	Файл = Новый Файл(ПолноеИмяФайла);
	
	ТекстПредупреждения = НСтр("ru = 'Подключаемый модуль сохранен'");
	
	Попытка
		СохранитьПодключаемыйМодуль(ПолноеИмяФайла);
	Исключение
		ТекстПредупреждения = НСтр("ru = 'Не удалось сохранить подключаемый модуль'");
	КонецПопытки;
	
	ОсновнаяФорма().ПоказатьПредупреждениеПереопределенная(, ТекстПредупреждения,, "Диадок");
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(BoxId, "Техподдержка", "Скачать ПМ");
	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодключаемыйМодуль(ПолноеИмяФайла)
	
	РасположениеПМ = ТехническиеДанные.Настройки.МестонахождениеПодключаемогоМодуля;
	
	Если РасположениеПМ = "Диск" Тогда
		ДвоичныеДанныеПМ = Новый ДвоичныеДанные(ТехническиеДанные.Настройки.ПодключаемыйМодульПуть);
	ИначеЕсли РасположениеПМ = "1С" Тогда
		ДвоичныеДанныеПМ = ДвоичныеДанныеПМИзСправочника(ТехническиеДанные.Настройки.ПодключаемыйМодульСсылка);
	КонецЕсли;
	
	ДвоичныеДанныеПМ.Записать(ПолноеИмяФайла);
	
КонецПроцедуры

&НаСервере
Функция ДвоичныеДанныеПМИзСправочника(Знач СсылкаНаПМ)
	
	Ядро = Модуль_ЯдроНаСервере();
	Результат = Ядро.Обработка_ДвоичныеДанныеВнешнейОбработки(СсылкаНаПМ);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СкопироватьТехИнформацию(Команда)
	
	Действие = "Скопировать тех. информацию";
	
	Переменные = Новый Структура;
	Переменные.Вставить("BoxId", BoxId);
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки("Форма технической информации", "Техподдержка", Действие);
	
	Попытка
		
		Успех = ПоместитьТекстВБуферОбмена(ТехническаяИнформация);
		
		Если Успех Тогда
			ТекстПредупреждения = ТекстПредупрежденияОбУспешномКопированииТехническойИнформации();
		Иначе
			ТекстПредупреждения = ТекстПредупрежденияОбОшибкеКопированияТехническойИнформации();
		КонецЕсли;
		
		ОсновнаяФорма().ПоказатьПредупреждениеПереопределенная(, ТекстПредупреждения,, "Диадок");
		
		Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(BoxId, "Техподдержка", "Скопировать тех. информацию");
		
	Исключение
		
		ВидОперации = "Копирование тех. информацию";
		ТекстСообщения = "Не удалось скопировать техническую информацию";
		ТекстОшибки = ТекстПредупрежденияОбОшибкеКопированияТехническойИнформации();
		
		Ядро.Ошибка_Обработать(ВидОперации, ТекстОшибки, , ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПоместитьТекстВБуферОбмена(Текст)
	
	htmlfile = Новый ComОбъект("htmlfile");
	Результат = htmlfile.ParentWIndow.ClipboardData.SetData("Text", Текст);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстПредупрежденияОбУспешномКопированииТехническойИнформации()
	
	Подстроки = Новый Массив;
	Подстроки.Добавить(НСтр("ru = 'Техническая информация скопирована.'; en = 'Техническая информация скопирована.'"));
	Подстроки.Добавить(НСтр("ru = 'Вставьте ее в письмо или чат с помощью клавиш'; en = 'Вставьте ее в письмо или чат с помощью клавиш'"));
	Подстроки.Добавить(НСтр("ru = 'Ctrl + V для отправки в Техподдержку.'; en = 'Ctrl + V для отправки в Техподдержку.'"));
	
	Результат = Модуль_ЯдроНаСервере().СоединитьСтроку(Подстроки, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстПредупрежденияОбОшибкеКопированияТехническойИнформации()
	
	Подстроки = Новый Массив;
	Подстроки.Добавить(НСтр("ru = 'Не удалось скопировать техническую информацию!'; en = 'Не удалось скопировать техническую информацию!'"));
	Подстроки.Добавить(НСтр("ru = 'Скопируйте информацию вручную:'; en = 'Скопируйте информацию вручную:'"));
	Подстроки.Добавить(НСтр("ru = '1. Щёлкните мышкой по окну с тех. информацией.'; en = '1. Щёлкните мышкой по окну с тех. информацией.'"));
	Подстроки.Добавить(НСтр("ru = '2. Нажмите Ctrl+A.'; en = '2. Нажмите Ctrl+A.'"));
	Подстроки.Добавить(НСтр("ru = '3. Нажмите Ctrl+C.'; en = '3. Нажмите Ctrl+C.'"));
	Подстроки.Добавить(НСтр("ru = '4. Отправьте информацию в техподдержку.'; en = '4. Отправьте информацию в техподдержку.'"));
	
	Результат = Модуль_ЯдроНаСервере().СоединитьСтроку(Подстроки, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТехническиеДанные()
	
	Ядро = Модуль_ЯдроНаСервере();
	
	Результат = Ядро.ТехническаяИнформация(BoxId);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СформироватьТехническуюИнформацию()
	
	ОбработкаОбъект = ОбработкаОбъект();
	
	Результат = ОбработкаОбъект.СформироватьТехническуюИнформацию(BoxId);
	
	Возврат Результат;
	
КонецФункции
