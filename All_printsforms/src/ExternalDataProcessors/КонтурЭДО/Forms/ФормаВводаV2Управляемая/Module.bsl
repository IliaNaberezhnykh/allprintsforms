&НаСервере
Перем мОбработкаОбъект;

//{ Сервисные методы

&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект = Неопределено Тогда
		мОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	ИнициализироватьФорму(Параметры);
	УстановитьОбязательныеСвойстваЭлементов();
	
КонецПроцедуры


&НаСервере
Процедура ИнициализироватьФорму(ПараметрыФормы) Экспорт
	
	ИнициализироватьПараметрыФормы(ПараметрыФормы);
	ОбработатьРежимФормы();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыФормы(ПараметрыФормы)
	
	ПараметрыФормы.Свойство("Режим", Режим);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательныеСвойстваЭлементов()
	
	СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
	ЗаполнитьЗначенияСвойств(Элементы.ТекстСообщения, СвойствоАвтоМаксимальнаяШирина);
	ЗаполнитьЗначенияСвойств(Элементы.ПолеВвода, СвойствоАвтоМаксимальнаяШирина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокКнопкиВыполнить(ТекстКнопки)
	
	Элементы.Выполнить.Заголовок = ТекстКнопки;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРежимФормы()
	
	Если Режим = РежимАннулироватьВложение() Тогда
		Заголовок = "Аннулирование приглашений с вложениями";
		УстановитьЗаголовокКнопкиВыполнить("Аннулировать");
		ЗаголовокСообщения = НСтр(
				"ru='По каждому документу будет подписано соответствующее уведомление или соглашение об аннулировании.'");
		ВозможноПустоеЗначение = Ложь;
		Элементы.ПолеВвода.АвтоОтметкаНезаполненного = НЕ ВозможноПустоеЗначение;
		Элементы.ТекстСообщения.Заголовок = ЗаголовокСообщения;
	ИначеЕсли Режим = РежимЗаблокироватьКонтрагентов() Тогда
		Заголовок = "Блокировка контрагентов";
		УстановитьЗаголовокКнопкиВыполнить("Заблокировать");
		ЗаголовокСообщения = НСтр("ru='После блокировки обмен документами с организацией будет остановлен.'");
		ВозможноПустоеЗначение = Истина;
		Элементы.ПолеВвода.АвтоОтметкаНезаполненного = НЕ ВозможноПустоеЗначение;
		Элементы.ТекстСообщения.Заголовок = ЗаголовокСообщения;
	ИначеЕсли Режим = РежимОтказатьВПриглашении() Тогда
		Заголовок = "Отказ в приглашении";
		УстановитьЗаголовокКнопкиВыполнить("Отказать");
		ЗаголовокСообщения = НСтр(
				"ru='Организация будет добавлена в список ""Заблокированные"", и вы не сможете обмениваться документами.'");
		ВозможноПустоеЗначение = Истина;
		Элементы.ПолеВвода.АвтоОтметкаНезаполненного = НЕ ВозможноПустоеЗначение;
		Элементы.ТекстСообщения.Заголовок = ЗаголовокСообщения;
	Иначе
		
		Модуль_Ядро = Модуль_ЯдроНаСервере();
		ШаблонИсключения = "Неожиданное значение параметра ""Режим"" (%1)";
		ТекстИсключения = Модуль_Ядро.Общее_ПодставитьПараметрыВСтроку(ШаблонИсключения, Режим);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РежимЗаблокироватьКонтрагентов()
	
	Возврат "ЗаблокироватьКонтрагентов";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимОтказатьВПриглашении()
	
	Возврат "ОтказатьВПриглашении";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимАннулироватьВложение()
	
	Возврат "АннулироватьВложения";
	
КонецФункции

&НаКлиенте
Процедура КнопкаВыполнить(Команда)
	
	Если НЕ ВозможноПустоеЗначение И НЕ ЗначениеЗаполнено(ПолеВвода) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗакрыть(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСРезультатом(Знач Команда)
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Комментарий", ПолеВвода);
	СтруктураОтвета.Вставить("Команда", Команда.Имя);
	
	Закрыть(СтруктураОтвета);
	
КонецПроцедуры
