
&НаСервере
Перем мОбработкаОбъект;

//{ Сервисные методы
	
&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект = Неопределено Тогда
		мОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

//{ Сервисные методы

&НаСервере
Процедура ИнициализироватьФорму(ПараметрыФормы)
	
	ПредставлениеПодписанта = ПараметрыФормы.ПредставлениеПодписанта;
	КонтрагентПоддерживаетМЧД = ПараметрыФормы.КонтрагентПоддерживаетМЧД;
	TraceId = Модуль_ЯдроНаСервере().TraceId();
	
	Если НЕ ЗначениеЗаполнено(ПредставлениеПодписанта) Тогда
		
		Элементы.ДекорацияПодписантЗаголовок.Видимость	= Ложь;
		Элементы.ГруппаПодписант.Видимость				= Ложь;
		
	КонецЕсли; 

	ПараметрыФормы.Свойство("АдресЯщика"				, АдресЯщика);
	ПараметрыФормы.Свойство("ГрупповоеДействие"			, ГрупповоеДействие);
	ПараметрыФормы.Свойство("Действие"					, Действие);
	
	НастроитьМЧДНаФорме();
	
КонецПроцедуры

&НаКлиенте
Функция НазваниеФормы()
	
	Результат = "ФормаОтветаПоДокументу";
	
	Возврат Результат;
	
КонецФункции

//} Сервисные методы

//{ обработчики событий формы и элементов

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	ИнициализироватьФорму(Параметры);
	
	УстановитьСвойстваФормыТакси();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Метрика_ПриОткрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Метрика_ПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьВПодписи(Команда)
	
	КатегорияМетрики	= ОсновнаяФорма().Метрика_НазваниеКатегории().ПодписаниеВходящегоДокумента;
	ДействиеМетрики		= "Отказать в подписи";
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки("Отказ в подписи", КатегорияМетрики, ДействиеМетрики, , TraceId);
	
	Оповещение				 = ОсновнаяФорма().НовыйОписаниеОповещения("ОтказатьВПодписиПослеПроверкиМЧД", ЭтаФорма);

	Если НЕ ГрупповоеДействие 
			И ТребуетсяМЧД 
			И КонтрагентПоддерживаетМЧД 
			Тогда
		КонтрактВыбраннойМЧД	 = КонтекстМЧД.СписокМЧД.Получить(ВыбраннаяМЧД);
		ДействияЭДО				 = ОсновнаяФорма().ДействияЭДО();
		ПараметрыДляПроверкиМЧД	 = ОсновнаяФорма().ПараметрыДляПроверкиМЧД(Оповещение, АдресЯщика, КонтрактВыбраннойМЧД, ДействияЭДО.ОтказатьВПодписи);
		ОсновнаяФорма().ПроверитьМЧДИВыполнитьОповещение(ПараметрыДляПроверкиМЧД);
	Иначе
		РезультатВыбораМЧД = ОсновнаяФорма().РезультатВыбораМЧД(Истина, Неопределено);
		ОсновнаяФорма().ВыполнитьОбработкуОповещенияПереопределенная(Оповещение, РезультатВыбораМЧД);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьВПодписиПослеПроверкиМЧД(Результат, ДополнительныеПараметры) Экспорт
	
	РазрешитьДействие = Результат.РазрешитьДействие;
	
	Если РазрешитьДействие = Истина Тогда
		
		РезультатЗакрытия = Новый Структура;
		РезультатЗакрытия.Вставить("Comment"					, Комментарий); 
		РезультатЗакрытия.Вставить("ДополнительныеПараметры"	, Новый Структура);
		
		РезультатЗакрытия.ДополнительныеПараметры.Вставить("КонтрактМЧД",	Результат.КонтрактМЧД);
		
		Закрыть(РезультатЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьМЧД(Команда)
	
	Метрика_НастроитьМЧД();
	ОсновнаяФорма().ОткрытьФормуСпискаДоверенностей(АдресЯщика);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяМЧДПриИзменении(Элемент)
	
	Метрика_ВыбраннаяМЧДПриИзменении(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяМЧДОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ВыбраннаяМЧД) Тогда
		КонтрактМЧД = КонтекстМЧД.СписокМЧД.Получить(ВыбраннаяМЧД);
		ОсновнаяФорма().МЧД_ПоказатьСведенияОДоверенности(КонтрактМЧД, ЭтаФорма);
		Метрика_ПоказатьСведенияОДоверенности();
	КонецЕсли;
	
КонецПроцедуры

//} обработчики событий формы и элементов

&НаСервере
Процедура НастроитьМЧДНаФорме()
	
	Если ГрупповоеДействие ИЛИ КонтрагентПоддерживаетМЧД Тогда
		Элементы.ГруппаКонтрагентНеПоддерживаетМЧД.Видимость = Ложь;
		ЗаполнитьСписокДоступныхМЧД();
	Иначе
		Элементы.ГруппаМЧД.Видимость = Ложь;
		Элементы.ГруппаКонтрагентНеПоддерживаетМЧД.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхМЧД()
	
	ТребуетсяМЧД = Модуль_ЯдроНаСервере().МЧД_ТребуетсяДоверенность(АдресЯщика);
	
	Если НЕ ГрупповоеДействие И ТребуетсяМЧД Тогда
		
		КонтекстМЧД			 = Модуль_ЯдроНаСервере().МЧД_ДанныеПоИспользованиюДоверенностей(АдресЯщика);
		СписокВыбораМЧД		 = Элементы.ВыбраннаяМЧД.СписокВыбора;
		
		Для Каждого КлючЗначение Из КонтекстМЧД.СписокМЧД Цикл
			ДанныеМЧД = КлючЗначение.Значение;
			СписокВыбораМЧД.Добавить(ДанныеМЧД.Идентификатор, ДанныеМЧД.ПредставлениеМЧД);
		КонецЦикла;
		
		ВыбраннаяМЧД = КонтекстМЧД.МЧД;
		
	Иначе
		УстановитьВидимостьГруппыМЧД(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьГруппыМЧД(ЗначениеВидимости)
	Элементы.ГруппаМЧД.Видимость	 = ЗначениеВидимости;
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваФормыТакси()
	
	СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
	ЗаполнитьЗначенияСвойств(Элементы.Комментарий, СвойствоАвтоМаксимальнаяШирина);
	
КонецПроцедуры

//{	Метрики

&НаКлиенте
Функция Метрика_ОбщиеДополнительныеПараметры()
	
	Результат = Новый Соответствие;
	
	Если ЗначениеЗаполнено(ВыбраннаяМЧД) Тогда
	
		КонтрактВыбраннойМЧД		 = КонтекстМЧД.СписокМЧД.Получить(ВыбраннаяМЧД);
		ПараметрыДляПроверкиМЧД		 = ОсновнаяФорма().ПараметрыДляПроверкиМЧД(Неопределено, АдресЯщика, КонтрактВыбраннойМЧД, Действие);
		
		Результат = ОсновнаяФорма().Метрика_ДополнительныеПеременныеМЧД(ПараметрыДляПроверкиМЧД);
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Процедура Метрика_ДобавитьПоведение_НажатиеКнопки(
	НазваниеФормы,
	НазваниеКатегории,
	НазваниеКнопки,
	НазваниеМетки = "",
	ПредставлениеМетрики = "",
	TraceId = "")
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, НазваниеКатегории, НазваниеКнопки, НазваниеМетки, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_ДобавитьСтатистику_ДляОрганизации(
	ИдентификаторЯщика,
	КатегорияМетрики,
	ДействиеМетрики,
	НазваниеМетки = Неопределено,
	ДопПеременные = Неопределено,
	ПредставлениеМетрики = "",
	TraceId = "")
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(ИдентификаторЯщика, КатегорияМетрики, ДействиеМетрики, НазваниеМетки, ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_ПриОткрытии()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДействиеВоВходящих;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().ОткрытиеФормы;
	НазваниеФормы			= НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	ПредставлениеМетрики	= "Форма ответа по документу";
	
	ДопПеременные		= Метрика_ОбщиеДополнительныеПараметры();
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_ДействиеСФормой(НазваниеФормы, КатегорияМетрики, Истина, ЛейблМетрики, ПредставлениеМетрики, TraceId);
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(АдресЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_ПриЗакрытии()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДействиеВоВходящих;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().ЗакрытиеФормы;
	НазваниеФормы			= НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	ПредставлениеМетрики	= "Форма ответа по документу";
	ДопПеременные			= Метрика_ОбщиеДополнительныеПараметры();
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_ДействиеСФормой(НазваниеФормы, КатегорияМетрики, Ложь, ЛейблМетрики, ПредставлениеМетрики, TraceId);
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(АдресЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_НастроитьМЧД()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДействиеВоВходящих;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НастроитьДоверенности;
	НазваниеФормы			= НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	ПредставлениеМетрики	= "Форма ответа по документу";
	ДопПеременные			= Метрика_ОбщиеДополнительныеПараметры();
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, КатегорияМетрики, ДействиеМетрики, ЛейблМетрики, ПредставлениеМетрики, TraceId);
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(АдресЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_ВыбраннаяМЧДПриИзменении()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДействиеВоВходящих;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().РедактироватьПоле;
	НазваниеФормы			= НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	ПредставлениеМетрики	= "Форма ответа по документу";
	ДопПеременные			= Метрика_ОбщиеДополнительныеПараметры();
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, КатегорияМетрики, ДействиеМетрики, ЛейблМетрики, ПредставлениеМетрики, TraceId);
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(АдресЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, ПредставлениеМетрики, TraceId);

КонецПроцедуры

&НаКлиенте
Процедура Метрика_ПоказатьСведенияОДоверенности()
	
	КатегорияМетрики = Метрика_НазванияКатегорий().ВыборДоверенности;
	ДействиеМетрики	= Метрика_НазванияДействий().ПосмотретьДоверенность;
	НазваниеФормы = НазваниеФормы();
	ПредставлениеМетрики = ПредставлениеНазванияФормы();
	
	ДопПеременные = Новый Соответствие;
	ДопПеременные.Вставить("Рег.номер МЧД", ВыбраннаяМЧД);
	
	Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, КатегорияМетрики, ДействиеМетрики, , ПредставлениеМетрики, TraceId);
	Метрика_ДобавитьСтатистику_ДляОрганизации(АдресЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Функция Метрика_НазванияДействий()
	
	ОсновнаяФорма = ОсновнаяФорма();
	Результат = ОсновнаяФорма.Метрика_НазваниеДействий();
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Метрика_НазванияКатегорий()
	
	ОсновнаяФорма = ОсновнаяФорма();
	Результат = ОсновнаяФорма.Метрика_НазваниеКатегории();
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПредставлениеНазванияФормы()

	Возврат "Форма ответа по документу";

КонецФункции 

//}	Метрики

