
&НаСервере
Перем мОбработкаОбъект;

//{ Сервисные методы

&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект = Неопределено Тогда
		мОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

//} Сервисные методы


//{ ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	БиблиотекаКартинокЯдра = Модуль_ЯдроНаСервере().БиблиотекаКартинок();
	КартинкаВниманиеПрозрачная = БиблиотекаКартинокЯдра.КартинкаВниманиеПрозрачная;
	
	АдресКартинкиВнимание = ПоместитьВоВременноеХранилище(КартинкаВниманиеПрозрачная, УникальныйИдентификатор);
	
КонецПроцедуры

//} ОбработчикиСобытийФормы


//{ ОбработчикиКомандФормы

&НаКлиенте
Процедура СопоставитьКонтрагента(Команда)
	
	ДействиеМетрики = Метрики_ДействиеНажатиеСопоставитьКонтрагента();
	
	Метрики_ДобавитьПоведение(ДействиеМетрики);
	Метрики_ДобавитьСтатистику(ДействиеМетрики);
	
	Закрыть(КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДругогоКонтрагента(Команда)
	
	ДействиеМетрики = Метрики_ДействиеНажатиеВыбратьДругогоКонтрагента();
	
	Метрики_ДобавитьПоведение(ДействиеМетрики);
	Метрики_ДобавитьСтатистику(ДействиеМетрики);
	
	Закрыть(КодВозвратаДиалога.Прервать);
	
КонецПроцедуры

//} ОбработчикиКомандФормы


//{ Метрики

&НаКлиенте
Процедура Метрики_ДобавитьПоведение(ДействиеМетрики)
	
	НазваниеФормы = Метрики_НазваниеФормы();
	КатегорияМетрики = Метрики_КатегорияКонтрагентНеСопоставлен();
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки(
		НазваниеФормы,
		КатегорияМетрики,
		ДействиеМетрики
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ДобавитьСтатистику(ДействиеМетрики)
	
	КатегорияМетрики = Метрики_КатегорияКонтрагентНеСопоставлен();
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьСтатистику_ПоКонтексту(
		КатегорияМетрики,
		ДействиеМетрики
	);
	
КонецПроцедуры

&НаКлиенте
Функция Метрики_НазваниеФормы()
	Возврат "Форма контрагент не сопоставлен";
КонецФункции

&НаКлиенте
Функция Метрики_КатегорияКонтрагентНеСопоставлен()
	
	Ядро = Модуль_ЯдроНаКлиенте();
	Категории = Ядро.Метрика_НазваниеКатегории();
	Результат = Категории.КонтрагентНеСопоставлен;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Метрики_ДействиеНажатиеВыбратьДругогоКонтрагента()
	Возврат "ВыбратьДругогоКонтрагента";
КонецФункции

&НаКлиенте
Функция Метрики_ДействиеНажатиеСопоставитьКонтрагента()
	Возврат "СопоставитьКонтрагента";
КонецФункции

//} Метрики
