&НаСервере
Перем мОбработкаОбъект;

//{ Сервисные методы
	
&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект = Неопределено Тогда
		мОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьФорму(ПараметрыФормы) Экспорт 
	
	Заголовок				 = ПараметрыФормы.Заголовок;
	ВозможноПустоеЗначение	 = ПараметрыФормы.ВозможноПустоеЗначение;
	ТекстКнопкиВыполнить	 = ПараметрыФормы.ТекстКнопкиВыполнить;
	КонтрагентПоддерживаетМЧД = ПараметрыФормы.КонтрагентПоддерживаетМЧД;
	TraceId					 = Модуль_ЯдроНаСервере().TraceId();
	
	ПараметрыФормы.Свойство("Действие"				, Действие);
	ПараметрыФормы.Свойство("ГрупповоеДействие"		, ГрупповоеДействие);
	ПараметрыФормы.Свойство("ИдентификаторЯщика"	, ИдентификаторЯщика);
	ПараметрыФормы.Свойство("КатегорияМетрикиДокумента"	, КатегорияМетрикиДокумента);
	
	НастроитьЭлементыПоПараметрамФормы(ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыПоПараметрамФормы(ПараметрыФормы)
	
	Элементы.ТекстСообщения.Заголовок			 = ПараметрыФормы.ТекстСообщения;
	Элементы.ПолеВвода.РежимПароля				 = ПараметрыФормы.РежимПароля;
	Элементы.ПолеВвода.АвтоОтметкаНезаполненного = Не ПараметрыФормы.ВозможноПустоеЗначение;
	Элементы.Выполнить.Заголовок				 = ТекстКнопкиВыполнить;
	
	Если ПараметрыФормы.Свойство("ДлинаПоляВвода") И ЗначениеЗаполнено(ПараметрыФормы.ДлинаПоляВвода) Тогда
		ПараметрыСтроки = Новый КвалификаторыСтроки(ПараметрыФормы.ДлинаПоляВвода); 
		Элементы.ПолеВвода.ОграничениеТипа = Новый ОписаниеТипов("Строка", , ПараметрыСтроки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнить(Команда)
	
	КатегорияМетрики	= НазваниеКатегорииМетрики();
	ДействиеМетрики		= НазваниеДействияМетрики();
	
	Если ЗначениеЗаполнено(КатегорияМетрики) Тогда
		Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки("Аннулирование", КатегорияМетрики, ДействиеМетрики, , , TraceId);
		Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ПоКонтексту(КатегорияМетрики, ДействиеМетрики);
	КонецЕсли;	

	Если Не ВозможноПустоеЗначение
		И Не ЗначениеЗаполнено(ПолеВвода) Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = ОсновнаяФорма().НовыйОписаниеОповещения("ПродолжитьВыполнение", ЭтаФорма, ПолеВвода);
	
	Если НЕ ГрупповоеДействие И ОсновнаяФорма().ТребуетсяМЧД(ИдентификаторЯщика) Тогда
		
		ПараметрыОткрытияФормы = ОсновнаяФорма().ПараметрыФормыВыбораМЧД(
									Заголовок,
									ТекстКнопкиВыполнить,
									ИдентификаторЯщика,
									Действие,
									КатегорияМетрикиДокумента,
									КонтрагентПоддерживаетМЧД
		);
							
		ОсновнаяФорма().ОткрытьФормуВыбораДоверенности(Оповещение, ПараметрыОткрытияФормы);
		
	Иначе
		
		РезультатВыбораМЧД = ОсновнаяФорма().РезультатВыбораМЧД(Истина, Неопределено);
		
		ОсновнаяФорма().ВыполнитьОбработкуОповещенияПереопределенная(Оповещение, РезультатВыбораМЧД);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВыполнение(Результат, ДополнительныеПараметры) Экспорт
	
	РазрешитьДействие = ОсновнаяФорма().СвойствоСтруктуры(Результат, "РазрешитьДействие");
	
	Если РазрешитьДействие = Истина Тогда
		
		Результат.Вставить("Комментарий", ПолеВвода);
		Закрыть(Результат);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НазваниеКатегорииМетрики()
	
	Результат = "";
	
	Если Параметры.Действие = "Аннулировать"
		ИЛИ Параметры.Действие = "ОтказатьВАннулировании" Тогда
		
		Результат = "Аннулирование";
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция НазваниеДействияМетрики()
	
	Результат = "";
	
	Если Параметры.Действие = "Аннулировать" Тогда	
		Результат = "Аннулировать";
	ИначеЕсли Параметры.Действие = "ОтказатьВАннулировании" Тогда	
		Результат = "Отказать в аннулировании";
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура КнопкаЗакрыть(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	ИнициализироватьФорму(Параметры);
	УстановитьОбязательныеСвойстваЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательныеСвойстваЭлементов()
  
  // Устанавливаем свойства программно, на случай если обработку сохранят платформой младше 8.3.7
  
  СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
  ЗаполнитьЗначенияСвойств(Элементы.ТекстСообщения, СвойствоАвтоМаксимальнаяШирина);
  ЗаполнитьЗначенияСвойств(Элементы.ПолеВвода, СвойствоАвтоМаксимальнаяШирина);
  
КонецПроцедуры


