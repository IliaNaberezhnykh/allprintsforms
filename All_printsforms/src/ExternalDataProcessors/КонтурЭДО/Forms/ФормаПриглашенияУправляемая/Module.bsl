&НаКлиенте
Перем ИмяВременногоФайла;

&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Функция ОбработкаОбъект()
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки = ПолучитьИзВременногоХранилища(Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
		Если НЕ СтруктураОбработки = Неопределено Тогда
			ОбработкаОбъект = СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			Попытка
				ПоместитьВоВременноеХранилище(
					Новый Структура("ОбработкаОбъект", ОбработкаОбъект),
					Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект
				);
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ВладелецФормы()
	
	Результат = ЭтаФорма.ВладелецФормы;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	Параметры.Свойство("Приглашение", Приглашение);
	Параметры.Свойство("ТекущийРежим", ТекущийРежим);
	Параметры.Свойство("ДанныеОрганизации", ДанныеОрганизации);
	
	ТекстСообщения = Приглашение.Комментарий;
	ТекстСообщения = Json_2_Строка(ТекстСообщения);
	ИнициализироватьИдентификаторТрассировки();
	
	УстановитьОтображениеТекущегоРежима();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьИдентификаторТрассировки()
	
	Метрики_НаименованиеФормы = Метрики_НаименованиеФормы();
	СтрокаИдентификатора = Строка(Новый УникальныйИдентификатор());
	
	ИдентификаторТрассировки = Метрики_НаименованиеФормы + "_" + СтрокаИдентификатора;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеТекущегоРежима()
	
	Модуль_Ядро = Модуль_ЯдроНаСервере();
	
	Элементы.Принять.Видимость = Ложь;
	Элементы.Отозвать.Видимость = Ложь;
	Элементы.Отказать.Видимость = Ложь;
	Элементы.Отменить.Видимость = Ложь;
	Элементы.Отправить.Видимость = Ложь;
	Элементы.ЗапрашиватьОтветнуюПодпись.Видимость = Ложь;
	Элементы.ТекстСообщения.ТолькоПросмотр = Истина;
	
	ИмяФайла = Приглашение.Файл.ИмяФайла;
	
	НаименованиеКонтрагента = "";
	Если ЗначениеЗаполнено(Приглашение.Контрагент) Тогда
		НаименованиеКонтрагента = Приглашение.Контрагент.Наименование;
	КонецЕсли;
	
	ШаблонЗаголовка = "%1 (%2 приглашение)";
	Заголовок = Модуль_Ядро.Общее_ПодставитьПараметрыВСтроку(
			ШаблонЗаголовка,
			НаименованиеКонтрагента,
			ТекущийРежим
		);
	
	Если ТекущийРежим = "Исходящее" Тогда
		
		Элементы.Отозвать.Видимость = Истина;
		Элементы.Отозвать.КнопкаПоУмолчанию = Истина;
		Элементы.Отменить.Видимость = Истина;
		
	ИначеЕсли ТекущийРежим = "Входящее" Тогда
		
		Элементы.Принять.Видимость = Истина;
		Элементы.Принять.КнопкаПоУмолчанию = Истина;
		Элементы.Отказать.Видимость = Истина;
		
	ИначеЕсли ТекущийРежим = "Новое" Тогда
		
		ИмяФайла = "Прикрепите документ";
		Заголовок = "Приглашение контрагента";
		Элементы.Отправить.Видимость = Истина;
		Элементы.Отправить.КнопкаПоУмолчанию = Истина;
		Элементы.Отменить.Видимость = Истина;
		Элементы.ЗапрашиватьОтветнуюПодпись.Видимость = Истина;
		Элементы.ТекстСообщения.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		Элементы.ПрикрепленныйДокумент.Заголовок = ИмяФайла;
	Иначе
		Элементы.ПрикрепленныйДокумент.Заголовок = "<нет файла>";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция Json_2_Строка(JSON)
	
	Модуль_Ядро = Модуль_ЯдроНаСервере();
	
	Результат = Модуль_Ядро.Json_2_Строка(JSON);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НадписьПрикрепленныйДокументНажатие(Элемент)
	
	ИмяФайла = Элементы.ПрикрепленныйДокумент.Заголовок;
	
	Если ТекущийРежим = "Новое" Тогда
		
		Метрики_ЗаписатьПоведение_ПрикрепитьДокумент();
		
		Режим = РежимДиалогаВыбораФайла.Открытие;
		Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите документ'");
		
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			
			ИмяФайла = ДиалогОткрытияФайла.ПолноеИмяФайла;
			КраткоеИмяФайла = СтрЗаменить(ИмяФайла, ДиалогОткрытияФайла.Каталог, "");
			Приглашение.Файл.ИмяФайла = КраткоеИмяФайла;
			Приглашение.Файл.Данные = Новый ДвоичныеДанные(ИмяФайла);
			Элементы.ПрикрепленныйДокумент.Заголовок = КраткоеИмяФайла;
			Элементы.ПрикрепленныйДокумент.Подсказка = ИмяФайла;
			
		КонецЕсли;
		
		Метрики_ЗаписатьСтатистику_ПрикрепитьДокумент();
		
	Иначе
		
		Если ИмяФайла <> "<нет файла>" Тогда
			
			Метрики_ЗаписатьПоведение_ОткрытьФайлВложение();
			
			НачалоРасширения = Найти(ИмяФайла, ".");
			РасширениеФайла = Прав(ИмяФайла, СтрДлина(ИмяФайла) - НачалоРасширения);
			
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
			ДвоичныеДанные = Приглашение.Файл.Данные;
			ДвоичныеДанные.Записать(ИмяВременногоФайла);
			
			ЗапуститьПриложение(ИмяВременногоФайла);
			
			Метрики_ЗаписатьСтатистику_ОткрытьФайлВложение();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапрашиватьОтветнуюПодписьПриИзменении(Элемент)
	
	Метрики_ЗаписатьПоведение_ЗапроситьОтветнуюПодпись();
	
	Приглашение.Файл.ТребуетсяПодпись = ЗапрашиватьОтветнуюПодпись;
	
	Метрики_ЗаписатьСтатистику_ЗапроситьОтветнуюПодпись();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстСообщенияПриИзменении(Элемент)
	
	Метрики_ЗаписатьПоведение_КомментарийКПриглшаению();
	
	Приглашение.Комментарий = ТекстСообщения;
	
	Метрики_ЗаписатьСтатистику_КомментарийКПриглшаению();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ЗначениеЗаполнено(ИмяВременногоФайла) Тогда
		УдалитьФайлы(ИмяВременногоФайла);
		ИмяВременногоФайла = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	
	Метрики_ЗаписатьПоведение_ПринятьПриглашение();
	Метрики_ЗаписатьСтатистику_ПринятьПриглашение();
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Отозвать(Команда)
	
	Метрики_ЗаписатьПоведение_ОтозватьСвоеПриглашение();
	Метрики_ЗаписатьСтатистику_ОтозватьСвоеПриглашение();
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Метрики_ЗаписатьПоведение_Отменить();
	Метрики_ЗаписатьСтатистику_Отменить();
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Отказать(Команда)
	
	Метрики_ЗаписатьПоведение_ОтказатьВПриглашении();
	Метрики_ЗаписатьСтатистику_ОтказатьВПриглашении();
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Метрики_ЗаписатьПоведение_ОтправитьПриглашение();
	Метрики_ЗаписатьСтатистику_ОтправитьПриглашение();
	
	ЗакрытьСРезультатом(Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСРезультатом(Знач Команда)
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Приглашение", Приглашение);
	СтруктураОтвета.Вставить("Команда", Команда.Имя);
	
	Закрыть(СтруктураОтвета);
	
КонецПроцедуры


//{ Метрики

&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ПринятьПриглашение()
	
	НазваниеКнопки = Метрики_ДействиеПринятьПриглашение();
	
	Метрика_НажатиеКнопкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ПринятьПриглашение()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеПринятьПриглашение();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ОтказатьВПриглашении()
	
	НазваниеКнопки = Метрики_ДействиеОтказатьВПриглашении();
	
	Метрика_НажатиеКнопкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ОтказатьВПриглашении()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеОтказатьВПриглашении();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ОтозватьСвоеПриглашение()
	
	НазваниеКнопки = Метрики_ДействиеОтозватьСвоеПриглашение();
	
	Метрика_НажатиеКнопкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ОтозватьСвоеПриглашение()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеОтозватьСвоеПриглашение();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ОтправитьПриглашение()
	
	НазваниеКнопки = Метрики_ДействиеОтправитьПриглашение();
	
	Метрика_НажатиеКнопкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ОтправитьПриглашение()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеОтправитьПриглашение();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_Отменить()
	
	НазваниеКнопки = Метрики_ДействиеОтменить();
	
	Метрика_НажатиеКнопкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_Отменить()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеОтменить();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ЗапроситьОтветнуюПодпись()
	
	НазваниеКнопки = Метрики_ДействиеЗапроситьОтветнуюПодпись();
	
	Метрика_РедактированиеПоляФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ЗапроситьОтветнуюПодпись()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеЗапроситьОтветнуюПодпись();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ПрикрепитьДокумент()
	
	НазваниеКнопки = Метрики_ДействиеПрикрепитьДокумент();
	
	Метрика_НажатиеСсылкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ПрикрепитьДокумент()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеПрикрепитьДокумент();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_ОткрытьФайлВложение()
	
	НазваниеКнопки = Метрики_ДействиеОткрытьФайлВложение();
	
	Метрика_НажатиеСсылкиФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_ОткрытьФайлВложение()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеОткрытьФайлВложение();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрики_ЗаписатьПоведение_КомментарийКПриглшаению()
	
	НазваниеКнопки = Метрики_ДействиеКомментарийКПриглашению();
	
	Метрика_РедактированиеПоляФормы(НазваниеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ЗаписатьСтатистику_КомментарийКПриглшаению()
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	Действие = Метрики_ДействиеКомментарийКПриглашению();
	Категория = Метрики_КатегорияПриглашения();
	НазваниеФормы = Метрики_НаименованиеФормы();
	
	Модуль_Ядро.Метрика_ДобавитьСтатистику_ДляОрганизации(
		ДанныеОрганизации.ID,
		Категория,
		Действие, , ,
		НазваниеФормы,
		ИдентификаторТрассировки);
	
КонецПроцедуры


&НаКлиенте
Процедура Метрика_НажатиеКнопкиФормы(НазваниеКнопки)
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	НазваниеФормы = Метрики_НаименованиеФормы();
	НазваниеКатегории = Метрики_КатегорияПриглашения();
	
	Модуль_Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки(
		НазваниеФормы,
		НазваниеКатегории,
		НазваниеКнопки, , ,
		ИдентификаторТрассировки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_РедактированиеПоляФормы(НазваниеКнопки)
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	НазваниеФормы = Метрики_НаименованиеФормы();
	НазваниеКатегории = Метрики_КатегорияПриглашения();
	МеткиМетрики = Модуль_Ядро.Метрика_НазваниеДействий();
	РедактированиеПоля = МеткиМетрики.РедактированиеПоля;
	
	Модуль_Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки(
		НазваниеФормы,
		НазваниеКатегории,
		НазваниеКнопки,
		РедактированиеПоля, ,
		ИдентификаторТрассировки);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_НажатиеСсылкиФормы(НазваниеКнопки)
	
	Модуль_Ядро = Модуль_ЯдроНаКлиенте();
	НазваниеФормы = Метрики_НаименованиеФормы();
	НазваниеКатегории = Метрики_КатегорияПриглашения();
	МеткиМетрики = Модуль_Ядро.Метрика_НазваниеДействий();
	НажатиеСсылки = МеткиМетрики.НажатиеСсылки;
	
	Модуль_Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки(
		НазваниеФормы,
		НазваниеКатегории,
		НазваниеКнопки,
		НажатиеСсылки, ,
		ИдентификаторТрассировки);
	
КонецПроцедуры

&НаКлиенте
Функция Метрики_КатегорияПриглашения()
	
	Результат = "";
	
	Если ТекущийРежим = "Входящее" Тогда
		Результат = "ВходящееПриглашение";
	ИначеЕсли ТекущийРежим = "Исходящее" Тогда
		Результат = "ИсходящееПриглашение";
	ИначеЕсли ТекущийРежим = "Новое" Тогда
		Результат = "ОтправкаПриглашения";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеПринятьПриглашение()
	
	Возврат "ПринятьПриглашение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеОтказатьВПриглашении()
	
	Возврат "ОтказатьВПриглашении";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеОтозватьСвоеПриглашение()
	
	Возврат "ОтозватьСвоеПриглашение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеОтправитьПриглашение()
	
	Возврат "ОтправитьПриглашение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеОтменить()
	
	Возврат "Отменить";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеЗапроситьОтветнуюПодпись()
	
	Возврат "ЗапроситьОтветнуюПодпись";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеПрикрепитьДокумент()
	
	Возврат "ПрикрепитьДокумент";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеОткрытьФайлВложение()
	
	Возврат "ОткрытьФайлВложение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_ДействиеКомментарийКПриглашению()
	
	Возврат "КомментарийКПриглашению";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Метрики_НаименованиеФормы()
	
	Возврат "ФормаПриглашения";
	
КонецФункции

//} Метрики