
&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

////////////////////////////////////////////////////////////////////////////////
// СЕРВИСНЫЕ МЕТОДЫ

&НаСервере
Функция ОбработкаОбъект()

	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки = ПолучитьИзВременногоХранилища(Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
		Если Не СтруктураОбработки = Неопределено Тогда
			ОбработкаОбъект = СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	ИнициализироватьФорму(Параметры);
	
КонецПроцедуры

// Служебный метод для передачи параметров формы.
//
&НаСервере
Процедура ИнициализироватьФорму(ПараметрыФормы) Экспорт
	
	Модуль_Ядро	 = Модуль_ЯдроНаСервере();
	TraceId		 = Модуль_Ядро.TraceId();
	
	ИдентификаторЯщика = ПараметрыФормы.ИдентификаторЯщика;
	
	ИННДоверителя = Модуль_Ядро.КонтекстСеанса_Прочитать(ИдентификаторЯщика, "ИНН", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Метрика_ПриОткрытии();
	
	НастроитьФормуПриОткрытии();
	
	ТекущийРежимФормы = ВозможныеРежимыФормы().ИмпортМЧДПоРегНомеру;
	
	ПереключитьРежимФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПриОткрытии()
	
	СтруктураЗаполнения = Новый Структура("КнопкаОчистки", Истина);
	ЗаполнитьЗначенияСвойств(Элементы.ИмяФайлаДоверенности	, СтруктураЗаполнения);
	ЗаполнитьЗначенияСвойств(Элементы.ИмяФайлаПодписи		, СтруктураЗаполнения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Управление режимами формы

&НаКлиентеНаСервереБезКонтекста
Функция ВозможныеРежимыФормы()
	
	Результат = Новый Структура;
	Результат.Вставить("ОжиданиеДобавленияМЧД"	, "ОжиданиеДобавленияМЧД");
	Результат.Вставить("УспешноеДобавлениеМЧД"	, "УспешноеДобавлениеМЧД");
	Результат.Вставить("ОшибкаДобавленияМЧД"	, "ОшибкаДобавленияМЧД");
	Результат.Вставить("ИмпортМЧДПоФайлу"		, "ИмпортМЧДПоФайлу");
	Результат.Вставить("ИмпортМЧДПоРегНомеру"	, "ИмпортМЧДПоРегНомеру");
	
	Возврат Результат;
	
КонецФункции 

// Видимость элементов и страниц формы в зависимости от ревизита ТекущийРежимФормы
//
// Параметры:
//  СбрасыватьСоединение - Булево
//  *Истина	 - очистить текущие соединения и список организаций
//  *Ложь	 - не изменять текущие соединения и список организаций
// 
&НаКлиенте
Процедура ПереключитьРежимФормы()

	ВозможныеРежимыФормы = ВозможныеРежимыФормы();
	
	Если ТекущийРежимФормы = ВозможныеРежимыФормы.ИмпортМЧДПоФайлу
		ИЛИ ТекущийРежимФормы = ВозможныеРежимыФормы.ИмпортМЧДПоРегНомеру Тогда
		
		НастроитьФормуРежимИмпортМЧД();
		
	ИначеЕсли ТекущийРежимФормы = ВозможныеРежимыФормы.ОжиданиеДобавленияМЧД Тогда
		
		НастроитьФормуОжиданиеДобавленияМЧД();
		
	ИначеЕсли ТекущийРежимФормы = ВозможныеРежимыФормы.УспешноеДобавлениеМЧД Тогда
		
		НастроитьФормуУспешноеДобавлениеМЧД();
		
	ИначеЕсли ТекущийРежимФормы = ВозможныеРежимыФормы.ОшибкаДобавленияМЧД Тогда
		
		НастроитьФормуОшибкаДобавленияМЧД();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРежимИмпортаМЧД()
	
	ВозможныеРежимыФормы		 = ВозможныеРежимыФормы();
	ТекущийРежимИмпортаМЧД		 = ТекущийРежимИмпортаМЧД(); 
	
	Если ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоРегНомеру Тогда
		Элементы.СтраницыВариантыИмпортаМЧД.ТекущаяСтраница = Элементы.СтраницаВариантИмпортаМЧД_ПоРегНомеру;
	ИначеЕсли ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоФайлу Тогда
		Элементы.СтраницыВариантыИмпортаМЧД.ТекущаяСтраница = Элементы.СтраницаВариантИмпортаМЧД_ЗагрузитьФайл;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТекущийРежимИмпортаМЧД()
	
	ВозможныеРежимыФормы = ВозможныеРежимыФормы();
	
	Если РежимИмпортаМЧД = 0 Тогда
		Результат = ВозможныеРежимыФормы.ИмпортМЧДПоРегНомеру;
	ИначеЕсли РежимИмпортаМЧД = 1 Тогда
		Результат = ВозможныеРежимыФормы.ИмпортМЧДПоФайлу;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Процедура НастроитьФормуРежимИмпортМЧД()
	
	Элементы.СтраницыРежимыФормы.ТекущаяСтраница = Элементы.СтраницаИмпортМЧД;
	
	ПереключитьРежимИмпортаМЧД();
	
	Элементы.КомандаДобавить.Доступность = Истина;
	Элементы.КомандаДобавить.КнопкаПоУмолчанию = Истина;
	Элементы.КомандаОтменить.Доступность = Истина;
	Элементы.КомандаЗакрыть.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуОжиданиеДобавленияМЧД()
	
	Элементы.СтраницыРежимыФормы.ТекущаяСтраница = Элементы.СтраницаОжиданиеДобавленияМЧД;
	
	Элементы.КомандаДобавить.Доступность = Ложь;
	Элементы.КомандаДобавить.КнопкаПоУмолчанию = Ложь;
	Элементы.КомандаОтменить.Доступность = Ложь;
	Элементы.КомандаЗакрыть.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуУспешноеДобавлениеМЧД()
	
	Элементы.СтраницыРежимыФормы.ТекущаяСтраница = Элементы.СтраницаУспешноеДобавлениеМЧД;
	
	Элементы.КомандаДобавить.Видимость = Ложь;
	Элементы.КомандаДобавить.КнопкаПоУмолчанию = Ложь;
	Элементы.КомандаОтменить.Видимость = Ложь;
	Элементы.КомандаЗакрыть.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуОшибкаДобавленияМЧД()
	
	Элементы.СтраницыРежимыФормы.ТекущаяСтраница = Элементы.СтраницаОшибкаДобавленияМЧД;
	
	Элементы.КомандаДобавить.Видимость = Ложь;
	Элементы.КомандаДобавить.КнопкаПоУмолчанию = Ложь;
	Элементы.КомандаОтменить.Видимость = Ложь;
	Элементы.КомандаЗакрыть.Видимость = Истина;
	
	ПоказыватьРазделПодробнее = РасшифровкаОшибкиПодробнее <> "";
	Элементы.ГруппаОшибкаДобавленияМЧДПодробнее.Видимость = ПоказыватьРазделПодробнее;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИмяФайлаДоверенностиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = ОсновнаяФорма().НовыйОписаниеОповещения("ИмяФайлаДоверенностиОкончаниеВыбора", ЭтаФорма);
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Фильтр", "Файл доверенности (*.xml)|*.xml");
	ПараметрыВыбора.Вставить("Заголовок", "Выберите файл доверенности");
	ПараметрыВыбора.Вставить("МножественныйВыбор", Ложь);
	
	ОсновнаяФорма().ПоказатьДиалогВыбораФайла(ОписаниеОповещения, Режим, ПараметрыВыбора);
	
КонецПроцедуры 

&НаКлиенте
Процедура ИмяФайлаДоверенностиОкончаниеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаДоверенности = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПодписиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = ОсновнаяФорма().НовыйОписаниеОповещения("ИмяФайлаПодписиОкончаниеВыбора", ЭтаФорма);
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Фильтр", "Файл подписи (*.sig; *.sgn)|*.sig; *.sgn");
	ПараметрыВыбора.Вставить("Заголовок", "Выберите файл подписи");
	ПараметрыВыбора.Вставить("МножественныйВыбор", Ложь);
	
	ОсновнаяФорма().ПоказатьДиалогВыбораФайла(ОписаниеОповещения, Режим, ПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПодписиОкончаниеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаПодписи = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ИННДоверителяПриИзменении(Элемент)
	
	Если СтрДлина(СокрЛП(ИННДоверителя)) < 10 Тогда
		
		ОшибкиВалидации = Новый Массив;
		ОшибкиВалидации.Добавить("ИНН не может быть меньше 10 символов");
		
		СообщитьОшибкиВалидации(ОшибкиВалидации);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимИмпортаМЧДПриИзменении(Элемент)

	Метрика_РежимИмпортаМЧДПриИзменении();
	
	ПереключитьРежимИмпортаМЧД();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура КомандаДобавить(Команда)
	
	Метрика_КомандаДобавитьНажатие();
	
	ВалидацияПройдена = ВалидацияПередДобавлением();
	Если ВалидацияПройдена Тогда
		
		ТекущийРежимФормы = ВозможныеРежимыФормы().ОжиданиеДобавленияМЧД;
		ПереключитьРежимФормы();
		
		ПодключитьОбработчикОжидания("Обработчик_ЗарегистрироватьНовуюДоверенность", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация_ПодробнееНажатие(Элемент)
	
	Элементы.РасшифровкаОшибкиПодробнее.Видимость = НЕ Элементы.РасшифровкаОшибкиПодробнее.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменить(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Регистрация МЧД

&НаКлиенте
Функция ВалидацияПередДобавлением()
	
	ВозможныеРежимыФормы		 = ВозможныеРежимыФормы();
	ТекущийРежимИмпортаМЧД		 = ТекущийРежимИмпортаМЧД(); 
	
	ОшибкиВалидации = Новый Массив;
	
	Если ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоРегНомеру Тогда
		
		РегистрационныйНомер = СтрЗаменить(РегистрационныйНомер, " ", "");
		Если РегистрационныйНомер = "" Тогда
			ОшибкиВалидации.Добавить("Заполните регистрационный номер");
		ИначеЕсли СтрДлина(РегистрационныйНомер) < 36 Тогда
			ОшибкиВалидации.Добавить("Неверно заполнено поле регистрационный номер");
		КонецЕсли;
		
		ИННДоверителя = СокрЛП(ИННДоверителя);
		Если ИННДоверителя = "" Тогда
			ОшибкиВалидации.Добавить("Заполните ИНН организации-доверителя");
		ИначеЕсли СтрДлина(ИННДоверителя) < 10 Тогда
			ОшибкиВалидации.Добавить("ИНН не может быть меньше 10 символов");
		КонецЕсли;
		
	ИначеЕсли ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоФайлу Тогда
		
		Если ИмяФайлаДоверенности = "" Тогда
			ОшибкиВалидации.Добавить("Выберите файл доверенности в формате .xml");
		КонецЕсли;
		
		Если ИмяФайлаПодписи = "" Тогда
			ОшибкиВалидации.Добавить("Выберите файл подписи в формате .sig или .sgn");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОшибкиВалидации.Количество() > 0 Тогда
		Результат = Ложь;
		СообщитьОшибкиВалидации(ОшибкиВалидации);
	Иначе
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Выводит сообщения с ошибками пользователю
//
// Параметры:
//  ОшибкиВалидации - Массив - Массив текстовых строк с ошибками
// 
Процедура СообщитьОшибкиВалидации(ОшибкиВалидации)
	
	Для каждого ОшибкаВалидации Из ОшибкиВалидации Цикл
		Сообщить(ОшибкаВалидации);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обработчик_ЗарегистрироватьНовуюДоверенность() Экспорт
	
	РасшифровкаОшибкиПодробнее = "";
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	ПараметрыРегистрацииМЧД = Ядро.Контракт_ПараметрыРегистрацииМЧД();
	ПараметрыРегистрацииМЧД.boxId = ИдентификаторЯщика;
	
	ВозможныеРежимыФормы		= ВозможныеРежимыФормы();
	ТекущийРежимИмпортаМЧД		 = ТекущийРежимИмпортаМЧД(); 
	
	Если ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоРегНомеру Тогда
		
		ПараметрыРегистрацииМЧД.РегистрационныйНомер = РегистрационныйНомер;
		ПараметрыРегистрацииМЧД.ИННДоверителя = СокрЛП(ИННДоверителя);
		
	ИначеЕсли ТекущийРежимИмпортаМЧД = ВозможныеРежимыФормы.ИмпортМЧДПоФайлу Тогда
		
		ПараметрыРегистрацииМЧД.РегистрацияПоФайлу = Истина;
		ПараметрыРегистрацииМЧД.ФайлМЧД = Новый ДвоичныеДанные(ИмяФайлаДоверенности);
		ПараметрыРегистрацииМЧД.ФайлПодписи = Новый ДвоичныеДанные(ИмяФайлаПодписи);
		
	КонецЕсли;
	
	РезультатРегистрации = Ядро.МЧД_ЗарегистрироватьНовуюДоверенность(ПараметрыРегистрацииМЧД);
	
	Если РезультатРегистрации.ПодробноеОписаниеОшибки <> "" Тогда
		
		Элементы.НадписьОшибкаДобавленияМЧД.Заголовок = РезультатРегистрации.ПодробноеОписаниеОшибки;
		
		Если РезультатРегистрации.СписокОшибок.Количество() > 0 Тогда 
			
			МассивРасшифровок			 = Ядро.ВыгрузитьКолонку(РезультатРегистрации.СписокОшибок, "Расшифровка", Истина);
			РасшифровкаОшибкиПодробнее	 = Ядро.СоединитьСтроку(МассивРасшифровок, Символы.ПС);
			
		КонецЕсли;
		
		ТекущийРежимФормы = ВозможныеРежимыФормы().ОшибкаДобавленияМЧД;
		ПереключитьРежимФормы();
		
	Иначе
		
		ДобавитьДоверенностьКСотрудникуПослеРегистрации(РезультатРегистрации);
		
		ТекущийРежимФормы = ВозможныеРежимыФормы().УспешноеДобавлениеМЧД;
		ПереключитьРежимФормы();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДоверенностьКСотрудникуПослеРегистрации(РезультатРегистрации)
	
	КонтрактМЧД = РезультатРегистрации.КонтрактМЧД;
	
	Если КонтрактМЧД <> Неопределено Тогда
		
		Ядро = Модуль_ЯдроНаСервере();
		
		Ядро.МЧД_ПривязатьДоверенностьКСотруднику(ИдентификаторЯщика, КонтрактМЧД.Идентификатор, КонтрактМЧД.Доверитель.ИНН);
		
		Если НЕ РезультатРегистрации.ДоверенностьДействует Тогда
			
			НадписьУспешноеДобавлениеМЧД = "Доверенность добавлена.
			|Данная МЧД не вступила в силу и
			|появится в списке доступных в
			|день начала срока действия";
			
			Элементы.НадписьУспешноеДобавлениеМЧД.Заголовок = НадписьУспешноеДобавлениеМЧД;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Метрики

&НаКлиенте
Процедура Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, НазваниеКатегории, НазваниеКнопки, НазваниеМетки = "", ПредставлениеМетрики = "", TraceId = "")
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, НазваниеКатегории, НазваниеКнопки, НазваниеМетки, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_ДобавитьСтатистику_ДляОрганизации(ИдентификаторЯщика, КатегорияМетрики, ДействиеМетрики, НазваниеМетки = Неопределено, ДопПеременные = Неопределено, ПредставлениеМетрики = "", TraceId = "")
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьСтатистику_ДляОрганизации(ИдентификаторЯщика, КатегорияМетрики, ДействиеМетрики, НазваниеМетки, ДопПеременные, ПредставлениеМетрики, TraceId);
	
КонецПроцедуры

&НаКлиенте
Функция Метрика_НазваниеФормы()
	
	Результат = "ДобавлениеМЧД";
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Метрика_ПриОткрытии()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДобавлениеМЧД;
	НазваниеФормы			= Метрика_НазваниеФормы();
	ПредставлениеМетрики	= Метрика_НазваниеФормы(); 
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_ДействиеСФормой(НазваниеФормы, КатегорияМетрики, Истина, ДействиеМетрики, ПредставлениеМетрики);
	
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().ОткрытиеФормы;
	TraceId					 = Модуль_ЯдроНаКлиенте().TraceId();
	Метрика_ДобавитьСтатистику_ДляОрганизации(ИдентификаторЯщика, КатегорияМетрики, ДействиеМетрики, , , , TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_КомандаДобавитьНажатие()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДобавлениеМЧД;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().Добавить;
	НазваниеФормы			= Метрика_НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, КатегорияМетрики, ДействиеМетрики, ЛейблМетрики, НазваниеФормы, TraceId);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрика_РежимИмпортаМЧДПриИзменении()
	
	КатегорияМетрики		= ОсновнаяФорма().Метрика_НазваниеКатегории().ДобавлениеМЧД;
	ДействиеМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().Чекбокс;
	НазваниеФормы			= Метрика_НазваниеФормы();
	ЛейблМетрики			= ОсновнаяФорма().Метрика_НазваниеДействий().НажатиеКнопки;
	ДопПеременные			= Новый Соответствие;
	ДопПеременные.Вставить("Вариант", ТекущийРежимИмпортаМЧД());
	
	Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, КатегорияМетрики, ДействиеМетрики, ЛейблМетрики, НазваниеФормы, TraceId);
	Метрика_ДобавитьСтатистику_ДляОрганизации(ИдентификаторЯщика, КатегорияМетрики, ДействиеМетрики, , ДопПеременные, НазваниеФормы, TraceId);
	
КонецПроцедуры


