
&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Функция ОбработкаОбъект()

	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки = ПолучитьИзВременногоХранилища(Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
		Если Не СтруктураОбработки = Неопределено Тогда
			ОбработкаОбъект = СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ОбщийКонтекстКлиентСервер.АдресОбработкаОбъект);
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	Дерево = Модуль_ЯдроНаСервере().ГенерацияШаблонаКодаПМ_ДеревоСобытийПодключаемогоМодуля();
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСобытий");
	
	УстановитьСвойстваФормыТакси();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваФормыТакси()
	
	СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
	ЗаполнитьЗначенияСвойств(Элементы.Описание, СвойствоАвтоМаксимальнаяШирина);
	ЗаполнитьЗначенияСвойств(Элементы.АдресСправки, СвойствоАвтоМаксимальнаяШирина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого ЭлементДерева Из ДеревоСобытий.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСобытий.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСправкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущийАдресСправки = Элементы.ДеревоСобытий.ТекущиеДанные.АдресСправки;
	
	Если ЗначениеЗаполнено(ТекущийАдресСправки) Тогда
		ЗапуститьПриложение(Элементы.ДеревоСобытий.ТекущиеДанные.АдресСправки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСобытийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.ДеревоСобытий.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент = Элементы.ДеревоСобытийОбработатьТиповойРезультат
		И ТекущиеДанные.ОбработатьТиповойРезультат Тогда
		
		ТекущиеДанные.ПереопределитьПолностью = Ложь;
		
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.ДеревоСобытийПереопределитьПолностью
		И ТекущиеДанные.ПереопределитьПолностью Тогда
		
		ТекущиеДанные.ОбработатьТиповойРезультат = Ложь;
		
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		
		Для Каждого СтрокаДерева Из ТекущиеДанные.ПолучитьЭлементы() Цикл
			
			СтрокаДерева.ПереопределитьПолностью = ТекущиеДанные.ПереопределитьПолностью;
			СтрокаДерева.ОбработатьТиповойРезультат = ТекущиеДанные.ОбработатьТиповойРезультат;
				
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьШаблонКодаПМ(Команда)
	
	Текст = ТекстШаблонаКодаПМНаСервере();
	Текст.Показать();
	
КонецПроцедуры

&НаСервере
Функция ТекстШаблонаКодаПМНаСервере()
	
	Дерево = РеквизитФормыВЗначение("ДеревоСобытий", Тип("ДеревоЗначений"));
	Результат = Модуль_ЯдроНаСервере().ГенерацияШаблонаКодаПМ_ТекстШаблонаПМ(Дерево);
	
	Возврат Результат;
	
КонецФункции


