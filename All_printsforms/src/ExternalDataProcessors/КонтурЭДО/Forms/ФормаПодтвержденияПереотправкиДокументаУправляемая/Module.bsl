
&НаСервере
Перем мОбработкаОбъект;

// Сервисные методы

&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект = Неопределено Тогда
		мОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт
	
	Результат = ВладелецФормы.ОсновнаяФорма();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Модуль_ЯдроНаСервере()
	
	Результат = ОбработкаОбъект().Модуль_Ядро();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции


//{ ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Объект.Свойство("ОбщийКонтекстКлиентСервер", Объект.ОбщийКонтекстКлиентСервер);
	
	БиблиотекаКартинокЯдра = Модуль_ЯдроНаСервере().БиблиотекаКартинок();
	КартинкаВниманиеПрозрачная = БиблиотекаКартинокЯдра.КартинкаВниманиеПрозрачная;
	
	АдресКартинкиВнимание = ПоместитьВоВременноеХранилище(КартинкаВниманиеПрозрачная, УникальныйИдентификатор);
	
КонецПроцедуры

//} ОбработчикиСобытийФормы

//{ ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПерейтиПоСсылкеПодробнееОПереотправке(Элемент)
	
	СсылкаПодробнееОПереотправке = СсылкаПодробнееОПереотправке();
	ЗапуститьПриложение(СсылкаПодробнееОПереотправке);
	
	ДействиеМетрики = Метрики_ДействиеНажатиеПодробнееОПереотправке();
	НазваниеМетки = Метрики_НазваниеМеткиНажатиеГиперссылки();
	
	Метрики_ДобавитьПоведение(ДействиеМетрики, НазваниеМетки);
	Метрики_ДобавитьСтатистику(ДействиеМетрики);
	
КонецПроцедуры

//} ОбработчикиСобытийЭлементовШапкиФормы


//{ ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаПереотправить(Команда)
	
	ДействиеМетрики = Метрики_ДействиеНажатиеПереотправить();
	
	Метрики_ДобавитьПоведение(ДействиеМетрики);
	Метрики_ДобавитьСтатистику(ДействиеМетрики);
	
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗакрыть(Команда)
	
	ДействиеМетрики = Метрики_ДействиеНажатиеЗакрыть();
	
	Метрики_ДобавитьПоведение(ДействиеМетрики);
	Метрики_ДобавитьСтатистику(ДействиеМетрики);
	
	Закрыть();
	
КонецПроцедуры

//} ОбработчикиКомандФормы


//{ СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СсылкаПодробнееОПереотправке()
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	АдресаИнтернетРесурсов = Ядро.Перечисление_АдресаИнтернетРесурсов();
	Результат = АдресаИнтернетРесурсов.ПодробнееОПереотправке;
	
	Возврат Результат;
	
КонецФункции

//} СлужебныеПроцедурыИФункции


//{ Метрики

&НаКлиенте
Процедура Метрики_ДобавитьПоведение(ДействиеМетрики, НазваниеМетки = "")
	
	НазваниеФормы		= Метрики_НазваниеФормы();
	КатегорияМетрики	= Метрики_КатегорияПереотправкаПослеАннулирования();
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьПоведение_НажатиеКнопки(
		НазваниеФормы,
		КатегорияМетрики,
		ДействиеМетрики,
		НазваниеМетки
	);
	
КонецПроцедуры

&НаКлиенте
Процедура Метрики_ДобавитьСтатистику(ДействиеМетрики)
	
	МеткаМетрики = "";
	КатегорияМетрики	= Метрики_КатегорияПереотправкаПослеАннулирования();
	
	Ядро = Модуль_ЯдроНаКлиенте();
	
	Ядро.Метрика_ДобавитьСтатистику_ПоКонтексту(
			КатегорияМетрики,
			ДействиеМетрики,
			МеткаМетрики
		);
	
КонецПроцедуры

&НаКлиенте
Функция Метрики_НазваниеФормы()
	Возврат "ФормаПодтвержденияПереотправкиДокумента";
КонецФункции

&НаКлиенте
Функция Метрики_КатегорияПереотправкаПослеАннулирования()
	
	Ядро = Модуль_ЯдроНаКлиенте();
	Категории = Ядро.Метрика_НазваниеКатегории();
	Результат = Категории.ПереотправкаПослеАннулирования;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Метрики_ДействиеНажатиеПодробнееОПереотправке()
	Возврат "ПодробнееОПереотправке";
КонецФункции

&НаКлиенте
Функция Метрики_ДействиеНажатиеЗакрыть()
	Возврат "Закрыть";
КонецФункции

&НаКлиенте
Функция Метрики_ДействиеНажатиеПереотправить()
	Возврат "Переотправить";
КонецФункции

&НаКлиенте
Функция Метрики_НазваниеМеткиНажатиеГиперссылки()
	Возврат "Нажатие гиперссылки";
КонецФункции

//} Метрики


