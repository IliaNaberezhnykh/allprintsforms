
#Область РегистрацияОбработки

// Формирует шаблон сведений о внешнем отчете или обработке для последующего заполнения.
//
// Параметры:
//   ВерсияБСП - Строка - Версия библиотеки стандартных подсистем, на которую рассчитывают механизмы внешнего объекта.
//       См. также СтандартныеПодсистемыСервер.ВерсияБиблиотеки().
//
// Возвращаемое значение:
//   ПараметрыРегистрации - Структура - Параметры внешнего объекта.
//       
//       * Вид - Строка - Вид внешнего объекта.
//           Для определения вида рекомендуется использовать функции
//           ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработки<ИмяВида>.
//           Также Вид можно указать явно:
//           ** "ПечатнаяФорма"
//           ** "ЗаполнениеОбъекта"
//           ** "СозданиеСвязанныхОбъектов"
//           ** "Отчет"
//           ** "ДополнительнаяОбработка"
//           ** "ДополнительныйОтчет"
//           ** "ШаблонСообщения".
//       
//       * Версия - Строка - Версия объекта.
//           Задается в формате: "<Старший номер>.<Младший номер>".
//       
//       * Назначение - Массив - Необязательный.
//           Объекты конфигурации, для которых предназначен этот объект.
//           ** Строка - Полное имя объекта метаданных.
//       
//       * Наименование - Строка - Необязательный. Представление для администратора (наименование элемента справочника).
//           Если не заполнено, то берется представление объекта метаданных внешнего объекта.
//       
//       * БезопасныйРежим - Булево - Необязательный. Признак подключения внешней обработки в безопасном режиме.
//           Значение по умолчанию Истина (обработка будет выполняться безопасно).
//           В безопасном режиме:
//             Игнорируется привилегированный режим.
//             Запрещены внешние по отношению к платформе 1С:Предприятия действия:
//               COM;
//               Загрузка внешних компонентов;
//               Запуск внешних приложений и команд операционной системы;
//               Доступ к файловой системе, кроме временных файлов;
//               Доступ к Интернету.
//       
//       * Разрешения - Массив - Необязательный.
//           Дополнительные разрешения, необходимые внешней обработке при работе в безопасном режиме.
//           ** ОбъектXDTO {http://www.1c.ru/1cFresh/ApplicationExtensions/Permissions/a.b.c.d}PermissionBase - Разрешение.
//               Для формирования описания разрешения рекомендуется использовать функции
//               РаботаВБезопасномРежиме.Разрешение<ВидРазрешения>(<ПараметрыРазрешения>).
//       
//       * Информация - Строка - Необязательный. Краткая информация по внешнему объекту.
//           В этом параметре для администратора рекомендуется указать описание возможностей внешнего объекта.
//           Если не заполнено, то берется комментарий объекта метаданных внешнего объекта.
//       
//       * ВерсияБСП - Строка - Необязательный. Версия библиотеки, на которую рассчитывают механизмы внешнего объекта.
//           Подробнее - см. СтандартныеПодсистемыСервер.ВерсияБиблиотеки().
//       
//       * ОпределитьНастройкиФормы - Булево - Необязательный.
//           Флажок тесной интеграции дополнительного отчета с общей формой отчета.
//           Позволяет переопределять некоторые настройки формы и подписываться на ее события.
//           Если Истина, тогда в модуле объекта отчета следует определить процедуру по шаблону:
//           
//           // Настройки общей формы отчета подсистемы "Варианты отчетов".
//           //
//           // Параметры:
//           //   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//           //       Неопределено когда вызов без контекста.
//           //   КлючВарианта - Строка, Неопределено - Имя предопределенного
//           //       или уникальный идентификатор пользовательского варианта отчета.
//           //       Неопределено когда вызов без контекста.
//           //   Настройки - Структура - см. возвращаемое значение
//           //       ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//           //
//           Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
//           	// Код процедуры.
//           КонецПроцедуры
//           
//           Внимание. Этот флажок работает только для дополнительных отчетов, подключенных к общей форме ФормаОтчета.
//           Подробнее см. в документации к подсистемам "Дополнительные отчеты и обработки" и "Варианты отчетов".
//       
//       * Команды - ТаблицаЗначений - Необязательный для отчетов. Настройки команд, поставляемых внешним объектом.
//           
//           ** Идентификатор - Строка - Внутреннее имя команды.
//               Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//                 Идентификатор может содержать имена одной или нескольких команд печати,
//                 разделенных запятыми. Подробнее см. описание колонки Идентификатор
//                 в функции СоздатьКоллекциюКомандПечати() общего модуля УправлениеПечатью.
//           
//           ** Представление - Строка - Пользовательское представление команды.
//           
//           ** Использование - Строка - Тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>().
//               В комментариям к этим функциям также даны шаблоны процедур-обработчиков команд.
//           
//           ** ПоказыватьОповещение - Булево - если Истина, то при запуске команды выводится оповещение "Команда выполняется...".
//              Действует для всех типов команд, кроме команд по открытию формы (Использование = "ОткрытиеФормы").
//           
//           ** Модификатор - Строка - Дополнительная классификация команды.
//               Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//                 *** "ПечатьMXL" - для печатных форм на основе табличных макетов.
//               Для загрузки данных из файла (когда Вид = "ПечатнаяФорма" и Использование = "ЗагрузкаДанныхИзФайла"):
//                 Модификатор является обязательным для заполнения
//                 и должен содержать полное имя объекта метаданных (справочника),
//                 для которого выполняется загрузка данных.
//           
//           ** Скрыть - Булево - Необязательный. Признак того, что это служебная команда.
//               Если установить в значение Истина, то команда скрывается в карточке дополнительного объекта.
//
//Функция СведенияОВнешнейОбработке() Экспорт
//	
//	ИмяОтчета = ЭтотОбъект.Метаданные().Имя;
//    Синоним = ЭтотОбъект.Метаданные().Синоним;
//    Синоним = ?(ЗначениеЗаполнено(Синоним), Синоним, ИмяОтчета);

//    РегистрационныеДанные = Новый Структура;
//    РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет");
//    РегистрационныеДанные.Вставить("Наименование", Синоним);
//    РегистрационныеДанные.Вставить("Версия", "1.1");
//    РегистрационныеДанные.Вставить("БезопасныйРежим", Истина);
//    РегистрационныеДанные.Вставить("Информация", "Отчет " + Синоним);
//	РегистрационныеДанные.Вставить("Представление", НСтр("ru = 'БИТ Заказы покупателей за период+заказы поставщикам'"));

//    ТаблицаКоманд = ПолучитьТаблицуКоманд();

//    ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет", "ОткрытиеФормы", Истина);

//    РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);

//    Возврат РегистрационныеДанные;
//	
//	//ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(СтандартныеПодсистемыСервер.ВерсияБиблиотеки());
//	//ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();

//	//ПараметрыРегистрации.Версия = "1.0";
//	//ПараметрыРегистрации.БезопасныйРежим = Ложь;
//	//ПараметрыРегистрации.Наименование = ЭтотОбъект.Метаданные().Представление();
//	//ПараметрыРегистрации.Информация = ЭтотОбъект.Метаданные().Комментарий;
//	//
//	////Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеВнешнейКомпоненты("ОбщийМакет.КомпонентаПечатиШтрихкодов"); 
//	////ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
//	//
//	//НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
//	//НоваяКоманда.Представление = НСтр("ru = 'БИТ Заказы покупателей за период+заказы поставщикам'");
//	//НоваяКоманда.Идентификатор = "ЗаказыПокупателейИПоставщикам";
//	//НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиОтчет();
//	//НоваяКоманда.ПоказыватьОповещение = Истина;
//	//
//	//Возврат ПараметрыРегистрации;
//	//
//КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
     
    ОбщееОписание = "Заказы материалов в производство  и заказы поставщиков (БИТ)25022022";
     
    ПараметрыРегистрации  = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид"             , "ДополнительныйОтчет"); 
    ПараметрыРегистрации.Вставить("БезопасныйРежим" , Ложь);
     
	ПараметрыРегистрации.Вставить("Представление", НСтр("ru = 'Заказы материалов в производство  и заказы поставщиков (БИТ) 25022022'"));
 	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = 'Заказы материалов в производство  и заказы поставщиков (БИТ)25022022'"))  ;
   ПараметрыРегистрации.Вставить("Версия"          , "1.1.0");
    ПараметрыРегистрации.Вставить("Информация"      , ОбщееОписание);
     
     
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
     
    ДобавитьКоманду(ТаблицаКоманд, ОбщееОписание, "1", "ОткрытиеФормы", Истина, "");                             
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд); 
     
    Возврат ПараметрыРегистрации;
     
Конецфункции
 
Функция ПолучитьТаблицуКоманд()
     
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение" , Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор"          , Новый ОписаниеТипов("Строка"));
     
    Возврат Команды;
     
КонецФункции
 
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
     
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление        = Представление;
    НоваяКоманда.Идентификатор        = Идентификатор;
    НоваяКоманда.Использование        = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор          = Модификатор;
     
КонецПроцедуры
#КонецОбласти

