 //Возвращает сведения о внешней обработке.
 Перем ПолучитьТекстЗапросаПоШапкеРТУ;  
 Перем Реалка;
 Перем Язычник;
 Функция СведенияОВнешнейОбработке() Экспорт
	 
	 ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.3.1");
	 
	 ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	 ПараметрыРегистрации.Версия = "1.0";
	 ПараметрыРегистрации.БезопасныйРежим = Ложь;//Истина;
	 ПараметрыРегистрации.Назначение.Добавить("Документ.РеализацияТоваровУслуг");
	 ПараметрыРегистрации.Назначение.Добавить("Документ.ЗаказКлиента");
	 
	 НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	 НоваяКоманда.Представление = НСтр("ru = 'ОИР Ведомость отгрузки элементов'");
	 
	 НоваяКоманда.Идентификатор = "ПФ_MXL_Т185";
	 НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	 НоваяКоманда.ПоказыватьОповещение = Истина;
	 НоваяКоманда.Модификатор = "ПечатьMXL";
	 
	 Возврат ПараметрыРегистрации;
	 
 КонецФункции
 
 
 
 // Интерфейс для выполнения команд обработки.
 Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, Отладка = Ложь) Экспорт
	 
	 УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	 КоллекцияПечатныхФорм,
	 "ПФ_MXL_Т185",
	 НСтр("ru='Мульти Ведомость отгрузки элементов'"),
	 СформироватьПечатнуюФормуТ185(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,Неопределено, Отладка));
	 
	 
	 
 КонецПроцедуры
 
 
 #Область Печати
 
 Функция СформироватьПечатнуюФормуТ185(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено, Отладка) Экспорт
	 
	 ТабличныйДокумент = Новый ТабличныйДокумент;
	 ТабличныйДокумент.АвтоМасштаб = Истина;
	 ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Т185";
	 ДанныеДляПечати = ПолучитьДанныеДляПечати(СтруктураТипов[0]);
	 ЗаполнитьТабличныйДокументМ29(ТабличныйДокумент, ДанныеДляПечати);
	 Возврат ТабличныйДокумент;
	 
 КонецФункции
 
 Функция ПолучитьДанныеДляПечати(Ссылка)
	 //Данные для шапки
	 Запрос = новый Запрос;
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		 Запрос.Текст = ПолучитьТекстЗапросаПоШапкеЗаказКлиента();
	 ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда                                         
		 Запрос.Текст = ПолучитьТекстЗапросаПоШапкеРТУ();
		 Реалка = Ссылка;
	 КонецЕсли;
	 Результат = Запрос.Выполнить();
	 ДанныеДляПечати = Новый Структура("ДанныеШапка, ДанныеТЧ, ИтогиТЧ", "","","");
	 Выборка = Результат.выбрать(); 
	 
	 ДанныеШапка = Новый Структура;
	 Если Выборка.Следующий() Тогда
		 
		 НомерДокРТУ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРТУ, Истина, Истина);
		 ДанныеШапка.Вставить("НомерВедомости", НомерДокРТУ);
		 ДанныеШапка.Вставить("ДатаДокумента", Формат(Выборка.ДатаРТУ,"ДФ=dd.MM.yyyy"));
		 
		 //продавец
		ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
		ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		ДокЯз.Прочитать();
		Язычник = ДокЯз[0].Язык;

		 Если Язычник = Перечисления.Языки.Русский Тогда 
			 СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаРТУ);
			 ДанныеШапка.Вставить("ОрганизацияПродавец",СведенияОПродавце.ОфициальноеНаименование);
			 ДанныеШапка.Вставить("АдресОрганизации", СведенияОПродавце.ЮридическийАдрес);
			 ДанныеШапка.Вставить("ИННКПП", СтрШаблон("%1/%2",
			 Реалка.Организация.ИНН,
			 Реалка.Организация.КПП));
		 Иначе
			 АдрисПродавца = "";
			 Для Каждого Стр Из Реалка.Организация.КонтактнаяИнформация Цикл
				 Если Стр.Вид.Наименование = "Международный адрес" Тогда
					 АдрисПродавца = Стр.Представление;
				 КонецЕсли;
			 КонецЦикла;	
			 СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаРТУ);
			 ДанныеШапка.Вставить("ОрганизацияПродавец",Реалка.Организация.НаименованиеМеждународное);
			 ДанныеШапка.Вставить("АдресОрганизации", АдрисПродавца);
			 ДанныеШапка.Вставить("ИННКПП", СтрШаблон("%1/%2",
			 Реалка.Организация.ИНН,
			 Реалка.Организация.КПП));
		 КонецЕсли;
		 
		 //покупатель
		 Если Язычник = Перечисления.Языки.Русский Тогда
			 СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.ДатаРТУ); 
			 ДанныеШапка.Вставить("Покупатель", СведенияОПокупателе.ПолноеНаименование);
			 ДанныеШапка.Вставить("Адреспокупателя", СведенияОПокупателе.ЮридическийАдрес);
			 ДанныеШапка.Вставить("ИННКПППокупателя", СтрШаблон("%1/%2",
			 Реалка.Контрагент.ИНН,
			 Реалка.Контрагент.КПП));
		 Иначе
			 АдрисПокупателя = "";
			 Для Каждого Стр Из Реалка.Контрагент.КонтактнаяИнформация Цикл
				 Если Стр.Вид.Наименование = "Международный адрес" Тогда
					 АдрисПокупателя = Стр.Представление;
				 КонецЕсли;
			 КонецЦикла;										
			 СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.ДатаРТУ); 
			 ДанныеШапка.Вставить("Покупатель", Реалка.Контрагент.НаименованиеМеждународное);
			 ДанныеШапка.Вставить("Адреспокупателя", АдрисПокупателя);
			 ДанныеШапка.Вставить("ИННКПППокупателя", СтрШаблон("%1/%2",
			 Реалка.Контрагент.ИНН,
			 Реалка.Контрагент.КПП));
		 КонецЕсли;
		 //основание
		 Если Язычник = Перечисления.Языки.Русский Тогда
			 ДанныеШапка.Вставить("Основание", Выборка.ДоговорРТУ);
			 ДокументОснование = СтрШаблон("Товарной накладной (УПД) №%1 дата %2",
			 НомерДокРТУ,
			 Формат(Выборка.ДатаРТУ,"ДФ=dd.MM.yyyy"));
			 ДанныеШапка.Вставить("ДокументОснование", ДокументОснование);
		 Иначе
			 ДанныеШапка.Вставить("Основание", Реалка.Договор.НаименованиеИностранное);
			 ДокументОснование = СтрШаблон("Waybill (UPD) №%1 of %2",
			 НомерДокРТУ,
			 Формат(Выборка.ДатаРТУ,"ДФ=dd.MM.yyyy"));
			 ДанныеШапка.Вставить("ДокументОснование", ДокументОснование);
		 КонецЕсли;
		 //Грузополучатель
		 Если Язычник = Перечисления.Языки.Русский Тогда
			 Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
				 Если ЗначениеЗаполнено (Выборка.АдресДоставки) Тогда
					 ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузополучатель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН") + " " + Выборка.АдресДоставки;
				 Иначе
					 ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузополучатель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН,ЮридическийАдрес");
				 КонецЕсли;
				 ДанныеШапка.Вставить("АдресГрузополучателя", ПредставлениеГрузополучатель);
			 Иначе
				 ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,ЮридическийАдрес");
				 ДанныеШапка.Вставить("АдресГрузополучателя", ПредставлениеГрузополучатель);
			 КонецЕсли;
		 Иначе
			 ТекстГрузополучателя = "--";
			 ТвойАдрисГрузополучателя = "";
			 Для Каждого Стр Из Реалка.Грузополучатель.КонтактнаяИнформация Цикл
				 Если Стр.Вид.Наименование = "Международный адрес" Тогда
					 ТвойАдрисГрузополучателя = Стр.Представление;
				 КонецЕсли;
			 КонецЦикла;
			 ГрузополучательМеждународный = Реалка.Грузополучатель.НаименованиеМеждународное;
			 ТекстГрузополучателяМеждународный = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			 НСтр("ru = '%1, INN %2,%3'"),
			 ГрузополучательМеждународный, " " + СведенияОПокупателе.ИНН, " " + ТвойАдрисГрузополучателя);
			 ПредставлениеГрузополучатель = ТекстГрузополучателяМеждународный;
			 ДанныеШапка.Вставить("АдресГрузополучателя", ПредставлениеГрузополучатель);
		 КонецЕсли;
	 КонецЕсли;
	 //Грузоотправитель
	 Если Язычник = Перечисления.Языки.Русский Тогда
		 Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
			 ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузоотправитель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН,ЮридическийАдрес");
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя);
		 Иначе
			 ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,ИНН,ЮридическийАдрес");
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя);
		 КонецЕсли;
	 Иначе
		 Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
			 ПредставлениеГрузоотправителя = Реалка.Организация.НаименованиеМеждународное + ", INN " + Реалка.Организация.ИНН + ", " + АдрисПродавца;
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя);
		 Иначе
			 ПредставлениеГрузоотправителя = Реалка.Организация.НаименованиеМеждународное + ", INN " + Реалка.Организация.ИНН + ", " + АдрисПродавца;
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя);
		 КонецЕсли;
	 КонецЕсли;
	 //подвал 
	 Если Язычник = Перечисления.Языки.Русский Тогда 
		 ДанныеШапка.Вставить("ОтправительСокр", СведенияОПродавце.СокращенноеНаименование);
		 ДанныеШапка.Вставить("ПолучательСокр", СведенияОПокупателе.СокращенноеНаименование); 
		 ДанныеДляПечати.Вставить("ДанныеШапка", ДанныеШапка);
	 Иначе
		 ДанныеШапка.Вставить("ОтправительСокр", Реалка.Организация.НаименованиеМеждународное);
		 ДанныеШапка.Вставить("ПолучательСокр", Реалка.Контрагент.НаименованиеМеждународное); 
		 ДанныеДляПечати.Вставить("ДанныеШапка", ДанныеШапка);
	 КонецЕсли;
	 
	 //////////////////////////////////////////////////////////////////////////////////////
	 //Получаем данные для ТЧ
	 Запрос=Новый Запрос;
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 //вставить текст для заказа
	 Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		 Запрос.Текст = ПолучитьТекстЗапросаПоТЧЗаказКлиента();
	 ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда                                         
		 Запрос.Текст = ПолучитьТекстЗапросаПоТЧРТУ();
	 КонецЕсли;
	 
	 РезультатЗапроса=Запрос.Выполнить();
	 ВыборкаГП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 
	 ДанныеТЧ = Новый массив;
	 СчГП=1;
	 ВесИтого = 0;
	 Пока ВыборкаГП.Следующий() Цикл 
		 СтрокаГП = Новый Структура;
		 Если Язычник = Перечисления.Языки.Русский Тогда
			 СтрокаГП.Вставить("НомерГП", СчГП);
			 СтрокаГП.Вставить("НаименованиеГП", ВыборкаГП.НоменклатураГП);
			 СтрокаГП.Вставить("ЕдГП", ВыборкаГП.ЕдИзмГП);
			 СтрокаГП.Вставить("КоличествоГП", ВыборкаГП.КоличествоГП);
		 Иначе
			 СтрокаГП.Вставить("НомерГП", СчГП);
			 СтрокаГП.Вставить("НаименованиеГП", ВыборкаГП.НоменклатураГП.НаименованиеЯзык1);
			 СтрокаГП.Вставить("ЕдГП", ВыборкаГП.НоменклатураГП.ЕдиницаИзмерения.НаименованиеЯзык1);
			 СтрокаГП.Вставить("КоличествоГП", ВыборкаГП.КоличествоГП);
		 КонецЕсли;
		 
		 //заполняем внутреннюю таблицу комплектующие
		 СтрокаГПКомплектующие = Новый Массив;
		 
		 Выборка = ВыборкаГП.Выбрать();
		 СчКомп=1;
		 СчГП=СчГП+1;
		 Пока Выборка.Следующий() Цикл
			 СтрокаКомплектующие = Новый Структура;
			 СтрокаКомплектующие.Вставить("НомерКомплектующей", СчКомп);
			 СтрокаКомплектующие.Вставить("НаименованиеКомплектующей", Выборка.Комплектующая);
			 СтрокаКомплектующие.Вставить("ЕдКомплектующей",Выборка.ЕдиницаИзмерения);
			 СтрокаКомплектующие.Вставить("КоличествоКомплектующей", Выборка.Количество);
			 //масса в кг правим вес
			 Если НРег(Выборка.ЕдиницаИзмерения) = "кг" тогда  
				 СтрокаКомплектующие.Вставить("МассаОднойК", "-");
			 Иначе
				 СтрокаКомплектующие.Вставить("МассаОднойК", Выборка.ВесОдной);
			 КонецЕсли;
			 СтрокаКомплектующие.Вставить("ИтогМассаК", Выборка.ВесПоСтроке);
			 СтрокаГПКомплектующие.Добавить(СтрокаКомплектующие);
			 СчКомп=СчКомп+1;
			 //считаем итоговый вес по таблице
			 ВесИтого =  ВесИтого + Выборка.ВесПоСтроке;
		 КонецЦикла;	
		 СтрокаГП.Вставить("Комплектующие", СтрокаГПКомплектующие);
		 
		 ДанныеТЧ.Добавить(СтрокаГП);
		 
	 КонецЦикла; //по ГП
	 ДанныеДляПечати.Вставить("ИтогиТЧ", ВесИтого);
	 ДанныеДляПечати.Вставить("ДанныеТЧ", ДанныеТЧ);
	 Возврат ДанныеДляПечати;	
 КонецФункции
 
 Процедура  ЗаполнитьТабличныйДокументМ29(ТабличныйДокумент, ДанныеДляПечати)  
	 Если Реалка <> Неопределено Тогда
		 Если Язычник = Перечисления.Языки.Английский Тогда
			 Макет = ПолучитьМакет("ПФ_MXL_Т185_en");
		 Иначе
			 Макет = ПолучитьМакет("ПФ_MXL_Т185");
		 КонецЕсли; 
	 КонецЕсли;
	 
	 ДанныеШапка	= ДанныеДляПечати.ДанныеШапка;
	 ДанныеТЧ	= ДанныеДляПечати.ДанныеТЧ;
	 ИтогиТЧ		= ДанныеДляПечати.ИтогиТЧ;
	 //заполняем шапку документа
	 Шапка = Макет.ПолучитьОбласть("Шапка");
	 Шапка.Параметры.Заполнить(ДанныеШапка);
	 ТабличныйДокумент.Вывести(Шапка);                    
	 
	 //должен быть цикл по ГП потом цикл по комплектующим
	 Для каждого СтрГП из ДанныеТЧ Цикл  //ПоГП
		 //Заполняем шапку ГП таблицы
		 ТШапкаГП = Макет.ПолучитьОбласть("ТШапкаГП");
		 ТабличныйДокумент.Вывести(ТШапкаГП);
		 
		 //Заполняем строку ГП
		 СтрокаГП = Макет.ПолучитьОбласть("СтрокаГП");
		 СтрокаГП.Параметры.Заполнить(СтрГП);
		 ТабличныйДокумент.Вывести(СтрокаГП);
		 
		 //Заполняем шапку Комплектующих таблицы
		 ТШапкаКомплектующие = Макет.ПолучитьОбласть("ТШапкаКомплектующие");
		 ТабличныйДокумент.Вывести(ТШапкаКомплектующие);
		 
		 //Заполняем строку Комплектующие
		 Для каждого СтрокаК из СтрГП.Комплектующие Цикл
			 СтрокаКомплектующие = Макет.ПолучитьОбласть("СтрокаКомплектующие");
			 СтрокаКомплектующие.Параметры.Заполнить(СтрокаК);
			 Если Реалка <> Неопределено Тогда
				 Если Язычник = Перечисления.Языки.Английский Тогда
					 СтрокаКомплектующие.Параметры.ЕдКомплектующей = СтрокаК.ЕдКомплектующей.НаименованиеЯзык1;
				 КонецЕсли;
			 КонецЕсли;
			 ТабличныйДокумент.Вывести(СтрокаКомплектующие);
		 КонецЦикла;
		 
	 КонецЦикла; //ПоГП
	 
	 //Заполняем итог по таблице
	 ТИтог = Макет.ПолучитьОбласть("ТИтог");
	 ТИтог.Параметры.ИтогоМасса = ИтогиТЧ;
	 ТабличныйДокумент.Вывести(ТИтог);
	 
	 //Заполняем Подвал
	 Подвал = Макет.ПолучитьОбласть("Подвал");
	 Подвал.Параметры.Заполнить(ДанныеШапка);
	 ТабличныйДокумент.Вывести(Подвал);
	 
 Конецпроцедуры
 
 Функция ПолучитьТекстЗапросаПоШапкеРТУ()
	 ТекстЗапроса =  "ВЫБРАТЬ
	 |	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	 |	РеализацияТоваровУслуг.Номер КАК НомерРТУ,
	 |	РеализацияТоваровУслуг.Дата КАК ДатаРТУ,
	 |	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	 |	РеализацияТоваровУслуг.Договор КАК ДоговорРТУ,
	 |	РеализацияТоваровУслуг.Основание КАК Основание,
	 |	РеализацияТоваровУслуг.Организация КАК Организация,
	 |	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	 |	РеализацияТоваровУслуг.Партнер КАК Партнер,
	 |	РеализацияТоваровУслуг.Грузоотправитель КАК Грузоотправитель,
	 |	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	 |ГДЕ
	 |	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	 Возврат ТекстЗапроса;
 КонецФункции
 
 Функция ПолучитьТекстЗапросаПоШапкеЗаказКлиента()
	 ТекстЗапроса =  "ВЫБРАТЬ
	 |	ЗаказКлиента.Ссылка КАК Ссылка,
	 |	ЗаказКлиента.Номер КАК НомерРТУ,
	 |	ЗаказКлиента.Дата КАК ДатаРТУ,
	 |	ЗаказКлиента.АдресДоставки КАК АдресДоставки,
	 |	ЗаказКлиента.Договор КАК ДоговорРТУ,
	 |	ЗаказКлиента.Организация КАК Организация,
	 |	ЗаказКлиента.Контрагент КАК Контрагент,
	 |	ЗаказКлиента.Партнер КАК Партнер,
	 |	ЗаказКлиента.Грузоотправитель КАК Грузоотправитель,
	 |	ЗаказКлиента.Грузополучатель КАК Грузополучатель
	 |ИЗ
	 |	Документ.ЗаказКлиента КАК ЗаказКлиента
	 |ГДЕ
	 |	ЗаказКлиента.Ссылка = &Ссылка";
	 Возврат ТекстЗапроса;
 КонецФункции
 
 Функция ПолучитьТекстЗапросаПоТЧРТУ()
	 ТекстЗапроса = "ВЫБРАТЬ
	 |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	 |	РеализацияТоваровУслугТовары.ВариантКомплектации КАК ВариантКомплектации,
	 |	РеализацияТоваровУслугТовары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВТ_ГП
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	 |ГДЕ
	 |	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка КАК Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	 |	ВариантыКомплектацииНоменклатурыТовары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВТ_Комплектующие1
	 |ИЗ
	 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары,
	 |	ВТ_ГП КАК ВТ_ГП
	 |ГДЕ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка = ВТ_ГП.ВариантКомплектации
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВЫБОР
	 |		КОГДА Номенклатура.ВесМожноУказыватьВДокументах = ИСТИНА
	 |			ТОГДА Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель
	 |		ИНАЧЕ 0
	 |	КОНЕЦ КАК ВесОдной,
	 |	Номенклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	 |	Номенклатура.ВесЧислитель КАК ВесЧислитель,
	 |	Номенклатура.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения
	 |ПОМЕСТИТЬ ВТ_ДанныеНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |ГДЕ
	 |	Номенклатура.Ссылка В
	 |			(ВЫБРАТЬ
	 |				ВТ_Комплектующие1.Номенклатура
	 |			ИЗ
	 |				ВТ_Комплектующие1)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_Комплектующие1.Ссылка КАК Ссылка,
	 |	ВТ_Комплектующие1.Номенклатура КАК Номенклатура,
	 |	ВТ_Комплектующие1.Количество КАК Количество,
	 |	ВТ_ДанныеНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеНоменклатуры.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ВТ_Комплектующие1.Количество * ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесПоСтроке
	 |ПОМЕСТИТЬ ВТ_ДанныеКомплектующих
	 |ИЗ
	 |	ВТ_Комплектующие1 КАК ВТ_Комплектующие1
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНоменклатуры КАК ВТ_ДанныеНоменклатуры
	 |		ПО ВТ_Комплектующие1.Номенклатура = ВТ_ДанныеНоменклатуры.Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ГП.Номенклатура КАК НоменклатураГП,
	 |	ВТ_ДанныеКомплектующих.Номенклатура КАК Комплектующая,
	 |	ВТ_ДанныеКомплектующих.Количество КАК Количество,
	 |	ВТ_ДанныеКомплектующих.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеКомплектующих.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеКомплектующих.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ЕСТЬNULL(ВТ_ДанныеКомплектующих.ВесПоСтроке, 0) КАК ВесПоСтроке,
	 |	ВТ_ГП.Номенклатура.ЕдиницаИзмерения КАК ЕдИзмГП,
	 |	ВТ_ГП.Количество КАК КоличествоГП
	 |ИЗ
	 |	ВТ_ГП КАК ВТ_ГП
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеКомплектующих КАК ВТ_ДанныеКомплектующих
	 |		ПО ВТ_ГП.ВариантКомплектации = ВТ_ДанныеКомплектующих.Ссылка
	 |ИТОГИ
	 |	МИНИМУМ(ЕдИзмГП),
	 |	МИНИМУМ(КоличествоГП)
	 |ПО
	 |	НоменклатураГП";
	 Возврат ТекстЗапроса;
 КонецФункции
 
 Функция ПолучитьТекстЗапросаПоТЧЗаказКлиента()
	 ТекстЗапроса = "ВЫБРАТЬ
	 |	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	 |	СУММА(ЗаказКлиентаТовары.Количество) КАК Количество
	 |ПОМЕСТИТЬ ВТ_НомЗаказ
	 |ИЗ
	 |	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	 |ГДЕ
	 |	ЗаказКлиентаТовары.Ссылка = &Ссылка
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	ЗаказКлиентаТовары.Номенклатура
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектации,
	 |	ВариантыКомплектацииНоменклатуры.Владелец КАК Владелец
	 |ПОМЕСТИТЬ ВТ_ВК
	 |ИЗ
	 |	Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	 |ГДЕ
	 |	ВариантыКомплектацииНоменклатуры.Владелец В
	 |			(ВЫБРАТЬ
	 |				ВТ_НомЗаказ.Номенклатура
	 |			ИЗ
	 |				ВТ_НомЗаказ)
	 |	И ВариантыКомплектацииНоменклатуры.Основной = ИСТИНА
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_НомЗаказ.Номенклатура КАК Номенклатура,
	 |	ВТ_НомЗаказ.Количество КАК Количество,
	 |	ВТ_ВК.ВариантКомплектации КАК ВариантКомплектации
	 |ПОМЕСТИТЬ ВТ_ГП
	 |ИЗ
	 |	ВТ_НомЗаказ КАК ВТ_НомЗаказ
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВК КАК ВТ_ВК
	 |		ПО ВТ_НомЗаказ.Номенклатура = ВТ_ВК.Владелец
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка КАК Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	 |	ВариантыКомплектацииНоменклатурыТовары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВТ_Комплектующие1
	 |ИЗ
	 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары,
	 |	ВТ_ГП КАК ВТ_ГП
	 |ГДЕ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка = ВТ_ГП.ВариантКомплектации
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВЫБОР
	 |		КОГДА Номенклатура.ВесМожноУказыватьВДокументах = ИСТИНА
	 |			ТОГДА Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель
	 |		ИНАЧЕ 0
	 |	КОНЕЦ КАК ВесОдной,
	 |	Номенклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	 |	Номенклатура.ВесЧислитель КАК ВесЧислитель,
	 |	Номенклатура.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения
	 |ПОМЕСТИТЬ ВТ_ДанныеНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |ГДЕ
	 |	Номенклатура.Ссылка В
	 |			(ВЫБРАТЬ
	 |				ВТ_Комплектующие1.Номенклатура
	 |			ИЗ
	 |				ВТ_Комплектующие1)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_Комплектующие1.Ссылка КАК Ссылка,
	 |	ВТ_Комплектующие1.Номенклатура КАК Номенклатура,
	 |	ВТ_Комплектующие1.Количество КАК Количество,
	 |	ВТ_ДанныеНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеНоменклатуры.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ВТ_Комплектующие1.Количество * ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесПоСтроке
	 |ПОМЕСТИТЬ ВТ_ДанныеКомплектующих
	 |ИЗ
	 |	ВТ_Комплектующие1 КАК ВТ_Комплектующие1
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНоменклатуры КАК ВТ_ДанныеНоменклатуры
	 |		ПО ВТ_Комплектующие1.Номенклатура = ВТ_ДанныеНоменклатуры.Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ГП.Номенклатура КАК НоменклатураГП,
	 |	ВТ_ДанныеКомплектующих.Номенклатура КАК Комплектующая,
	 |	ВТ_ДанныеКомплектующих.Количество КАК Количество,
	 |	ВТ_ДанныеКомплектующих.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеКомплектующих.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеКомплектующих.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ЕСТЬNULL(ВТ_ДанныеКомплектующих.ВесПоСтроке, 0) КАК ВесПоСтроке,
	 |	ВТ_ГП.Номенклатура.ЕдиницаИзмерения КАК ЕдИзмГП,
	 |	ВТ_ГП.Количество КАК КоличествоГП
	 |ИЗ
	 |	ВТ_ГП КАК ВТ_ГП
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеКомплектующих КАК ВТ_ДанныеКомплектующих
	 |		ПО ВТ_ГП.ВариантКомплектации = ВТ_ДанныеКомплектующих.Ссылка
	 |ИТОГИ
	 |	МИНИМУМ(ЕдИзмГП),
	 |	МИНИМУМ(КоличествоГП)
	 |ПО
	 |	НоменклатураГП";
	 Возврат ТекстЗапроса;
 КонецФункции
 
 
 
 #КонецОбласти
 
 
