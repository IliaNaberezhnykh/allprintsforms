Функция СведенияОВнешнейОбработке()Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ПриходныйОрдерНаТовары");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ОИР Информационные бирки"); 
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "2.0"); 
	ПараметрыРегистрации.Вставить("Информация", "ОИР Информационные бирки"); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ОИР Информационные бирки", "ПечатьИБ", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры
	
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ПечатьИБ", "Печать ИБ",СформироватьПФ(МассивОбъектов[0], ОбъектыПечати)); 
		
КонецПроцедуры
	
Функция СформироватьПФ(СсылкаНаДокумент, ОбъектПечати) Экспорт 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ ПЕЧАТИ"; 
	МакетОбработки  = ПолучитьМакет("ПечатьИБ");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ответственный КАК Ответственный,
	|	ПриходныйОрдерНаТовары.Номер КАК Номер,
	|	ПриходныйОрдерНаТовары.Товары.(
	|		Номенклатура.Наименование КАК Наименование,
	|		Количество КАК Количество,
	|		Комментарий КАК Комментарий,
	|		НомерСтроки КАК КоличествоБирок,
	|		Назначение КАК Назначение,
	|		Номенклатура.ВесЧислитель КАК ВесЧислитель,
	|		Номенклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	|		Номенклатура.ОбъемЗнаменатель КАК ОбъемЗнаменатель,
	|		Номенклатура.ОбъемЧислитель КАК ОбъемЧислитель,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		Номенклатура.ОбъемЕдиницаИзмерения КАК ОбъемЕдиницаИзмерения,
	|		Номенклатура.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения
	|	) КАК Товары,
	|	ПриходныйОрдерНаТовары.Статус КАК Статус,
	|	ПриходныйОрдерНаТовары.Распоряжение КАК Распоряжение,
	|	ПриходныйОрдерНаТовары.Склад КАК Склад,
	|	ПриходныйОрдерНаТовары.СкладскаяОперация КАК СкладскаяОперация,
	|	ПриходныйОрдерНаТовары.Отправитель КАК Отправитель,
	|	ПриходныйОрдерНаТовары.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ПриходныйОрдерНаТовары.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ПриходныйОрдерНаТовары.Дата КАК Дата,
	|	ПриходныйОрдерНаТовары.Помещение КАК Помещение,
	|	ПриходныйОрдерНаТовары.Исполнитель.Наименование КАК Исполнитель
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ПриходныйОрдерНаТовары.Ссылка = &Ссылка";     
	Запрос.Параметры.Вставить("Ссылка", СсылкаНаДокумент); 
	Выборка = Запрос.Выполнить().Выбрать(); 
	СЧ = 0; 
	ТТ = 0;
	СтрокаБирка = МакетОбработки.ПолучитьОбласть("СтрокаБирка");
	СтолбецБирка = МакетОбработки.ПолучитьОбласть("СтолбецБирка");
	МассивОбластейДляПроверкиВывода = Новый Массив;
	МассивОбластейДляПроверкиВывода.Добавить(СтрокаБирка);
	ТабличныйДокумент.Очистить();                     
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл 
	ВыборкаТовары = Выборка.Товары.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл 
	ТТ = ТТ + 1;
		Если ВыборкаТовары.ВесЗнаменатель <> 0 Тогда  
		      Вес = ВыборкаТовары.Количество * ВыборкаТовары.ВесЧислитель / ВыборкаТовары.ВесЗнаменатель; 
		Иначе 
			  Вес = "-"; 
		КонецЕсли;
		Если ВыборкаТовары.ОбъемЗнаменатель <> 0 Тогда  
		      Объем = ВыборкаТовары.Количество * ВыборкаТовары.ОбъемЧислитель / ВыборкаТовары.ОбъемЗнаменатель; 
		Иначе 
			  Объем = "-";
		КонецЕсли;

		Если ВыборкаТовары.КоличествоБирок = 0 Тогда
			КолБирок = 1;
		Иначе
			КолБирок = ВыборкаТовары.КоличествоБирок;
		КонецЕсли;
	Сч = Сч + 1 / 2;
	Если Сч <> Цел(Сч) Тогда
		СтрокаБирка.Параметры.Заполнить(Выборка);
	    СтрокаБирка.Параметры.Заполнить(ВыборкаТовары);
	    СтрокаБирка.Параметры.Вес = Вес; 
	    СтрокаБирка.Параметры.Объем = Объем;
	    ТабличныйДокумент.Вывести(СтрокаБирка);
	Иначе 
	    СтолбецБирка.Параметры.Заполнить(Выборка);
	    СтолбецБирка.Параметры.Заполнить(ВыборкаТовары);
	    СтолбецБирка.Параметры.Вес = Вес; 
	    СтолбецБирка.Параметры.Объем = Объем;
	    ТабличныйДокумент.Присоединить(СтолбецБирка);	
    КонецЕсли;
    Если ТТ % 2 = 0 Тогда 
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
    КонецЦикла;
    КонецЦикла;
    ТабличныйДокумент.АвтоМасштаб = Истина; 
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    Возврат ТабличныйДокумент;

КонецФункции

