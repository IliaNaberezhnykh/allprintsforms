Функция СведенияОВнешнейОбработке()Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ОИР упаковочный лист на отгружаемую продукцию"); 
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "2.0"); 
	ПараметрыРегистрации.Вставить("Информация", "ОИР упаковочный лист на отгружаемую продукцию"); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ОИР упаковочный лист на отгружаемую продукцию", "МФ_MXL_УЛ", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры
	
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"МФ_MXL_УЛ", "Печать Накладная",СформироватьПФ(МассивОбъектов, ОбъектыПечати)); 
		
КонецПроцедуры

Функция СформироватьПФ(СсылкаНаДокумент, ОбъектПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ ПЕЧАТИ";
	МакетОбработки  = ПолучитьМакет("МФ_MXL_УЛ"); 
	ТабличныйДокумент.Очистить();      
	
	ДанныеДляПечати = ПолучитьДанныеДляПечати(СсылкаНаДокумент[0]); 
	ДанныеТЧ	= ДанныеДляПечати.ДанныеТЧ;
	ИтогиТЧ		= ДанныеДляПечати.ИтогиТЧ;
	
	
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка"); 
	ТабличныйДокумент.Вывести(ОбластьШапка);       
	
	ОбластьКонтактнаяИнформация  = МакетОбработки.ПолучитьОбласть("КонтактнаяИнформация"); 
	ОбластьКонтактнаяИнформация.Параметры.Заполнить(ДанныеДляПечати.ДанныеШапка);
	ТабличныйДокумент.Вывести(ОбластьКонтактнаяИнформация);  
	
	//должен быть цикл по ГП потом цикл по комплектующим
	Для каждого СтрГП из ДанныеТЧ Цикл  //ПоГП
		 //Заполняем шапку ГП таблицы
		 ТШапкаГП = МакетОбработки.ПолучитьОбласть("ТШапкаГП");
		 ТабличныйДокумент.Вывести(ТШапкаГП);
		 
		 //Заполняем строку ГП
		 СтрокаГП = МакетОбработки.ПолучитьОбласть("СтрокаГП");
		 СтрокаГП.Параметры.Заполнить(СтрГП);
		 ТабличныйДокумент.Вывести(СтрокаГП);
		 
		 //Заполняем шапку Комплектующих таблицы
		 ТШапкаКомплектующие = МакетОбработки.ПолучитьОбласть("ТШапкаКомплектующие");
		 ТабличныйДокумент.Вывести(ТШапкаКомплектующие);
		 
		 //Заполняем строку Комплектующие
		 Для каждого СтрокаК из СтрГП.Комплектующие Цикл
			 СтрокаКомплектующие = МакетОбработки.ПолучитьОбласть("СтрокаКомплектующие");
			 СтрокаКомплектующие.Параметры.Заполнить(СтрокаК);
			 ТабличныйДокумент.Вывести(СтрокаКомплектующие);
		 КонецЦикла;
		 
	КонецЦикла; //ПоГП
	 
	//Заполняем итог по таблице
	ТИтог = МакетОбработки.ПолучитьОбласть("ТИтог");
	ТИтог.Параметры.ИтогоМасса = ИтогиТЧ;
	ТабличныйДокумент.Вывести(ТИтог);
	
	
	ОбластьПодвалПримечание = МакетОбработки.ПолучитьОбласть("ПодвалПримечание");
	ТабличныйДокумент.Вывести(ОбластьПодвалПримечание);  
	
	ОбластьПодвалПодписи    = МакетОбработки.ПолучитьОбласть("ПодвалПодписи");  
	ТабличныйДокумент.Вывести(ОбластьПодвалПодписи);

    ТабличныйДокумент.АвтоМасштаб = Истина;  
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
    Возврат ТабличныйДокумент;

КонецФункции

 Функция ПолучитьДанныеДляПечати(Ссылка)
	 //Данные для шапки
	 Запрос = новый Запрос;                                  
     Запрос.Текст = "ВЫБРАТЬ
	 |	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	 |	РеализацияТоваровУслуг.Номер КАК НомерРТУ,
	 |	РеализацияТоваровУслуг.Дата КАК ДатаРТУ,
	 |	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	 |	РеализацияТоваровУслуг.Договор КАК ДоговорРТУ,
	 |	РеализацияТоваровУслуг.Основание КАК Основание,
	 |	РеализацияТоваровУслуг.Организация КАК Организация,
	 |	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	 |	РеализацияТоваровУслуг.Партнер КАК Партнер,
	 |	РеализацияТоваровУслуг.Грузоотправитель КАК Грузоотправитель,
	 |	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	 |ГДЕ
	 |	РеализацияТоваровУслуг.Ссылка = &Ссылка"; 
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 Реалка = Ссылка;
	 Результат = Запрос.Выполнить();
	 ДанныеДляПечати = Новый Структура("ДанныеШапка");
	 Выборка = Результат.Выбрать(); 
	 
	 ДанныеШапка = Новый Структура;
	 Если Выборка.Следующий() Тогда
		 НомерДокРТУ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРТУ, Истина, Истина);

		 //продавец
		 ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
		 ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		 ДокЯз.Прочитать();

		 СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаРТУ);
	     ДанныеШапка.Вставить("ОрганизацияПродавец",СведенияОПродавце.ОфициальноеНаименование);
		 ДанныеШапка.Вставить("АдресОрганизации", СведенияОПродавце.ЮридическийАдрес);
		 ДанныеШапка.Вставить("ИННКПП", СтрШаблон("%1/%2",
		 Реалка.Организация.ИНН,
		 Реалка.Организация.КПП));
	     АдресПродавца = "";
	     Для Каждого Стр Из Реалка.Организация.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
			     АдресПродавца = Стр.Представление;
			КонецЕсли;
		 КонецЦикла;	
		 СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаРТУ);
		 ДанныеШапка.Вставить("ОрганизацияПродавецАнгл",Реалка.Организация.НаименованиеМеждународное);
	     ДанныеШапка.Вставить("АдресОрганизацииАнгл", АдресПродавца);
		 ДанныеШапка.Вставить("ИННКПП", СтрШаблон("%1/%2",Реалка.Организация.ИНН,Реалка.Организация.КПП));
		 
		 //покупатель
		 СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.ДатаРТУ); 
		 ДанныеШапка.Вставить("Покупатель", СведенияОПокупателе.ПолноеНаименование);
	     ДанныеШапка.Вставить("АдресПокупателя", СведенияОПокупателе.ЮридическийАдрес);
		 ДанныеШапка.Вставить("ИННКПППокупателя", СтрШаблон("%1/%2",Реалка.Контрагент.ИНН,Реалка.Контрагент.КПП));
		 АдресПокупателя = "";
		 Для Каждого Стр Из Реалка.Контрагент.КонтактнаяИнформация Цикл
			 Если Стр.Вид.Наименование = "Международный адрес" Тогда
				 АдресПокупателя = Стр.Представление;
			 КонецЕсли;
		 КонецЦикла;										
		 СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.ДатаРТУ); 
		 ДанныеШапка.Вставить("ПокупательАнгл", Реалка.Контрагент.НаименованиеМеждународное);
		 ДанныеШапка.Вставить("АдресПокупателяАнгл", АдресПокупателя);  
		 
		 //основание
		 ДанныеШапка.Вставить("Основание", Выборка.ДоговорРТУ);
		 ДокументОснование = СтрШаблон("Товарная накладная (УПД) №%1 дата %2",НомерДокРТУ,Формат(Выборка.ДатаРТУ,"ДФ=dd.MM.yyyy"));
		 ДанныеШапка.Вставить("ДокументОснование", ДокументОснование);
		
		 ДанныеШапка.Вставить("ОснованиеАнгл", Реалка.Договор.НаименованиеИностранное); 
		 ДокументОснованиеАнгл = СтрШаблон("Waybill (UPD) №%1 of %2",НомерДокРТУ,Формат(Выборка.ДатаРТУ,"ДФ=dd.MM.yyyy")); 
		 ДанныеШапка.Вставить("ДокументОснованиеАнгл", ДокументОснованиеАнгл);    
		
		 //Грузополучатель
		 Если ЗначениеЗаполнено(Выборка.Грузополучатель) Тогда
			 Если ЗначениеЗаполнено (Выборка.АдресДоставки) Тогда
				 ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузополучатель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН") + " " + Выборка.АдресДоставки;
			  Иначе
				 ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузополучатель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН,ЮридическийАдрес");
			  КонецЕсли;
			  ДанныеШапка.Вставить("АдресГрузополучателя", ПредставлениеГрузополучатель);
		 Иначе
			  ПредставлениеГрузополучатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,ЮридическийАдрес");
		      ДанныеШапка.Вставить("АдресГрузополучателя", ПредставлениеГрузополучатель);
		 КонецЕсли;
		 ТекстГрузополучателя = "--";
		 ТвойАдресГрузополучателя = "";
	     Для Каждого Стр Из Реалка.Грузополучатель.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				 ТвойАдресГрузополучателя = Стр.Представление;
			 КонецЕсли;
		 КонецЦикла;
		 ГрузополучательМеждународный = Реалка.Грузополучатель.НаименованиеМеждународное;
		 ТекстГрузополучателяМеждународный = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		 НСтр("ru = '%1, INN %2,%3'"),
		 ГрузополучательМеждународный, " " + СведенияОПокупателе.ИНН, " " + ТвойАдресГрузополучателя);
		 ПредставлениеГрузополучательАнгл = ТекстГрузополучателяМеждународный;
         ДанныеШапка.Вставить("АдресГрузополучателяАнгл", ПредставлениеГрузополучательАнгл); 
		 ДанныеШапка.Вставить("Грузополучатель", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "СокращенноеНаименование")); 
		 ДанныеШапка.Вставить("ГрузополучательАнгл", Реалка.Грузополучатель.НаименованиеМеждународное); 
		 
	     //Грузоотправитель
		 Если ЗначениеЗаполнено(Выборка.Грузоотправитель) Тогда
			 ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Грузоотправитель, Выборка.ДатаРТУ), "ПолноеНаименование,ИНН,ЮридическийАдрес");
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя); 
			 
			 ПредставлениеГрузоотправителяАнгл = Реалка.Организация.НаименованиеМеждународное + ", INN " + Реалка.Организация.ИНН + ", " + АдресПродавца;
			 ДанныеШапка.Вставить("АдресГрузоотправителяАнгл", ПредставлениеГрузоотправителяАнгл);
		 Иначе
			 ПредставлениеГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,ИНН,ЮридическийАдрес");
			 ДанныеШапка.Вставить("АдресГрузоотправителя", ПредставлениеГрузоотправителя);  
			 
			 ПредставлениеГрузоотправителяАнгл = Реалка.Организация.НаименованиеМеждународное + ", INN " + Реалка.Организация.ИНН + ", " + АдресПродавца;
			 ДанныеШапка.Вставить("АдресГрузоотправителяАнгл", ПредставлениеГрузоотправителяАнгл);
		 КонецЕсли; 		
		 
	     //подвал 
		 ДанныеШапка.Вставить("ОтправительСокр", СведенияОПродавце.СокращенноеНаименование);
		 ДанныеШапка.Вставить("ПолучательСокр", СведенияОПокупателе.СокращенноеНаименование); 
		 ДанныеДляПечати.Вставить("ДанныеШапка", ДанныеШапка);  
		 
		 ДанныеШапка.Вставить("ОтправительСокрАнгл", Реалка.Организация.НаименованиеМеждународное);
		 ДанныеШапка.Вставить("ПолучательСокрАнгл", Реалка.Контрагент.НаименованиеМеждународное); 
		 ДанныеДляПечати.Вставить("ДанныеШапка", ДанныеШапка);
	 КонецЕсли;
	 
	 //Получаем данные для ТЧ
	 Запрос = Новый Запрос;
	 Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 //вставить текст для заказа
                                      
   	 Запрос.Текст = ПолучитьТекстЗапросаПоТЧРТУ();

	 
	 РезультатЗапроса=Запрос.Выполнить();
	 ВыборкаГП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 
	 ДанныеТЧ = Новый массив;
	 СчГП=1;
	 ВесИтого = 0;
	 Пока ВыборкаГП.Следующий() Цикл 
		 СтрокаГП = Новый Структура;
		 СтрокаГП.Вставить("НомерГП", СчГП);
		 СтрокаГП.Вставить("НаименованиеГП", ВыборкаГП.НоменклатураГП);
		 СтрокаГП.Вставить("ЕдГП", ВыборкаГП.ЕдИзмГП);
		 СтрокаГП.Вставить("КоличествоГП", ВыборкаГП.КоличествоГП);
			 
		 //заполняем внутреннюю таблицу комплектующие
		 СтрокаГПКомплектующие = Новый Массив;
		 
		 Выборка = ВыборкаГП.Выбрать();
		 СчКомп=1;
		 СчГП=СчГП+1;
		 Пока Выборка.Следующий() Цикл
			 СтрокаКомплектующие = Новый Структура;
			 СтрокаКомплектующие.Вставить("НомерКомплектующей", СчКомп);
			 СтрокаКомплектующие.Вставить("НаименованиеКомплектующей", Выборка.Комплектующая);
			 СтрокаКомплектующие.Вставить("ЕдКомплектующей",Выборка.ЕдиницаИзмерения);
			 СтрокаКомплектующие.Вставить("КоличествоКомплектующей", Выборка.Количество);
			 //масса в кг правим вес
			 Если НРег(Выборка.ЕдиницаИзмерения) = "кг" тогда  
				 СтрокаКомплектующие.Вставить("МассаОднойК", "-");
			 Иначе
				 СтрокаКомплектующие.Вставить("МассаОднойК", Выборка.ВесОдной);
			 КонецЕсли;
			 СтрокаКомплектующие.Вставить("ИтогМассаК", Выборка.ВесПоСтроке);
			 СтрокаГПКомплектующие.Добавить(СтрокаКомплектующие);
			 СчКомп=СчКомп+1;
			 //считаем итоговый вес по таблице
			 ВесИтого =  ВесИтого + Выборка.ВесПоСтроке;
		 КонецЦикла;	
		 СтрокаГП.Вставить("Комплектующие", СтрокаГПКомплектующие);
		 
		 ДанныеТЧ.Добавить(СтрокаГП);
		 
	 КонецЦикла; //по ГП
	 ДанныеДляПечати.Вставить("ИтогиТЧ", ВесИтого);
	 ДанныеДляПечати.Вставить("ДанныеТЧ", ДанныеТЧ);
	 Возврат ДанныеДляПечати;	
 КонецФункции

 Функция ПолучитьТекстЗапросаПоТЧРТУ()
	 ТекстЗапроса = "ВЫБРАТЬ
	 |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	 |	РеализацияТоваровУслугТовары.ВариантКомплектации КАК ВариантКомплектации,
	 |	РеализацияТоваровУслугТовары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВТ_ГП
	 |ИЗ
	 |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	 |ГДЕ
	 |	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка КАК Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	 |	ВариантыКомплектацииНоменклатурыТовары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВТ_Комплектующие1
	 |ИЗ
	 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары,
	 |	ВТ_ГП КАК ВТ_ГП
	 |ГДЕ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка = ВТ_ГП.ВариантКомплектации
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВЫБОР
	 |		КОГДА Номенклатура.ВесМожноУказыватьВДокументах = ИСТИНА
	 |			ТОГДА Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель
	 |		ИНАЧЕ 0
	 |	КОНЕЦ КАК ВесОдной,
	 |	Номенклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	 |	Номенклатура.ВесЧислитель КАК ВесЧислитель,
	 |	Номенклатура.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения
	 |ПОМЕСТИТЬ ВТ_ДанныеНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |ГДЕ
	 |	Номенклатура.Ссылка В
	 |			(ВЫБРАТЬ
	 |				ВТ_Комплектующие1.Номенклатура
	 |			ИЗ
	 |				ВТ_Комплектующие1)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_Комплектующие1.Ссылка КАК Ссылка,
	 |	ВТ_Комплектующие1.Номенклатура КАК Номенклатура,
	 |	ВТ_Комплектующие1.Количество КАК Количество,
	 |	ВТ_ДанныеНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеНоменклатуры.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ВТ_Комплектующие1.Количество * ВТ_ДанныеНоменклатуры.ВесОдной КАК ВесПоСтроке
	 |ПОМЕСТИТЬ ВТ_ДанныеКомплектующих
	 |ИЗ
	 |	ВТ_Комплектующие1 КАК ВТ_Комплектующие1
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНоменклатуры КАК ВТ_ДанныеНоменклатуры
	 |		ПО ВТ_Комплектующие1.Номенклатура = ВТ_ДанныеНоменклатуры.Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ГП.Номенклатура КАК НоменклатураГП,
	 |	ВТ_ДанныеКомплектующих.Номенклатура КАК Комплектующая,
	 |	ВТ_ДанныеКомплектующих.Количество КАК Количество,
	 |	ВТ_ДанныеКомплектующих.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ВТ_ДанныеКомплектующих.ВесОдной КАК ВесОдной,
	 |	ВТ_ДанныеКомплектующих.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	 |	ЕСТЬNULL(ВТ_ДанныеКомплектующих.ВесПоСтроке, 0) КАК ВесПоСтроке,
	 |	ВТ_ГП.Номенклатура.ЕдиницаИзмерения КАК ЕдИзмГП,
	 |	ВТ_ГП.Количество КАК КоличествоГП
	 |ИЗ
	 |	ВТ_ГП КАК ВТ_ГП
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеКомплектующих КАК ВТ_ДанныеКомплектующих
	 |		ПО ВТ_ГП.ВариантКомплектации = ВТ_ДанныеКомплектующих.Ссылка
	 |ИТОГИ
	 |	МИНИМУМ(ЕдИзмГП),
	 |	МИНИМУМ(КоличествоГП)
	 |ПО
	 |	НоменклатураГП";
	 Возврат ТекстЗапроса;
 КонецФункции

	