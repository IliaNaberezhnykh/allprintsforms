#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	Перем КодЯзыка;
	Перем ДокОсн; 
	Перем СуммаНаСтранице;
	Перем СуммаНаСтраницеСНДС;
	Перем СтрокаТовары;
	
	#Область ПрограммныйИнтерфейс
	
	Функция СведенияОВнешнейОбработке() Экспорт
		
		ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.2");
		
		ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
		ПараметрыРегистрации.Версия = ЭтотОбъект.Метаданные().Комментарий;
		ПараметрыРегистрации.Назначение.Добавить("Документ.КорректировкаРеализации");
		ПараметрыРегистрации.Назначение.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
		ПараметрыРегистрации.Назначение.Добавить("Документ.РеализацияТоваровУслуг");
		ПараметрыРегистрации.Назначение.Добавить("Документ.ВозвратТоваровПоставщику");		
		Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеВнешнейКомпоненты("ОбщийМакет.КомпонентаПечатиШтрихкодов"); 
		ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
		КомандаПечати = ПараметрыРегистрации.Команды.Добавить();
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'ОИР ТОРГ-12'");
		КомандаПечати.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
		КомандаПечати.ПоказыватьОповещение = Ложь;
		КомандаПечати.Модификатор = "ПечатьMXL";
		КомандаПечати = ПараметрыРегистрации.Команды.Добавить();
		КомандаПечати.Идентификатор = "ТОРГ12БезУслуг";
		КомандаПечати.Представление = НСтр("ru = 'ОИР ТОРГ-12 (Без услуг)'");	
		КомандаПечати.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
		КомандаПечати.ПоказыватьОповещение = Ложь;
		КомандаПечати.Модификатор = "ПечатьMXL";
		Возврат ПараметрыРегистрации;
	КонецФункции
	
	#КонецОбласти
	
	#Область Печать
	
	Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
			
			ПараметрыПечати = Новый Структура("ДополнитьКомплектВнешнимиПечатнымиФормами, ВыводитьУслуги", Ложь, Истина);
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ12",
			НСтр("ru = 'Товарная накладная (ТОРГ-12)'"),
			СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, МассивОбъектов));
			
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12БезУслуг") Тогда
			
			ПараметрыПечати = Новый Структура("ДополнитьКомплектВнешнимиПечатнымиФормами, ВыводитьУслуги", Ложь, Ложь);
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ12БезУслуг",
			НСтр("ru = 'Товарная накладная без услуг (ТОРГ-12)'"),
			СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, МассивОбъектов));
			
		КонецЕсли;
		
		ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
		
	КонецПроцедуры 
	
	Функция СтруктураИтоговыеСуммы()
		
		Структура = Новый Структура;
		
		СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
		
		Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
			Структура.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
			Структура.Вставить("Итого"+Элемент.Ключ, 0);
		КонецЦикла;
		
		Возврат Структура;
		
	КонецФункции
	
	Процедура ОбнулитьИтогиПоСтранице(ИтоговыеСуммы)
		
		СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
		
		Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
			ИтоговыеСуммы.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары)
		
		
		СтруктураСуммПоСтроке = СтруктураРесурсовДляИтогов();
		
		ЗаполнитьЗначенияСвойств(СтруктураСуммПоСтроке, СтрокаТовары);
		ОкруглитьДоЦелого(СтруктураСуммПоСтроке.КоличествоМест);
		Для Каждого Элемент Из СтруктураСуммПоСтроке Цикл
			Если ЗначениеЗаполнено(Элемент.Значение) И Элемент.Ключ <> "МассаНетто" Тогда
				ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] = ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] + Элемент.Значение;
				ИтоговыеСуммы["Итого"+Элемент.Ключ] = ИтоговыеСуммы["Итого"+Элемент.Ключ] + Элемент.Значение;
			КонецЕсли;
		КонецЦикла;
		
		
	Если ДокОсн.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
		ИтоговыеСуммы.ИтогоСуммаБезНДСНаСтранице = СуммаНаСТранице; 
		ИтоговыеСуммы.ИтогоСуммаНДСНаСтранице = СуммаНаСТраницеСНДС - СуммаНаСТранице;
		ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице = СуммаНаСТраницеСНДС;
	КонецЕсли;	
		
	КонецПроцедуры
	
	Процедура ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета)
		Если КодЯзыка = "ru" Тогда
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ВсегоНомеров, ,",,,,,,,,0"));
		Иначе
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ВсегоНомеров,"Л=en",",,,,,,,,0"));
		КонецЕсли;
		Если ДокОсн.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
			ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаНаСтранице, ВалютаРегламентированногоУчета, ,КодЯзыка));
		Иначе
			ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС, ВалютаРегламентированногоУчета, ,КодЯзыка));
		КонецЕсли; 
		
	КонецПроцедуры
	
	Процедура ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки, ВыводитьКодНоменклатуры = Истина, ВыводитьКодТНВД = Неопределено, СчетФактураНаАванс = Ложь)
        ИспользоватьНаборы = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(СтрокаТовары, "ЭтоНабор");
		
		ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(СтрокаТовары, ИспользоватьНаборы);
		
		ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КоличествоМест", 0);
		СтруктураПараметров.Вставить("КоличествоВОдномМесте", 0);
		СтруктураПараметров.Вставить("НоменклатураКод", "");
		СтруктураПараметров.Вставить("КодТНВЭД", "--");
		
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтрокаТовары);
		ОкруглитьДоЦелого(СтруктураПараметров.КоличествоМест);
		СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
		
		ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = СтрокаТовары.ЭтоВозвратнаяТара;	
		Если ВыводитьКодТНВД <> Неопределено Тогда
			ДополнительныеПараметрыПолученияНаименованияДляПечати.КодТНВЭД = ?(НЕ ВыводитьКодТНВД.ВыводитьВКолонке И ВыводитьКодТНВД.ВыводитьВСтроке, СтрокаТовары.КодТНВЭД, "");
			Если НЕ ВыводитьКодТНВД.ВыводитьВКолонке Тогда
				СтруктураПараметров.КодТНВЭД = "--";
			КонецЕсли;
		КонецЕсли;
		//ПредставлениеНоменклатуры
		Если КодЯзыка = "ru" Тогда
			Если Не СтрокаТовары.НоменклатураНаименование = Неопределено Тогда
				ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
				+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Строка(СтрокаТовары.НоменклатураНаименование),
				СтрокаТовары.ХарактеристикаНаименование,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати)
				+ ПрефиксИПостфикс.Постфикс;
			Иначе
				ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
				+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Строка(СтрокаТовары.Номенклатура),
				СтрокаТовары.ХарактеристикаНаименование,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати)
				+ ПрефиксИПостфикс.Постфикс;
			КонецЕсли;
		КонецЕсли;
		Если КодЯзыка = "en" Тогда
			ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
			+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			Строка(СтрокаТовары.Номенклатура.НаименованиеЯзык1),
			СтрокаТовары.ХарактеристикаНаименование,
			,
			,
			ДополнительныеПараметрыПолученияНаименованияДляПечати)
			+ ПрефиксИПостфикс.Постфикс;
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ПредставлениеНоменклатуры =  ПрефиксИПостфикс.Префикс
			+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			Строка(СтрокаТовары.Номенклатура.НаименованиеЯзык2),
			СтрокаТовары.ХарактеристикаНаименование,
			,
			,
			ДополнительныеПараметрыПолученияНаименованияДляПечати)
			+ ПрефиксИПостфикс.Постфикс;
		КонецЕсли;
		//КонецПредставленияНоменклатуры
		СтруктураПараметров.Вставить("ПредставлениеНоменклатуры", ПредставлениеНоменклатуры);
		
		Если Не ВыводитьКодНоменклатуры Тогда
			СтруктураПараметров.НоменклатураКод = "";
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);  
		
		
		Если ИспользоватьНаборы
			И СтрокаТовары.ЭтоКомплектующие
			И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
			И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
			ИЛИ СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
			ОбластьМакета.Параметры.Заполнить(НаборыСервер.ПустыеДанные());
		ИначеЕсли ИспользоватьНаборы
			И СтрокаТовары.ЭтоНабор
			И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
			И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих
			ИЛИ СчетФактураНаАванс) Тогда
			ОбластьМакета.Параметры.Заполнить(НаборыСервер.ПустыеДанные());
		КонецЕсли; 
		
		Если КодЯзыка = "en" Или КодЯзыка = "tur" Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = ?(ЗначениеЗаполнено(СтрокаТовары.Упаковка.НаименованиеЯзык1), СтрокаТовары.Упаковка.НаименованиеЯзык1, СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык1);
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = ?(ЗначениеЗаполнено(СтрокаТовары.Упаковка.НаименованиеЯзык2), СтрокаТовары.Упаковка.НаименованиеЯзык2, СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык2);
		КонецЕсли;   
		Если КодЯзыка = "en" Или КодЯзыка = "tur"  Тогда
			ОбластьМакета.Параметры.ВидУпаковки = ?(ЗначениеЗаполнено(СтрокаТовары.Упаковка.НаименованиеЯзык1), СтрокаТовары.Упаковка.НаименованиеЯзык1, СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык1);
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда
			ОбластьМакета.Параметры.ВидУпаковки = ?(ЗначениеЗаполнено(СтрокаТовары.Упаковка.НаименованиеЯзык2), СтрокаТовары.Упаковка.НаименованиеЯзык2, СтрокаТовары.Номенклатура.ЕдиницаИзмерения.НаименованиеЯзык2);
		КонецЕсли;
		
		
	КонецПроцедуры
	
	#Область КорректировкаРеализации
	
	Функция ПолучитьДанныеДляПечатнойФормыТОРГ12_КорректировкаРеализации(ПараметрыПечати, МассивОбъектов)
		
		СтруктураИмяДопКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ЗначениеЗаполнено(СтруктураИмяДопКолонки.ИмяКолонки);
		КолонкаКодов = СтруктураИмяДопКолонки.ИмяКолонки;
		Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
			КолонкаКодов = "Код";
		КонецЕсли;
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Валюта КАК Валюта,
		|	ДанныеДокументов.ВидКорректировки КАК ХозяйственнаяОперация
		|
		|ПОМЕСТИТЬ ТаблицаДанныхДокументов
		|ИЗ
		|	Документ.КорректировкаРеализации КАК ДанныеДокументов
		|
		|ГДЕ
		|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка КАК ДокументОснование,
		|	ЛОЖЬ КАК Корректировочный
		|
		|ПОМЕСТИТЬ СчетаФактурыОснования
		|ИЗ
		|	ТаблицаДанныхДокументов КАК ДанныеДокументов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Запрос.Выполнить();
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		Если ПараметрыПечати.Свойство("ВыводитьГТД")Тогда
			ПараметрыЗаполнения.ВключаяНомераГТД = ПараметрыПечати.Свойство("ВыводитьГТД");
		КонецЕсли;
		ПоместитьВременнуюТаблицуТоваров_КорректировкаРеализации(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, "ТаблицаТоваровКорректировкаРеализации");
		
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КорректировкаРеализации.Ссылка КАК Ссылка,
		|	КорректировкаРеализации.ДокументОснование.Номер КАК Номер,
		|	КорректировкаРеализации.ДокументОснование.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК Статус,
		|	КорректировкаРеализации.Партнер КАК Партнер,
		|	КорректировкаРеализации.Контрагент КАК Контрагент,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализации.Организация.ОбособленноеПодразделение
		|			ТОГДА КорректировкаРеализации.Организация.ГоловнаяОрганизация
		|		ИНАЧЕ КорректировкаРеализации.Организация
		|	КОНЕЦ КАК Организация,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	КорректировкаРеализации.Отпустил КАК Кладовщик,
		|	КорректировкаРеализации.ОтпустилДолжность КАК ДолжностьКладовщика,
		|	КорректировкаРеализации.Организация.Префикс КАК Префикс,
		|	КорректировкаРеализации.Основание КАК Основание,
		|	КорректировкаРеализации.ОснованиеДата КАК ОснованиеДата,
		|	КорректировкаРеализации.ОснованиеНомер КАК ОснованиеНомер,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА КорректировкаРеализации.Контрагент
		|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА КорректировкаРеализации.Организация
		|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	КорректировкаРеализации.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
		|	КорректировкаРеализации.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
		|	КорректировкаРеализации.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
		|	КорректировкаРеализации.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
		|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	КорректировкаРеализации.НалогообложениеНДС КАК НалогообложениеНДС,
		|	КорректировкаРеализации.Валюта КАК Валюта,
		|	КорректировкаРеализации.ДоверенностьНомер КАК ДоверенностьНомер,
		|	КорректировкаРеализации.ДоверенностьДата КАК ДоверенностьДата,
		|	КорректировкаРеализации.ДоверенностьВыдана КАК ДоверенностьВыдана,
		|	КорректировкаРеализации.ДоверенностьЛицо КАК ДоверенностьЛицо,
		|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО КорректировкаРеализации.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
		|		ПО КорректировкаРеализации.Ссылка = ДанныеДокументов.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.НаименованиеПолное, ТаблицаТоваров.Содержание) КАК НоменклатураНаименование,
		|	ВЫБОР
		|		КОГДА &КолонкаКодов = ""Артикул""
		|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
		|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
		|	КОНЕЦ КАК Артикул,
		|	ВЫБОР
		|		КОГДА &КолонкаКодов = ""Артикул""
		|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
		|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
		|	КОНЕЦ КАК НоменклатураКод,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
		|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Код
		|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
		|			ТОГДА """"
		|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
		|	КОНЕЦ КАК УпаковкаНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|		ИНАЧЕ
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения2
		|	КОНЕЦ КАК ВидУпаковки,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|	КОНЕЦ КАК КоличествоМест,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ВЫБОР
		|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|						ТОГДА КоэффициентыУпаковок.Количество
		|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ТОГДА 1
		|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоВОдномМесте,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Цена,
		|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
		|	ТаблицаТоваров.Количество * &ТекстЗапросаВес2 КАК МассаНетто,
		|	ВЫБОР
		|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL ТОГДА
		|						ТаблицаТоваров.Количество * &ТекстЗапросаВес1
		|					ИНАЧЕ
		|						ТаблицаТоваров.КоличествоУпаковок * &ТекстЗапросаВес1
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК МассаБрутто,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА
		|			ТаблицаТоваров.Ссылка.ДокументОснование.ВернутьМногооборотнуюТару
		|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	ТаблицаТоваровКорректировкаРеализации КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
		|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
		|			И ТаблицаТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок
		|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
		|			И НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|ГДЕ
		|	(ТаблицаТоваров.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
		|	ИЛИ ТаблицаТоваров.Ссылка.ДокументОснование ССЫЛКА Документ.РеализацияУслугПрочихАктивов)
		|	И (ТаблицаТоваров.ЭтоТовар
		|			ИЛИ &ВыводитьУслуги)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаВес1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаВес2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Ссылка",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"КоэффициентыУпаковок.ВидУпаковки",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Код",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
		Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
		Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            Константы.ЕдиницаИзмеренияВеса.Получить());
		Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		МассивРезультатов         = Запрос.ВыполнитьПакет();
		РезультатПоШапке          = МассивРезультатов[0];
		РезультатПоТабличнойЧасти = МассивРезультатов[1];
		
		СтруктураДанныхДляПечати = Новый Структура;
		СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
		СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
		
		Возврат СтруктураДанныхДляПечати;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуТоваров_КорректировкаРеализации(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено)
		
		Если ПараметрыЗаполнения = Неопределено Тогда
			ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
		Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
		Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
		Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
		
		// Актуализировать расчеты для получения сумм по товарам документа-основания (например, реализации товаров и услуг).
		Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
			Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
				
				Запрос.Текст = "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
				|ИЗ
				|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
				|
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		ТаблицаДанныхДокументов КАК ДанныеДокументов
				|	ПО
				|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
				|
				|ГДЕ
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	И РасчетыСКлиентами.Активность
				|";
				ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
				МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
				
				Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда 
					ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
					АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
					АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
					Попытка
						РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
					Исключение
						ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
						|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецПопытки;
				КонецЕсли;
				
			Иначе
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	ТаблицаДанныхДокументов КАК ДанныеДокументов
				|ГДЕ 
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
				МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
				
			КонецЕсли;
		КонецЕсли;
		
		Документы.КорректировкаРеализации.УстановитьПараметрыВтВидыЗапасов(
		Запрос,
		ПараметрыЗаполнения.ПересчитыватьВВалютуРегл,
		ПараметрыЗаполнения.ВключаяДоКорректировки);
		
		Запрос.Текст = Документы.КорректировкаРеализации.ТекстЗапросаВтВидыЗапасов() + "
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Основной,
		|	СвязанныеДокументы.Подчиненный КАК Предыдущий
		|ИЗ
		|	ВтСвязанныеДокументы КАК СвязанныеДокументы
		|
		|ГДЕ
		|	СвязанныеДокументы.Подчиненный <> СвязанныеДокументы.Основной
		|
		|УПОРЯДОЧИТЬ ПО
		|	СвязанныеДокументы.МоментВремени УБЫВ
		|
		|ИТОГИ ПО
		|	СвязанныеДокументы.Основной
		|";
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаПредыдущихДокументов = Новый ТаблицаЗначений;
		ТаблицаПредыдущихДокументов.Колонки.Добавить("Основной",   Новый ОписаниеТипов("ДокументСсылка.КорректировкаРеализации"));
		ТаблицаПредыдущихДокументов.Колонки.Добавить("Предыдущий", Новый ОписаниеТипов("
		|ДокументСсылка.КорректировкаРеализации,
		|ДокументСсылка.РеализацияТоваровУслуг,
		|ДокументСсылка.АктВыполненныхРабот,
		|ДокументСсылка.РеализацияУслугПрочихАктивов"));
		
		ВыборкаПоСсылкам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСсылкам.Следующий() Цикл
			Выборка = ВыборкаПоСсылкам.Выбрать();
			Если Выборка.Следующий() Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаПредыдущихДокументов.Добавить(), Выборка);
			КонецЕсли;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ПредыдущиеДокументы", ТаблицаПредыдущихДокументов);
		
		Запрос.Текст = "
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредыдущиеДокументы.Основной   КАК Основной,
		|	ПредыдущиеДокументы.Предыдущий КАК Предыдущий
		|
		|ПОМЕСТИТЬ ПредыдущиеДокументы
		|ИЗ
		|	&ПредыдущиеДокументы КАК ПредыдущиеДокументы
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                КАК Ссылка,
		|	ТаблицаТоваров.Содержание            КАК Содержание,
		|	ТаблицаТоваров.Номенклатура          КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика        КАК Характеристика,
		|	ТаблицаТоваров.Упаковка              КАК Упаковка,
		|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
		|
		|ПОМЕСТИТЬ СтрокиТоваров
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Содержание,
		|	ТаблицаТоваров.Характеристика,
		|	ТаблицаТоваров.Упаковка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика,
		|	ТаблицаТоваров.Упаковка
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	"""" КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ КАК ДоКорректировки
		|ПОМЕСТИТЬ ВсеУслуги
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	ИЛИ Товары.Номенклатура.ТипНоменклатуры ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ КАК ДоКорректировки
		|ИЗ
		|	Документ.АктВыполненныхРабот.Услуги КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Товары.Содержание КАК Содержание,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ КАК ДоКорректировки
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|//предыдущие корректировки реализации
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ КАК ДоКорректировки
		|ИЗ
		|	Документ.КорректировкаРеализации.Расхождения КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|			И СвязанныеДокументы.Основной <> СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	ИЛИ Товары.Номенклатура.ТипНоменклатуры ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|//текущая корректировка реализации
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ КАК ДоКорректировки
		|ИЗ
		|	Документ.КорректировкаРеализации.Расхождения КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Основной
		|			И СвязанныеДокументы.Основной = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	ИЛИ Товары.Номенклатура.ТипНоменклатуры ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Исходная продажа по документу реализации.
		|// Выводится если &ВключаяДоКорректировки
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	"""" КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ИСТИНА КАК ДоКорректировки
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	&ВключаяДоКорректировки
		|	И (Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|	) ИЛИ Товары.Номенклатура.ТипНоменклатуры ЕСТЬ NULL)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Исходная продажа по акту выполненных работ.
		|// Выводится если &ВключаяДоКорректировки
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Услуги.Содержание КАК Содержание,
		|	Услуги.Номенклатура КАК Номенклатура,
		|	Услуги.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Услуги.Количество КАК Количество,
		|	Услуги.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Услуги.СуммаСНДС - Услуги.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Услуги.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Услуги.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ИСТИНА КАК ДоКорректировки
		|ИЗ
		|	Документ.АктВыполненныхРабот.Услуги КАК Услуги
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Услуги.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Услуги.Ссылка = СуммыРегл.Регистратор
		|			И Услуги.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	&ВключаяДоКорректировки
		|	И (Услуги.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|	) ИЛИ Услуги.Номенклатура.ТипНоменклатуры ЕСТЬ NULL)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|// Исходная продажа по реализации услуг и прочих активов.
		|// Выводится если &ВключаяДоКорректировки
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Доходы.Содержание КАК Содержание,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Доходы.Количество КАК Количество,
		|	Доходы.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Доходы.СуммаСНДС - Доходы.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Доходы.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Доходы.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ИСТИНА КАК ДоКорректировки
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК Доходы
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Доходы.Ссылка = СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Доходы.Ссылка = СуммыРегл.Регистратор
		|			И Доходы.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	&ВключаяДоКорректировки
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|//Предыдущие корректировки реализации, которые нужно показать вместе с исходной продажей
		|//Выводится если &ВключаяДоКорректировки
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Основной КАК Ссылка,
		|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
		|	Товары.Содержание КАК Содержание,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	&ПустаяГТД КАК НомерГТД,
		|	Товары.Количество КАК Количество,
		|	Товары.Количество КАК КоличествоУпаковок,
		|	ЕСТЬNULL(СуммыРегл.СуммаБезНДСРегл, Товары.СуммаСНДС - Товары.СуммаНДС) КАК СуммаБезНДС,
		|	
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(СуммыРегл.СуммаНДСРегл, Товары.СуммаНДС) КАК СуммаНДС,
		|	
		|	ЛОЖЬ КАК ЭтоТовар,
		|	ЛОЖЬ КАК ЭтоНеВозвратнаяТара,
		|	ИСТИНА КАК ДоКорректировки
		|ИЗ
		|	Документ.КорректировкаРеализации.Расхождения КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтСвязанныеДокументы КАК СвязанныеДокументы
		|		ПО Товары.Ссылка = СвязанныеДокументы.Подчиненный
		|			И СвязанныеДокументы.Основной <> СвязанныеДокументы.Подчиненный
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыРегл
		|		ПО Товары.Ссылка = СуммыРегл.Регистратор
		|			И Товары.ИдентификаторСтроки = СуммыРегл.ИдентификаторСтроки
		|			И СуммыРегл.Активность
		|			И &ПересчитыватьВВалютуРегл
		|ГДЕ
		|	&ВключаяДоКорректировки
		|	И (Товары.Номенклатура.ТипНоменклатуры НЕ В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	ИЛИ Товары.Номенклатура.ТипНоменклатуры ЕСТЬ NULL)
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|		ТОГДА
		|			ТаблицаДокумента.ВернутьМногооборотнуюТару
		|		ИНАЧЕ
		|		 	ЛОЖЬ
		|	КОНЕЦ КАК ВернутьМногооборотнуюТару,	 	
		|	ЕСТЬNULL(СтрокиТоваров.НомерСтроки, 99999)              КАК НомерСтроки,
		|	""""                                                    КАК Содержание,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
		|	
		|	ВЫБОР КОГДА &ВключаяНомераГТД И НЕ СчетаФактуры.Корректировочный ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ КАК НомерГТД,
		|	
		|	ВЫБОР КОГДА СУММА(ТаблицаДокумента.Количество) > 0 ТОГДА
		|		СУММА(ТаблицаДокумента.Количество)
		|	ИНАЧЕ
		|		-СУММА(ТаблицаДокумента.Количество)
		|	КОНЕЦ КАК Количество,
		|	
		|	ВЫБОР КОГДА СУММА(ТаблицаДокумента.КоличествоУпаковок) > 0 ТОГДА
		|		СУММА(ТаблицаДокумента.КоличествоУпаковок)
		|	ИНАЧЕ
		|		-СУММА(ТаблицаДокумента.КоличествоУпаковок)
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	
		|	ВЫБОР КОГДА СУММА(ТаблицаДокумента.СуммаБезНДС) > 0 ТОГДА
		|		СУММА(ТаблицаДокумента.СуммаБезНДС)
		|	ИНАЧЕ
		|		-СУММА(ТаблицаДокумента.СуммаБезНДС)
		|	КОНЕЦ КАК СуммаБезНДС,
		|	
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.КодТНВЭД КАК КодТНВЭД,
		|	
		|	ВЫБОР КОГДА СУММА(ТаблицаДокумента.СуммаНДС) > 0 ТОГДА
		|		СУММА(ТаблицаДокумента.СуммаНДС)
		|	ИНАЧЕ
		|		-СУММА(ТаблицаДокумента.СуммаНДС)
		|	КОНЕЦ КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|		 	ЛОЖЬ
		|	КОНЕЦ КАК ЭтоТовар,	 			
		|	ВЫБОР
		|		КОГДА
		|			НЕ ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|			ИЛИ НЕ ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ НЕ ТаблицаДокумента.ВернутьМногооборотнуюТару
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЭтоНеВозвратнаяТара,
		|	ТаблицаДокумента.ДоКорректировки КАК ДоКорректировки
		|
		|ПОМЕСТИТЬ ТаблицаТоваровКорректировкаРеализации
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		СтрокиТоваров КАК СтрокиТоваров
		|	ПО
		|		ТаблицаДокумента.Ссылка           = СтрокиТоваров.Ссылка
		|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура = СтрокиТоваров.Номенклатура
		|		И СтрокиТоваров.Содержание        = """"
		|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика = СтрокиТоваров.Характеристика
		|		И ТаблицаДокумента.Упаковка       = СтрокиТоваров.Упаковка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		СчетаФактурыОснования КАК СчетаФактуры
		|	ПО
		|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
		|ГДЕ
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ВернутьМногооборотнуюТару,
		|	СтрокиТоваров.НомерСтроки,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТаблицаДокумента.Упаковка,
		|	
		|	ВЫБОР КОГДА &ВключаяНомераГТД И НЕ СчетаФактуры.Корректировочный ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ,
		|	
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.КодТНВЭД,
		|	ТаблицаДокумента.ДоКорректировки,
		|	ДанныеДокументов.ХозяйственнаяОперация
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаДокумента.Количество) <> 0
		|	И (СУММА(ТаблицаДокумента.Количество) > 0 
		|		ИЛИ ДанныеДокументов.ХозяйственнаяОперация В(
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПерепоставленногоТовара),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара))
		|		)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		| 
		|ВЫБРАТЬ
		|	Услуги.Ссылка КАК Ссылка,
		|	Услуги.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|	ЕСТЬNULL(СтрокиТоваров.НомерСтроки, 99999) КАК НомерСтроки,
		|	Услуги.Содержание КАК Содержание,
		|	Услуги.Номенклатура КАК Номенклатура,
		|	Услуги.Характеристика КАК Характеристика,
		|	Услуги.Упаковка КАК Упаковка,
		|	Услуги.НомерГТД КАК НомерГТД,
		|	
		|	ВЫБОР КОГДА СУММА(Услуги.Количество) > 0 ТОГДА
		|		СУММА(Услуги.Количество)
		|	ИНАЧЕ
		|		-СУММА(Услуги.Количество)
		|	КОНЕЦ КАК Количество,
		|	
		|	ВЫБОР КОГДА СУММА(Услуги.КоличествоУпаковок) > 0 ТОГДА
		|		СУММА(Услуги.КоличествоУпаковок)
		|	ИНАЧЕ
		|		-СУММА(Услуги.КоличествоУпаковок)
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	
		|	ВЫБОР КОГДА СУММА(Услуги.СуммаБезНДС) > 0 ТОГДА
		|		СУММА(Услуги.СуммаБезНДС)
		|	ИНАЧЕ
		|		-СУММА(Услуги.СуммаБезНДС)
		|	КОНЕЦ КАК СуммаБезНДС,
		|
		|	Услуги.СтавкаНДС КАК СтавкаНДС,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
		|	
		|	ВЫБОР КОГДА СУММА(Услуги.СуммаНДС) > 0 ТОГДА
		|		СУММА(Услуги.СуммаНДС)
		|	ИНАЧЕ
		|		-СУММА(Услуги.СуммаНДС)
		|	КОНЕЦ КАК СуммаНДС,
		|
		|	Услуги.ЭтоТовар КАК ЭтоТовар,
		|	Услуги.ЭтоНеВозвратнаяТара КАК ЭтоНеВозвратнаяТара,
		|	Услуги.ДоКорректировки КАК ДоКорректировки
		|ИЗ 
		|	ВсеУслуги КАК Услуги
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		СтрокиТоваров КАК СтрокиТоваров
		|	ПО
		|		Услуги.Ссылка           = СтрокиТоваров.Ссылка
		|		И Услуги.Номенклатура   = СтрокиТоваров.Номенклатура
		|		И Услуги.Содержание     = СтрокиТоваров.Содержание
		|		И Услуги.Характеристика = СтрокиТоваров.Характеристика
		|		И Услуги.Упаковка       = СтрокиТоваров.Упаковка
		|СГРУППИРОВАТЬ ПО
		|	Услуги.Ссылка,
		|	Услуги.ВернутьМногооборотнуюТару,
		|	ЕСТЬNULL(СтрокиТоваров.НомерСтроки, 99999),
		|	Услуги.Содержание,
		|	Услуги.Номенклатура,
		|	Услуги.Характеристика,
		|	Услуги.Упаковка,
		|	Услуги.НомерГТД,
		|	Услуги.СтавкаНДС,
		|	Услуги.ЭтоТовар,
		|	Услуги.ЭтоНеВозвратнаяТара,
		|	Услуги.ДоКорректировки
		|ИМЕЮЩИЕ
		|	СУММА(Услуги.Количество) <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтСвязанныеДокументы
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредыдущиеДокументы
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтрокиТоваров
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтВидыЗапасов
		|";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область ПередачаТоваровМеждуОрганизациями
	
	Функция ПолучитьДанныеДляПечатнойФормыТОРГ12_ПередачаТоваровМеждуОрганизациями(ПараметрыПечати, МассивОбъектов)
		
		КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
			КолонкаКодов = "Код";
		КонецЕсли;
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка               КАК Ссылка,
		|	ДанныеДокументов.Валюта               КАК Валюта
		|
		|ПОМЕСТИТЬ ТаблицаДанныхДокументов
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокументов
		|
		|ГДЕ
		|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Запрос.Выполнить();
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		Если ПараметрыПечати.Свойство("ВыводитьГТД") Тогда
			ПараметрыЗаполнения.ВключаяНомераГТД = ПараметрыПечати.ВыводитьГТД;
		КонецЕсли;
		ПоместитьВременнуюТаблицуТоваров_ПередачаТоваровМеждуОрганизациями(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		
		ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц,
		"ПередачаТоваровМеждуОрганизациямиТаблицаТоваров");
		
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ДанныеДокумента.Номер КАК Номер,
		|	ДанныеДокумента.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК Статус,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
		|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Организация.ОбособленноеПодразделение
		|			ТОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ КАК Организация,
		|	ДанныеДокумента.Основание КАК Основание,
		|	ДанныеДокумента.ОснованиеДата КАК ОснованиеДата,
		|	ДанныеДокумента.ОснованиеНомер КАК ОснованиеНомер,
		|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	ДанныеДокумента.Отпустил КАК Кладовщик,
		|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика,
		|	ДанныеДокумента.Организация.Префикс КАК Префикс,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель
		|		ИНАЧЕ ДанныеДокумента.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.Организация
		|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
		|	ДанныеДокумента.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетКонтрагента,
		|	ДанныеДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
		|	ДанныеДокумента.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
		|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
		|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
		|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
		|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
		|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса,
		|	ИСТИНА КАК ВыводитьКодНоменклатуры
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументам
		|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументам.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|ГДЕ
		|	НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.НомерВходящегоДокумента,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	НЕОПРЕДЕЛЕНО КАК Статус,
		|	ДанныеДокумента.Партнер КАК Партнер,
		|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
		|	ДанныеДокумента.Контрагент КАК Организация,
		|	ДанныеДокумента.Основание КАК Основание,
		|	ДанныеДокумента.ОснованиеДата КАК ОснованиеДата,
		|	ДанныеДокумента.ОснованиеНомер КАК ОснованиеНомер,
		|	"""" КАК Руководитель,
		|	"""" КАК ДолжностьРуководителя,
		|	"""" КАК ГлавныйБухгалтер,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК Кладовщик,
		|	"""" КАК ДолжностьКладовщика,
		|	ДанныеДокумента.Организация.Префикс,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель
		|		ИНАЧЕ ДанныеДокумента.Грузополучатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.Контрагент
		|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
		|	КОНЕЦ,
		|	ДанныеДокумента.БанковскийСчетКонтрагента,
		|	ДанныеДокумента.БанковскийСчетОрганизацииПолучателя,
		|	ДанныеДокумента.БанковскийСчетГрузоотправителя,
		|	ДанныеДокумента.БанковскийСчетГрузополучателя,
		|	ДанныеДокумента.АдресДоставки,
		|	НЕОПРЕДЕЛЕНО,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.ДоверенностьНомер,
		|	ДанныеДокумента.ДоверенностьДата,
		|	ДанныеДокумента.ДоверенностьВыдана,
		|	ДанныеДокумента.ДоверенностьЛицо,
		|	&ЕдиницаИзмеренияВеса,
		|	ЛОЖЬ КАК ВыводитьКодНоменклатуры
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументам
		|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументам.Ссылка
		|ГДЕ
		|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|	И ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.Дата,
		|	НЕОПРЕДЕЛЕНО КАК Статус,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
		|	ДанныеДокумента.Контрагент КАК Контрагент,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Основание КАК Основание,
		|	ДанныеДокумента.ОснованиеДата КАК ОснованиеДата,
		|	ДанныеДокумента.ОснованиеНомер КАК ОснованиеНомер,
		|	ТаблицаОтветственныеЛица.РуководительНаименование,
		|	ТаблицаОтветственныеЛица.РуководительДолжность,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование,
		|	ДанныеДокумента.Отпустил КАК Кладовщик,
		|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика,
		|	ДанныеДокумента.Организация.Префикс,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.Контрагент
		|		ИНАЧЕ ДанныеДокумента.Грузополучатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.Организация
		|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
		|	КОНЕЦ,
		|	ДанныеДокумента.БанковскийСчетОрганизации,
		|	ДанныеДокумента.БанковскийСчетОрганизацииПолучателя,
		|	ДанныеДокумента.БанковскийСчетГрузоотправителя,
		|	ДанныеДокумента.БанковскийСчетГрузополучателя,
		|	ДанныеДокумента.АдресДоставки,
		|	НЕОПРЕДЕЛЕНО,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.ДоверенностьНомер,
		|	ДанныеДокумента.ДоверенностьДата,
		|	ДанныеДокумента.ДоверенностьВыдана,
		|	ДанныеДокумента.ДоверенностьЛицо,
		|	&ЕдиницаИзмеренияВеса,
		|	ИСТИНА КАК ВыводитьКодНоменклатуры
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументам
		|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументам.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|ГДЕ
		|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|	И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	ВЫБОР
		|		КОГДА &КолонкаКодов = ""Артикул""
		|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
		|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
		|	КОНЕЦ КАК НоменклатураКод,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
		|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Код
		|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
		|			ТОГДА """"
		|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
		|	КОНЕЦ КАК УпаковкаНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|		ИНАЧЕ
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения2
		|	КОНЕЦ КАК ВидУпаковки,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|	КОНЕЦ КАК КоличествоМест,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ВЫБОР
		|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|						ТОГДА КоэффициентыУпаковок.Количество
		|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ТОГДА 1
		|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоВОдномМесте,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Цена,
		|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
		|	ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры КАК МассаНетто,
		|	ВЫБОР
		|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
		|						ТОГДА ТаблицаТоваров.Количество 
		|					ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
		|				КОНЕЦ * &ТекстЗапросаВесУпаковки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК МассаБрутто,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ЛОЖЬ КАК ЭтоВозвратнаяТара
		|ИЗ
		|	ПередачаТоваровМеждуОрганизациямиТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
		|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
		|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
		|ГДЕ
		|	(ТаблицаТоваров.ЭтоТовар
		|			ИЛИ &ВыводитьУслуги)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Ссылка",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"КоэффициентыУпаковок.ВидУпаковки",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Код",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
		Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
		Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            Константы.ЕдиницаИзмеренияВеса.Получить());
		Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
		
		МассивРезультатов         = Запрос.ВыполнитьПакет();
		РезультатПоШапке          = МассивРезультатов[0];
		РезультатПоТабличнойЧасти = МассивРезультатов[1];
		
		СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке, РезультатПоТабличнойЧасти);
		
		Возврат СтруктураДанныхДляПечати;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуТоваров_ПередачаТоваровМеждуОрганизациями(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено)
		
		Если ПараметрыЗаполнения = Неопределено Тогда
			ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
		Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
		Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
		Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
		
		Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
			Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
				
				Запрос.Текст = "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
				|ИЗ
				|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
				|
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		ТаблицаДанныхДокументов КАК ДанныеДокументов
				|	ПО
				|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
				|
				|ГДЕ
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	И РасчетыСКлиентами.Активность
				|";
				ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
				МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
				
				Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
					ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
					АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
					АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
					Попытка
						РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
					Исключение
						ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
						|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецПопытки;
				КонецЕсли;
			Иначе
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	ТаблицаДанныхДокументов КАК ДанныеДокументов
				|ГДЕ 
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
				МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
				
			КонецЕсли;
		КонецЕсли;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                     КАК Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Упаковка                   КАК Упаковка,
		|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)      КАК НомерСтроки
		|
		|ПОМЕСТИТЬ СтрокиТоваров
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Упаковка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Упаковка
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
		|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
		|	ТаблицаДокумента.Серия                                  КАК Серия,
		|	&ПустаяГТД                                              КАК НомерГТД,
		|	ТаблицаДокумента.Количество                             КАК Количество,
		|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
		|	
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
		|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
		|	) КАК СуммаБезНДС,
		|	
		|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
		|		ТаблицаДокумента.СуммаНДС
		|	) КАК СуммаНДС,
		|	
		|	ЛОЖЬ                                                    КАК ЭтоТовар,
		|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
		|
		|ПОМЕСТИТЬ ПередачаТоваровМеждуОрганизациямиТаблицаТоваров
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|	ПО
		|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
		|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
		|		И СуммыДокументовВВалютахУчета.Активность
		|		И &ПересчитыватьВВалютуРегл
		|
		|ГДЕ
		|	ТаблицаДокумента.Номенклатура.ТипНоменклатуры В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
		|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура       КАК Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика     КАК Характеристика,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия              КАК Серия,
		|	
		|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ КАК НомерГТД,
		|
		|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
		|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
		|	
		|	СУММА(ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
		|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
		|	)) КАК СуммаБезНДС,
		|	
		|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
		|	
		|	СУММА(ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
		|		ТаблицаДокумента.СуммаНДС
		|	)) КАК СуммаНДС,
		|	
		|	ИСТИНА                                                         КАК ЭтоТовар,
		|	ЛОЖЬ                                                           КАК ВернутьМногооборотнуюТару,
		|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
		|
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|	ПО
		|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
		|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
		|		И СуммыДокументовВВалютахУчета.Активность
		|		И &ПересчитыватьВВалютуРегл
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		СтрокиТоваров КАК СтрокиТоваров
		|	ПО
		|		ТаблицаДокумента.Ссылка                       = СтрокиТоваров.Ссылка
		|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
		|		И ТаблицаДокумента.Упаковка                   = СтрокиТоваров.Упаковка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Ссылка,
		|	СтрокиТоваров.НомерСтроки,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия,
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.Упаковка,
		|
		|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтрокиТоваров
		|";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область РеализацияТоваровУслуг
	
	Функция ПолучитьДанныеДляПечатнойФормыТОРГ12_РеализацияТоваровУслуг(ПараметрыПечати, МассивОбъектов)
		
		СтруктураИмяДопКолонки = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов(); 
		ВыводитьКоды = ЗначениеЗаполнено(СтруктураИмяДопКолонки.ИмяКолонки);
		КолонкаКодов = СтруктураИмяДопКолонки.ИмяКолонки;
		
		
		Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
			КолонкаКодов = "Код";
		КонецЕсли;
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка               КАК Ссылка,
		|	ДанныеДокументов.Валюта               КАК Валюта
		|
		|ПОМЕСТИТЬ ТаблицаДанныхДокументов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДанныеДокументов
		|
		|ГДЕ
		|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Запрос.Выполнить();
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		Если ПараметрыПечати.Свойство("ВыводитьГТД") Тогда
			ПараметрыЗаполнения.ВключаяНомераГТД = ПараметрыПечати.ВыводитьГТД;
		КонецЕсли;
		ПоместитьВременнуюТаблицуТоваров_РеализацияТоваровУслуг(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		
		ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, "РеализацияТоваровУслугТаблицаТоваров");
		СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Статус КАК Статус,
		|	РеализацияТоваровУслуг.Партнер КАК Партнер,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Организация.ОбособленноеПодразделение
		|			ТОГДА РеализацияТоваровУслуг.Организация.ГоловнаяОрганизация
		|		ИНАЧЕ РеализацияТоваровУслуг.Организация
		|	КОНЕЦ КАК Организация,
		|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК Руководитель,
		|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
		|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
		|	РеализацияТоваровУслуг.Отпустил КАК Кладовщик,
		|	РеализацияТоваровУслуг.ОтпустилДолжность КАК ДолжностьКладовщика,
		|	РеализацияТоваровУслуг.Организация.Префикс КАК Префикс,
		|	РеализацияТоваровУслуг.Основание КАК Основание,
		|	РеализацияТоваровУслуг.ОснованиеДата КАК ОснованиеДата,
		|	РеализацияТоваровУслуг.ОснованиеНомер КАК ОснованиеНомер,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РеализацияТоваровУслуг.Контрагент
		|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РеализацияТоваровУслуг.Организация
		|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	РеализацияТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
		|	РеализацияТоваровУслуг.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
		|	РеализацияТоваровУслуг.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
		|	РеализацияТоваровУслуг.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
		|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	РеализацияТоваровУслуг.Валюта КАК Валюта,
		|	РеализацияТоваровУслуг.НалогообложениеНДС КАК НалогообложениеНДС,
		|	РеализацияТоваровУслуг.ДоверенностьНомер КАК ДоверенностьНомер,
		|	РеализацияТоваровУслуг.ДоверенностьДата КАК ДоверенностьДата,
		|	РеализацияТоваровУслуг.ДоверенностьВыдана КАК ДоверенностьВыдана,
		|	РеализацияТоваровУслуг.ДоверенностьЛицо КАК ДоверенностьЛицо,
		|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
		|		ПО РеализацияТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
		|		ПО РеализацияТоваровУслуг.Ссылка = ТаблицаОтветственныеЛица.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка                КАК Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
		|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
		|	СУММА(ВЫБОР
		|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
		|						ТОГДА ТаблицаТоваров.Количество
		|					ИНАЧЕ ВЫБОР 
		|							КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = Значение(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|								ТОГДА 0
		|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
		|						КОНЕЦ
		|				КОНЕЦ * &ТекстЗапросаВесУпаковки
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК МассаБрутто,
		|	СУММА(ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры) КАК МассаНетто,
		|	СУММА(ТаблицаТоваров.СуммаБезНДС)    КАК СуммаБезНДС,
		|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
		|ИЗ
		|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
		|
		|ГДЕ
		|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка                                    КАК Ссылка,
		|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
		|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
		|	Товары.НоменклатураНабора,
		|	Товары.ХарактеристикаНабора,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
		|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ОсновнаяКомплектующая,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
		|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
		|		Товары.НомерГТД
		|	ИНАЧЕ
		|		null
		|	КОНЕЦ КАК НомерГТД,
		|	0 КАК КоличествоПоУмолчанию,
		|	Товары.Количество КАК Количество
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
		|ИЗ
		|	РеализацияТоваровУслугТаблицаТоваров КАК Товары
		|
		|ГДЕ
		|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Ссылка                                                                                КАК Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
		|	ЛОЖЬ КАК ОсновнаяКомплектующая,
		|	NULL КАК СтавкаНДС,
		|	NULL КАК НомерГТД,
		|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
		|	0 КАК Количество
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т) КАК Т
		|		ПО ИСТИНА
		|ГДЕ
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ Т.ВариантКомплектацииНоменклатуры ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантРасчетаЦеныНабора,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
		|	МАКСИМУМ(Таблица.НомерГТД) КАК НомерГТД,
		|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
		|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
		|	СУММА(Таблица.Количество) КАК Количество
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.ВариантКомплектацииНоменклатуры,
		|	Таблица.ВариантРасчетаЦеныНабора,
		|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|	Таблица.НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.ОсновнаяКомплектующая
		|				ТОГДА Результат.СтавкаНДС
		|			ИНАЧЕ null
		|		КОНЕЦ) КАК СтавкаНДС,
		|	МАКСИМУМ(Результат.НомерГТД) КАК НомерГТД,
		|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) КАК КоэффициентМаксимум,
		|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ null
		|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК КоэффициентМинимум
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
		|ИЗ
		|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
		|СГРУППИРОВАТЬ ПО
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
		|
		|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
		|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
		|		ИНАЧЕ
		|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|		КОНЕЦ
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|
		|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
		|		ВЫБОР КОГДА
		|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
		|			ИНАЧЕ
		|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
		|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
		|		ИНАЧЕ
		|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
		|		КОНЕЦ
		|	ИНАЧЕ
		|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
		|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
		|
		|	Таблица.Ссылка                            КАК Ссылка,
		|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
		|	Таблица.НомерСтроки                       КАК НомерСтроки,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.НомерГТД, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК НомерГТД,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
		|	ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПолныйНабор,
		|	Таблица.МассаБрутто                           КАК МассаБрутто,
		|	Таблица.МассаНетто                            КАК МассаНетто,
		|	Таблица.СуммаБезНДС                           КАК СуммаБезНДС,
		|	Таблица.СуммаНДС                              КАК СуммаНДС,
		|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
		|ИЗ
		|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
		|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
		|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
		|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ТаблицаТоваров.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаТоваров.ЭтоКомплектующие КАК ЭтоКомплектующие,
		|	ТаблицаТоваров.ЭтоНабор КАК ЭтоНабор,
		|	ТаблицаТоваров.ПолныйНабор КАК ПолныйНабор,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	ТаблицаТоваров.Номенклатура.Наименование КАК НоменклатураНаименованиеКраткое,
		|	ВЫБОР
		|		КОГДА &КолонкаКодов = ""Артикул""
		|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
		|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
		|	КОНЕЦ КАК НоменклатураКод,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
		|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Код
		|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
		|			ТОГДА """"
		|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
		|	КОНЕЦ КАК УпаковкаНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения1
		|		ИНАЧЕ
		|			&ТекстЗапросаНаименованиеЕдиницыИзмерения2
		|	КОНЕЦ КАК ВидУпаковки,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|				И НЕ ТаблицаТоваров.ЭтоНабор
		|			ТОГДА ВЫБОР
		|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|						ТОГДА КоэффициентыУпаковок.КоличествоУпаковок
		|					ИНАЧЕ ТаблицаТоваров.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ИЛИ ТаблицаТоваров.Упаковка = (ВЫБОР
		|											КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|											ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|											ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения 
		|											КОНЕЦ)  
		|					ТОГДА ТаблицаТоваров.Количество
		|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТоваров.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ЧИСЛО(12, 3))
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоМест,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения И Не ТаблицаТоваров.ЭтоНабор
		|			ТОГДА ВЫБОР
		|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|						ТОГДА КоэффициентыУпаковок.Количество
		|					ИНАЧЕ 
		|						ВЫБОР КОГДА ТаблицаТоваров.Упаковка.ЕдиницаИзмерения = &ТекстЗапросаЕдиницаИзмерения  
		|							ТОГДА 1
		|						ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
		|                   	КОНЕЦ
		|					КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ИЛИ ТаблицаТоваров.Упаковка = (ВЫБОР
		|										КОГДА &ВыводитьБазовыеЕдиницыИзмерения
		|										ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|										ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения 
		|										КОНЕЦ)  
		|					ТОГДА 1
		|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоВОдномМесте,
		|	ВЫБОР
		|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
		|	КОНЕЦ КАК Цена,
		|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
		|	ТаблицаТоваров.МассаНетто,
		|	ТаблицаТоваров.МассаБрутто,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
		|	ВЫБОР
		|		КОГДА
		|			ТаблицаТоваров.Ссылка.ВернутьМногооборотнуюТару
		|			И ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозвратнаяТара
		|ИЗ
		|(
		|	ВЫБРАТЬ
		|		ТаблицаТоваров.Ссылка,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
		|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
		|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
		|		ТаблицаТоваров.НоменклатураНабора,
		|		ТаблицаТоваров.ХарактеристикаНабора,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|		КОНЕЦ КАК ЭтоКомплектующие,
		|		ЛОЖЬ КАК ЭтоНабор,
		|		ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.НомерСтроки
		|		ИНАЧЕ
		|			ТаблицаТоваров.НомерСтроки
		|		КОНЕЦ КАК НомерСтрокиНаборы,
		|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
		|			ВременнаяТаблицаНаборы.ПолныйНабор
		|		ИНАЧЕ
		|			ЛОЖЬ
		|		КОНЕЦ КАК ПолныйНабор,
		|		ТаблицаТоваров.Номенклатура,
		|		ТаблицаТоваров.Количество,
		|		ТаблицаТоваров.КоличествоУпаковок,
		|		ТаблицаТоваров.СтавкаНДС,
		|		ТаблицаТоваров.НомерГТД,
		|		ТаблицаТоваров.СуммаБезНДС,
		|		ТаблицаТоваров.СуммаНДС,
		|		ТаблицаТоваров.Характеристика,
		|		ТаблицаТоваров.Упаковка,
		|		ВЫБОР
		|			КОГДА &ЗаполненаЕдиницаИзмеренияВеса
		|				ТОГДА ВЫБОР
		|						КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
		|							ТОГДА ТаблицаТоваров.Количество
		|						ИНАЧЕ ВЫБОР 
		|							КОГДА ТаблицаТоваров.Упаковка.ТипИзмеряемойВеличины = Значение(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|								ТОГДА 0
		|							ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок
		|						КОНЕЦ
		|					КОНЕЦ * &ТекстЗапросаВесУпаковки
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК МассаБрутто,
		|		ТаблицаТоваров.Количество * &ТекстЗапросаВесНоменклатуры КАК МассаНетто,
		|		ТаблицаТоваров.ЭтоТовар КАК ЭтоТовар
		|	ИЗ
		|		РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
		|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
		|			 И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
		|
		|	ГДЕ
		|		(ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		ИЛИ (ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
		|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаНаборы.Ссылка,
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
		|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|		ВременнаяТаблицаНаборы.НоменклатураНабора,
		|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|		ЛОЖЬ КАК ЭтоКомплектующие,
		|		ИСТИНА КАК ЭтоНабор,
		|		0 КАК НомерСтроки,
		|		ВременнаяТаблицаНаборы.НомерСтроки КАК НомерСтрокиНаборы,
		|		ВременнаяТаблицаНаборы.ПолныйНабор КАК ПолныйНабор,
		|		ВременнаяТаблицаНаборы.НоменклатураНабора,
		|		ВременнаяТаблицаНаборы.Количество,
		|		ВременнаяТаблицаНаборы.КоличествоУпаковок,
		|		ВременнаяТаблицаНаборы.СтавкаНДС,
		|		ВременнаяТаблицаНаборы.НомерГТД,
		|		ВременнаяТаблицаНаборы.СуммаБезНДС,
		|		ВременнаяТаблицаНаборы.СуммаНДС,
		|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|		ВременнаяТаблицаНаборы.МассаБрутто,
		|		ВременнаяТаблицаНаборы.МассаНетто,
		|		ИСТИНА КАК ЭтоТовар
		|	ИЗ
		|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|	ГДЕ
		|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
		|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
		|) КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
		|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
		|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
		|			И ТаблицаТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок 
		|			И НЕ &ВыводитьБазовыеЕдиницыИзмерения
		|ГДЕ
		|	(ТаблицаТоваров.ЭтоТовар
		|			ИЛИ &ВыводитьУслуги)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтрокиНаборы,
		|	ЭтоНабор УБЫВ,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Ссылка",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Наименование",
		"КоэффициентыУпаковок.ВидУпаковки",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
		"Код",
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
		Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
		Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            Константы.ЕдиницаИзмеренияВеса.Получить());
		Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
		Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения",
		Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить() ИЛИ ПараметрыЗаполнения.ВключаяНомераГТД);
		
		МассивРезультатов         = Запрос.ВыполнитьПакет();
		РезультатПоШапке          = МассивРезультатов[0];
		РезультатПоТабличнойЧасти = МассивРезультатов[6];
		
		СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке, РезультатПоТабличнойЧасти);
		
		Возврат СтруктураДанныхДляПечати;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуТоваров_РеализацияТоваровУслуг(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено)
		
		Если ПараметрыЗаполнения = Неопределено Тогда
			ПараметрыЗаполнения = ПараметрыЗаполненияВременнойТаблицыТоваров();
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
		Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
		Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
		Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
		
		Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
			Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
				
				Запрос.Текст = "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
				|ИЗ
				|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
				|
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		ТаблицаДанныхДокументов КАК ДанныеДокументов
				|	ПО
				|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
				|
				|ГДЕ
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	И РасчетыСКлиентами.Активность
				|";
				ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
				МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
				
				Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
					ОкончаниеПериодаРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
					АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
					АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
					Попытка
						РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, АналитикиРасчета);
					Исключение
						ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
						|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецПопытки;
				КонецЕсли;
			Иначе
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	ТаблицаДанныхДокументов КАК ДанныеДокументов
				|ГДЕ 
				|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
				|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
				МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	ТаблицаТоваров.Цена КАК Цена,
		|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
		|
		|ПОМЕСТИТЬ СтрокиТоваров
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.АналитикаУчетаНаборов,
		|	ТаблицаТоваров.Упаковка,
		|	ТаблицаТоваров.Цена
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.АналитикаУчетаНаборов,
		|	ТаблицаТоваров.Упаковка,
		|	ТаблицаТоваров.Цена
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
		
		|	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
		
		|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		
		|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
		
		|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
		|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
		|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
		|	ТаблицаДокумента.Серия                                  КАК Серия,
		|	&ПустаяГТД                                              КАК НомерГТД,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)    КАК КодТНВЭД,
		|	ТаблицаДокумента.Количество                             КАК Количество,
		|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
		|	
		|	ТаблицаДокумента.Цена                                   КАК Цена,
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
		|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
		|	) КАК СуммаБезНДС,
		|	
		|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
		|	
		|	ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
		|		ТаблицаДокумента.СуммаНДС
		|	) КАК СуммаНДС,
		|	
		|	ЛОЖЬ                                                    КАК ЭтоТовар,
		|	ЛОЖЬ                                                    КАК ЭтоНеВозвратнаяТара,
		|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
		|
		|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|	ПО
		|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
		|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
		|		И СуммыДокументовВВалютахУчета.Активность
		|		И &ПересчитыватьВВалютуРегл
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.НоменклатураНабора
		|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.ХарактеристикаНабора
		|		И ВариантыКомплектацииНоменклатуры.Основной
		|
		|ГДЕ
		|	ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
		
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка)) КАК ВариантКомплектацииНоменклатуры,
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах, ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)) КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)) КАК ВариантРасчетаЦеныНабора,
		
		|	ЕСТЬNULL(ТаблицаДокумента.АналитикаУчетаНаборов.НоменклатураНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))   КАК НоменклатураНабора,
		|	ЕСТЬNULL(ТаблицаДокумента.АналитикаУчетаНаборов.ХарактеристикаНабора, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ХарактеристикаНабора,
		
		|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура       КАК Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика     КАК Характеристика,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия              КАК Серия,
		|	
		|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ КАК НомерГТД,
		|	ТаблицаДокумента.КодТНВЭД                                      КАК КодТНВЭД,
		|
		|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
		|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
		|	
		|	ТаблицаДокумента.Цена                                          КАК Цена,
		|	СУММА(ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаБезНДСРегл,
		|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
		|	)) КАК СуммаБезНДС,
		|	
		|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
		|	
		|	СУММА(ЕСТЬNULL(
		|		СуммыДокументовВВалютахУчета.СуммаНДСРегл,
		|		ТаблицаДокумента.СуммаНДС
		|	)) КАК СуммаНДС,
		|	
		|	ИСТИНА                                                         КАК ЭтоТовар,
		|	ВЫБОР
		|		КОГДА
		|			ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|			И ТаблицаДокумента.Ссылка.ВернутьМногооборотнуюТару
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ                                                          КАК ЭтоНеВозвратнаяТара,
		|	ТаблицаДокумента.Ссылка.ВернутьМногооборотнуюТару              КАК ВернутьМногооборотнуюТару,
		|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
		|
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТаблицаДокумента
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
		|	ПО
		|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
		|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
		|		И СуммыДокументовВВалютахУчета.Активность
		|		И &ПересчитыватьВВалютуРегл
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		СтрокиТоваров КАК СтрокиТоваров
		|	ПО
		|		ТаблицаДокумента.Ссылка = СтрокиТоваров.Ссылка
		|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
		|		И ТаблицаДокумента.АналитикаУчетаНаборов = СтрокиТоваров.АналитикаУчетаНаборов
		|		И ТаблицаДокумента.Упаковка = СтрокиТоваров.Упаковка
		|		И ТаблицаДокумента.Цена = СтрокиТоваров.Цена
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.АналитикаУчетаНаборов.НоменклатураНабора
		|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.АналитикаУчетаНаборов.ХарактеристикаНабора
		|		И ВариантыКомплектацииНоменклатуры.Основной
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Ссылка,
		
		|	ВариантыКомплектацииНоменклатуры.Ссылка,
		|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора,
		|	ТаблицаДокумента.АналитикаУчетаНаборов.НоменклатураНабора,
		|	ТаблицаДокумента.АналитикаУчетаНаборов.ХарактеристикаНабора,
		
		|	СтрокиТоваров.НомерСтроки,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТаблицаДокумента.АналитикаУчетаНоменклатуры.Серия,
		|	ТаблицаДокумента.СтавкаНДС,
		|	ТаблицаДокумента.Упаковка,
		|	ТаблицаДокумента.Цена,
		|	ТаблицаДокумента.КодТНВЭД,
		|
		|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
		|		ТаблицаДокумента.НомерГТД
		|	ИНАЧЕ
		|		&ПустаяГТД
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтрокиТоваров
		|";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#КонецОбласти
	
	#Область Печать_ТОРГ12
	
	Функция СформироватьПечатнуюФормуТОРГ12(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, МассивОбъектов)
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 5;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ12_2";
		
		НомерТипаДокумента = 0;
		
		Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
			НомерТипаДокумента = НомерТипаДокумента + 1;
			Если НомерТипаДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
			Если МенеджерОбъекта = Неопределено Тогда
				МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
			КонецЕсли;
			
			ДанныеДляПечати = Неопределено;
			
			Если СтруктураОбъектов.Ключ = "Документ.КорректировкаРеализации" Тогда
				
				ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыТОРГ12_КорректировкаРеализации(ПараметрыПечати, СтруктураОбъектов.Значение);
				
			КонецЕсли;		
			
			Если СтруктураОбъектов.Ключ = "Документ.ПередачаТоваровМеждуОрганизациями" Тогда
				
				ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыТОРГ12_ПередачаТоваровМеждуОрганизациями(ПараметрыПечати, СтруктураОбъектов.Значение);
				
			КонецЕсли;		
			
			Если СтруктураОбъектов.Ключ = "Документ.РеализацияТоваровУслуг" Тогда
				
				ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыТОРГ12_РеализацияТоваровУслуг(ПараметрыПечати, СтруктураОбъектов.Значение);
				
			КонецЕсли;	
			
			Если ДанныеДляПечати = Неопределено Тогда
				
				ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, СтруктураОбъектов.Значение);
				
			КонецЕсли;			
			
			ЗаполнитьТабличныйДокументТОРГ12(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, МассивОбъектов);
		КонецЦикла;
		Возврат ТабличныйДокумент;
		
	КонецФункции
	
	Процедура ЗаполнитьРеквизитыШапкиТОРГ12(ДанныеПечати, Макет, ТабличныйДокумент)
		
		// Выводим общие реквизиты шапки
		СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,       ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
		СведенияОГрузополучателе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетГрузополучателя);
		СведенияОГрузоотправитель = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетГрузоотправителя);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НомерДокумента", ДанныеПечати.Номер); //ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер));
		Если КодЯзыка = "ar" Тогда
			СтруктураПараметров.Вставить("ДатаДокумента", Формат(ДанныеПечати.Дата,"Л=ar_EG; ДФ=dd.MM.yy"));
		Иначе
			СтруктураПараметров.Вставить("ДатаДокумента", ДанныеПечати.Дата);
		КонецЕсли;
		Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
			СтруктураПараметров.Вставить("ДатаПС", ДокОсн.ДатаПереходаПраваСобственности);
		КонецЕсли;
		//ПредставлениеОрганизации
		Банка = ДокОсн.БанковскийСчетОрганизации.Банк.КороткоеИностранноеНаименование;
		ТвойАдрисГрузоотправителя = "";
		Для Каждого Стр Из ДокОсн.Грузоотправитель.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрисГрузоотправителя = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			СтруктураПараметров.Вставить("ПредставлениеОрганизации", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике));
		Иначе
			ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'; en = '%2, INN %3, %4, %5, %6, %7, %8, %9'; ar = '%2, INN %3, %4, %5, %6, %7, %8, %9'; Tur = '%2, INN %3, %4, %5, %6, %7, %8, %9'", КодЯзыка),
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель,
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"), 
			ДанныеПечати.Грузоотправитель.НаименованиеМеждународное, СведенияОГрузоотправитель.ИНН , ТвойАдрисГрузоотправителя, СведенияОГрузоотправитель.Телефоны, СведенияОГрузоотправитель.НомерСчета, "with bank " + Банка, СведенияОГрузоотправитель.БИК, СведенияОГрузоотправитель.КоррСчет ) ;
			СтруктураПараметров.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		КонецЕсли;
		//КонецПредставлениеОрганизации
		
		СтруктураПараметров.Вставить("ПредставлениеПодразделения", ДанныеПечати.Подразделение);
		
		//ПредставлениеГрузополучателя
		БанкаПол = ДокОсн.БанковскийСчетГрузополучателя.Банк.КороткоеИностранноеНаименование;
		Если не ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		АдресГруз = ДанныеПечати.Ссылка.ЗаказКлиента.АдресГрузополучателя;
	Иначе
		АдресГруз = ДанныеПечати.Ссылка.АдресДоставки;
        КонецЕсли;
		ТвойАдрисГрузополучателя = "";
		Для Каждого Стр Из ДокОсн.Грузополучатель.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрисГрузополучателя = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		ГрузополучательМеждународный = ДанныеПечати.Грузополучатель.НаименованиеМеждународное;
		
		ПредставлениеГрузополучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'; en = '%2, INN %3, %4, %5, %6, %7, %8, %9'; ar = '%2, INN %3, %4, %5, %6, %7, %8, %9'; Tur = '%2, INN %3, %4, %5, %6, %7, %8, %9'", КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе,
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"),
		ГрузополучательМеждународный, СведенияОГрузополучателе.ИНН, ТвойАдрисГрузополучателя, СведенияОГрузополучателе.Телефоны, СведенияОГрузополучателе.НомерСчета, "with bank " + БанкаПол, СведенияОГрузополучателе.БИК, СведенияОГрузополучателе.КоррСчет); 	
		СтруктураПараметров.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);	
		//КонецПредставлениеГрузополучателя
		
		//ПредставлениеПоставщика
		БанкаПост = ДокОсн.БанковскийСчетОрганизации.Банк.КороткоеИностранноеНаименование;
		ТвойАдрис = "";
		Для Каждого Стр Из ДокОсн.Организация.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрис = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		ПредставлениеПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'; en = '%2, INN %3, %4, %5, %6, %7, %8, %9'; ar = '%2, INN %3, %4, %5, %6, %7, %8, %9'; Tur = '%2, INN %3, %4, %5, %6, %7, %8, %9'",КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике,                            
		"ПолноеНаименование,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"),
		ДанныеПечати.Организация.НаименованиеМеждународное, СведенияОПоставщике.ИНН, ТвойАдрис, СведенияОПоставщике.Телефоны, СведенияОПоставщике.НомерСчета,"with bank " + БанкаПост, СведенияОПоставщике.БИК, СведенияОПоставщике.КоррСчет);
		
		СтруктураПараметров.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		//КонецПредставлениеПоставщика
		
		//ПредставлениеПлательщика
		Если ДокОсн.Договор.ОИРПлательщик = ДокОсн.Договор.Контрагент ИЛИ НЕ ЗначениеЗаполнено(ДокОсн.Договор.ОИРПлательщик) Тогда
		БанкаПлат = ДокОсн.БанковскийСчетКонтрагента.Банк.КороткоеИностранноеНаименование;
		ТвойАдрисПокупателя = "";
		Для Каждого Стр Из ДокОсн.Контрагент.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрисПокупателя = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		ПокупательМеждународный = ДокОсн.Контрагент.НаименованиеМеждународное;
		
		ПредставлениеПлательщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'; en = '%2, INN %3, %4, %5, %6, %7, %8'; ar = '%2, INN %3, %4, %5, %6, %7, %8'; Tur = '%2, INN %3, %4, %5, %6, %7, %8'", КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе,
		"ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,БИК,КоррСчет"),
		ПокупательМеждународный, СведенияОПокупателе.ИНН, ТвойАдрисПокупателя, СведенияОПокупателе.НомерСчета, "with bank " + БанкаПлат, СведенияОПокупателе.БИК, СведенияОПокупателе.КоррСчет);
		
		СтруктураПараметров.Вставить("ПредставлениеПлательщика", ПредставлениеПлательщика); 
		Иначе
		// ОИРПлательщик РОИН
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДокОсн.Договор.ОИРПлательщик, ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
		БанкаПлат = ДокОсн.БанковскийСчетКонтрагента.Банк.МеждународноеНаименование;
		ТвойАдрисПокупателя = "";
		Для Каждого Стр Из ДокОсн.Договор.ОИРПлательщик.КонтактнаяИнформация Цикл
			Если Стр.Вид.Наименование = "Международный адрес для платежей (англ.)" Тогда
				ТвойАдрисПокупателя = Стр.Представление;
			КонецЕсли;
		КонецЦикла;
		
		ПокупательМеждународный = ДокОсн.Договор.ОИРПлательщик.НаименованиеМеждународное;
		
		ПредставлениеПлательщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1'; en = '%2, INN %3, %4, %5, %6, %7, %8'; ar = '%2, INN %3, %4, %5, %6, %7, %8'; Tur = '%2, INN %3, %4, %5, %6, %7, %8'", КодЯзыка),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе,
		"ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,БИК,КоррСчет"),
		ПокупательМеждународный, СведенияОПокупателе.ИНН, ТвойАдрисПокупателя, СведенияОПокупателе.НомерСчета, "with bank " + БанкаПлат, СведенияОПокупателе.БИК, СведенияОПокупателе.КоррСчет);
		
		СтруктураПараметров.Вставить("ПредставлениеПлательщика", ПредставлениеПлательщика);
        КонецЕсли;
		//КонецПредставлениеПлательщика
		
		СтруктураПараметров.Вставить("ОрганизацияПоОКПО", СведенияОГрузоотправитель.КодПоОКПО);
		СтруктураПараметров.Вставить("ВидДеятельностиПоОКДП", СведенияОПоставщике.КодОКВЭД);
		СтруктураПараметров.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
		СтруктураПараметров.Вставить("ПоставщикПоОКПО", СведенияОПоставщике.КодПоОКПО);
		СтруктураПараметров.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
		СтруктураПараметров.Вставить("ОснованиеНомер", ДанныеПечати.ОснованиеНомер);
		СтруктураПараметров.Вставить("ОснованиеДата", ДанныеПечати.ОснованиеДата);
		СтруктураПараметров.Вставить("ТранспортнаяНакладнаяНомер", "");
		СтруктураПараметров.Вставить("ТранспортнаяНакладнаяДата", "");
		
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТранспортнаяНакладная.Ссылка КАК Ссылка,
		|	ТранспортнаяНакладная.Номер КАК Номер,
		|	ТранспортнаяНакладная.Дата КАК Дата
		|ИЗ
		|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
		|ГДЕ
		|	ТранспортнаяНакладная.ДокументыОснования.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДанныеПечати.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = ВыборкаДетальныеЗаписи.Номер;
			ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата = Формат(ВыборкаДетальныеЗаписи.Дата, "ДФ=dd.MM.yyyy");
		КонецЦикла;  
		
		Если  КодЯзыка <> "ru" Тогда
			ОбластьМакета.Параметры.Основание = ДокОсн.Договор.НаименованиеИностранное;  
			ОбластьМакета.Параметры.АдресДоставки = ДанныеПечати.Ссылка.ЗаказКлиента.АдресДоставкиИнглиш;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецПроцедуры
	
	Функция ЗаполнитьРеквизитыПодвалаТОРГ12(ДанныеПечати, ИтоговыеСуммы, Макет, КоэффициентПересчетаВТонны)
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ПолнаяДатаДокумента = СтрЗаменить(Формат(ДанныеПечати.Дата, "ДЛФ=DD"),
		НСтр("ru = 'г.'; en = ' '; ar = ' '; Tur = ' '", КодЯзыка),
		НСтр("ru = 'года'; en = ' '; ar = ' '; Tur = ' '", КодЯзыка));
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = СтрНайти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = СтрНайти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		
		СтруктураПараметров = Новый Структура;
		Если КодЯзыка = "ru" Тогда 
			СтруктураПараметров.Вставить("ДатаДокументаДень", """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """");
			СтруктураПараметров.Вставить("ДатаДокументаМесяц", Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1));
			СтруктураПараметров.Вставить("ДатаДокументаГод", Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));
		КонецЕсли;
		Если КодЯзыка = "en" Тогда 
			СтруктураПараметров.Вставить("ДатаДокументаДень", Формат(ДанныеПечати.Дата, "Л=en; ДФ=dd")); 
			СтруктураПараметров.Вставить("ДатаДокументаМесяц", Формат(ДанныеПечати.Дата, "Л=en; ДФ=MMMM")); 
			СтруктураПараметров.Вставить("ДатаДокументаГод", Формат(ДанныеПечати.Дата, "Л=en; ДФ=yyyy"));
		КонецЕсли;
		Если КодЯзыка = "ar" Тогда 
			СтруктураПараметров.Вставить("ДатаДокументаДень",   Формат(ДанныеПечати.Дата, "Л=ar_EG; ДФ=yyyy"));
			СтруктураПараметров.Вставить("ДатаДокументаМесяц", Формат(ДанныеПечати.Дата, "Л=ar_EG; ДФ=MMMM")); 
			СтруктураПараметров.Вставить("ДатаДокументаГод", Формат(ДанныеПечати.Дата, "Л=ar_EG; ДФ=dd"));
		КонецЕсли; 
		Если КодЯзыка = "tur" Тогда 
			СтруктураПараметров.Вставить("ДатаДокументаДень", Формат(ДанныеПечати.Дата, "Л=en; ДФ=dd")); 
			СтруктураПараметров.Вставить("ДатаДокументаМесяц", Формат(ДанныеПечати.Дата, "Л=en; ДФ=MMMM")); 
			СтруктураПараметров.Вставить("ДатаДокументаГод", Формат(ДанныеПечати.Дата, "Л=en; ДФ=yyyy"));
		КонецЕсли;

		
		Если КодЯзыка = "ru" Тогда
			// Главный бухгалтер
			СтруктураПараметров.Вставить("ФИОГлавБухгалтера", ДанныеПечати.ГлавныйБухгалтер);
			
			// Отпуск товара разрешил
			СтруктураПараметров.Вставить("ФИОРуководителя", ДанныеПечати.Руководитель);
			СтруктураПараметров.Вставить("ДолжностьРуководителя", ДанныеПечати.ДолжностьРуководителя);
			
			СтруктураПараметров.Вставить("ФИОКладовщика", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Кладовщик, ДанныеПечати.Дата));
			СтруктураПараметров.Вставить("ДолжностьКладовщика", ДанныеПечати.ДолжностьКладовщика);
			
			// Доверенность
			СтруктураПараметров.Вставить("ДоверенностьНомер", ДанныеПечати.ДоверенностьНомер);
			СтруктураПараметров.Вставить("ДоверенностьДата", Формат(ДанныеПечати.ДоверенностьДата, "ДЛФ=DD"));
			СтруктураПараметров.Вставить("ДоверенностьВыдана", ДанныеПечати.ДоверенностьВыдана);
			СтруктураПараметров.Вставить("ДоверенностьЧерезКого", ДанныеПечати.ДоверенностьЛицо);
		Иначе
			// Главный бухгалтер Инглиш
			СтруктураПараметров.Вставить("ФИОГлавБухгалтера", ДокОсн.ГлавныйБухгалтер.РабочееНаименованиеИнглиш);
			
			// Отпуск товара разрешил Инглиш
			СтруктураПараметров.Вставить("ФИОРуководителя", ДокОсн.Руководитель.РабочееНаименованиеИнглиш);
			СтруктураПараметров.Вставить("ДолжностьРуководителя", ДокОсн.Руководитель.ДолжностьИнглиш);
			
			Кладовщик = ПолучитьСтрокуНаЛатинском(Строка(ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Кладовщик, ДанныеПечати.Дата)));
			СтруктураПараметров.Вставить("ФИОКладовщика", Кладовщик);
			СтруктураПараметров.Вставить("ДолжностьКладовщика", ДокОсн.ДолжностьНаИностранном);
			
			// Доверенность Инглиш
			СтруктураПараметров.Вставить("ДоверенностьНомер", ДанныеПечати.ДоверенностьНомер);
			СтруктураПараметров.Вставить("ДоверенностьДата", Формат(ДанныеПечати.ДоверенностьДата, "ДЛФ=DD"));
			СтруктураПараметров.Вставить("ДоверенностьВыдана", ДанныеПечати.ДоверенностьВыдана);
			СтруктураПараметров.Вставить("ДоверенностьЧерезКого", ДанныеПечати.ДоверенностьЛицо);
		КонецЕсли;
		
		
		
		Если ИтоговыеСуммы.ИтогоКоличествоМест > 0 Тогда
			Если КодЯзыка = "ru" Тогда
				СтруктураПараметров.Вставить("ВсегоМестПрописью", ЧислоПрописью(ИтоговыеСуммы.ИтогоКоличествоМест,  ,",,,,,,,,0"));
			Иначе
				СтруктураПараметров.Вставить("ВсегоМестПрописью", СтрЗаменить(ЧислоПрописью(ИтоговыеСуммы.ИтогоКоличествоМест,"Л=en; ЧН=",",,,,,,,,0"), "00", ""));
			КонецЕсли;
		КонецЕсли;
		
		Если КодЯзыка = "ru" Тогда
			Если ИтоговыеСуммы.ИтогоМассаНетто > 0 Тогда
				ПараметрыМассыПрописью = ПараметрыМассыПрописью(ИтоговыеСуммы.ИтогоМассаНетто, КоэффициентПересчетаВТонны);
				СтруктураПараметров.Вставить("МассаНеттоПрописью", ЧислоПрописью(
				ИтоговыеСуммы.ИтогоМассаНетто * ПараметрыМассыПрописью.Коэффициент,
				"ДП=Истина",
				ПараметрыМассыПрописью.Формат));
			КонецЕсли;
			
			Если ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
				ПараметрыМассыПрописью = ПараметрыМассыПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, КоэффициентПересчетаВТонны);
				СтруктураПараметров.Вставить("МассаБруттоПрописью", ЧислоПрописью(
				ИтоговыеСуммы.ИтогоМассаБрутто * ПараметрыМассыПрописью.Коэффициент,
				"ДП=Истина",
				ПараметрыМассыПрописью.Формат));
			КонецЕсли;
		Иначе
			Если ИтоговыеСуммы.ИтогоМассаНетто > 0 Тогда
				ПараметрыМассыПрописью = ПараметрыМассыПрописью(ИтоговыеСуммы.ИтогоМассаНетто, КоэффициентПересчетаВТонны);
				СтруктураПараметров.Вставить("МассаНеттоПрописью", ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаНетто * ПараметрыМассыПрописью.Коэффициент,"Л=en; ДП=Истина","t, t, kg, kg, 3" + "." ));	
			КонецЕсли;	
		КонецЕсли;
		
		СтруктураПараметров.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью",СтрЗаменить(ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью, "00", ""));
		СтруктураПараметров.Вставить("СуммаПрописью", ИтоговыеСуммы.СуммаПрописью);
		
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		
		Возврат ОбластьМакета;
		
	КонецФункции
	
	Процедура ЗаполнитьТабличныйДокументТОРГ12(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати, МассивОбъектов)
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		КоэффициентПересчетаВТонны     = НоменклатураСервер.КоэффициентПересчетаВТонны(Константы.ЕдиницаИзмеренияВеса.Получить());
		
		ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
		ВыборкаПоТоварам    = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
		ВыборкаПоТоварамНовая = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
		ВыборкаПоТоварамНовая.Колонки.Добавить("НоменклатураКлиента");
		ВыборкаПоТоварамНовая.Очистить();
		ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		  
		//Сообщить("Количество выборки по документам" + ВыборкаПоДокументам.Количество());
		
		ВыводитьГТД = ?(ПараметрыПечати.Свойство("ВыводитьГТД"), ПараметрыПечати.ВыводитьГТД, Ложь);
		
		ПервыйДокумент = Истина;
		
		
		Пока ДанныеПечати.Следующий() Цикл  
			
			ДокОсн = ДанныеПечати.Ссылка;
			 
			Попытка
		ДокЯз = РегистрыСведений.ЯзыкДляПечатиОИР.СоздатьНаборЗаписей();
		ДокЯз.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		ДокЯз.Прочитать();
		Язычник = ДокЯз[0].Язык;	
			Если Язычник = Перечисления.Языки.Русский Тогда
				Если ВыводитьГТД Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ГТД_ru");
				Иначе
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ru");
				КонецЕсли;
				Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ru1");
				КонецЕсли;
				КодЯзыка = "ru";
			ИначеЕсли Язычник = Перечисления.Языки.Английский Тогда  
				Если ВыводитьГТД Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ГТД_en");
				Иначе
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_en");
				КонецЕсли;
				Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_en1");
				КонецЕсли;
				КодЯзыка = "en";
			ИначеЕсли Язычник = Перечисления.Языки.Арабский Тогда  
				Если ВыводитьГТД Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ГТД_en");
				Иначе
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ar");
				КонецЕсли;
				Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ar1");
				КонецЕсли;

				КодЯзыка = "ar"; 
			ИначеЕсли Язычник = Перечисления.Языки.Турецкий Тогда  
				Если ВыводитьГТД Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ГТД_en");
				Иначе
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_tur");
				КонецЕсли;
				Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
					Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_tur1");
				КонецЕсли;

				КодЯзыка = "tur";

			КонецЕсли;
			Исключение
			Если ВыводитьГТД Тогда
				Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ГТД_ru");
			Иначе
				Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ru");
			КонецЕсли;
				Если ДокОсн.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
				Макет = ПолучитьМакет("ПФ_MXL_ТОРГ12_ru1");
			КонецЕсли;
                КодЯзыка = "ru";
			КонецПопытки;
			Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
			
			Если ДанныеПечати.Статус = Перечисления.СтатусыРеализацийТоваровУслуг.КПредоплате Тогда
				
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 установлен статус ""К предоплате"". Печать ТОРГ-12 в данном статусе не требуется.'"),
				ДанныеПечати.Ссылка);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.Сбросить();
			Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
				Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют внеоборотные активы. Печать ТОРГ-12 не требуется'"),
					ДанныеПечати.Ссылка);
				Иначе
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В документе %1 отсутствуют товары. Печать товарной накладной без услуг не требуется'"),
					ДанныеПечати.Ссылка);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
				Продолжить;
			КонецЕсли;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ЗаполнитьРеквизитыШапкиТОРГ12(ДанныеПечати, Макет, ТабличныйДокумент);
			
			НомерСтраницы = 1;
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
			ОбластьМакетаСтандарт   = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			
			ИспользоватьНаборы = Ложь;
			Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(ВыборкаПоДокументам, "ЭтоНабор") Тогда
				ИспользоватьНаборы = Истина;
				ОбластьМакетаНабор         = Макет.ПолучитьОбласть("СтрокаНабор");
				ОбластьМакетаКомплектующие = Макет.ПолучитьОбласть("СтрокаКомплектующие");
			КонецЕсли;
			
			ВыводШапки = 0;
			
			Если ДанныеДляПечати.РезультатПоШапке.Колонки.Найти("ВыводитьКодНоменклатуры") <> Неопределено Тогда
				ВыводитьКодНоменклатуры = ДанныеПечати.ВыводитьКодНоменклатуры;
			Иначе
				ВыводитьКодНоменклатуры = Истина;
			КонецЕсли;
			
			ОперацияОблагаетсяНДСУПокупателя = Ложь;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеПечати,"НалогообложениеНДС") 
				И ДанныеПечати.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
				ОперацияОблагаетсяНДСУПокупателя = Истина;
			КонецЕсли;
			
			ДанныеТоваров = РеализацияТоваровУслугЛокализация.ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов); 
			
			ТЗТовары = ДанныеТоваров.РезультатПоТабличнойЧасти.Выгрузить(); 
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать(); 
			
			ВыборкаПоТоварамНовая.Очистить();
			Если ДокОсн.ОбъединитьСтроки = Ложь Тогда
			Для каждого ТоварыИзДокумента из ВыборкаПоДокументам.Ссылка.Товары Цикл
				СтрокаТЧ =	выборкаПоТоварамНовая.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТоварыИзДокумента);
				Попытка
					Если ЗначениеЗаполнено(ТоварыИзДокумента.КоличествоУпаковок) Тогда
					СтрокаТЧ.КоличествоМест = ТоварыИзДокумента.КоличествоУпаковок / (ТоварыИзДокумента.Упаковка.Ссылка.Числитель);
					Иначе
					СтрокаТЧ.КоличествоМест = СтрокаТЧ.Количество/(СтрокаТЧ.Упаковка.Ссылка.Числитель);
					КонецЕсли;
				исключение
					Если ЗначениеЗаполнено(ТоварыИзДокумента.КоличествоУпаковок) Тогда
					СтрокаТЧ.КоличествоМест = ТоварыИзДокумента.КоличествоУпаковок;
					Иначе
					СтрокаТЧ.КоличествоМест = СтрокаТЧ.Количество;
					КонецЕсли;
				КонецПопытки;
				
				Если ТоварыИзДокумента.КоличествоУпаковок >0 тогда
					СтрокаТЧ.Количество = ТоварыИзДокумента.КоличествоУпаковок;
				КонецЕсли;
				
				
				СтрокаТЧ.СуммаБезНДС    = СтрокаТЧ.СуммаСНДС-СтрокаТЧ.СуммаНДС;
				Попытка
				СтрокаТЧ.НомерСтрокиНаборы  = СтрокаТЧ.НомерСтроки;
			Исключение
				КонецПопытки;
				
				Отбор = Новый Структура("Номенклатура",ТоварыИзДокумента.Номенклатура);
				НашлиСтроки = выборкаПоТоварам.НайтиСтроки(Отбор);
				
				Если НашлиСтроки.Количество()>0 Тогда 
					НайденнаяСтрока = НашлиСтроки[0];
					Если не ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
					ЗаполнитьЗначенияСвойств(СтрокаТЧ,НайденнаяСтрока,"УпаковкаНаименование,СтавкаНДС, ВидУпаковки,ЭтоВозвратнаяТара,НоменклатураНаименование,	НоменклатураНаименованиеКраткое,	НоменклатураКод,	ЕдиницаИзмерения,ЕдиницаИзмеренияНаименование,ЕдиницаИзмеренияКод,Ссылка,ВариантПредставленияНабораВПечатныхФормах,ВариантРасчетаЦеныНабора,НоменклатураНабора,ХарактеристикаНабора,ЭтоКомплектующие,ЭтоНабор,ПолныйНабор, НомерГТД,СтранаПроисхождения");
					Иначе
					ЗаполнитьЗначенияСвойств(СтрокаТЧ,НайденнаяСтрока,"УпаковкаНаименование,СтавкаНДС, ВидУпаковки,ЭтоВозвратнаяТара,НоменклатураНаименование,	НоменклатураКод,	ЕдиницаИзмерения,ЕдиницаИзмеренияНаименование,ЕдиницаИзмеренияКод,Ссылка");
					КонецЕсли;
					Попытка
						
						Если НайденнаяСтрока.ЕдиницаИзмерения.Знаменатель = 0 Тогда 
							МассаНетто =НайденнаяСтрока.Номенклатура.ВесЧислитель/НайденнаяСтрока.Номенклатура.ВесЗнаменатель*СтрокаТЧ.Количество;
						ИначеЕсли НайденнаяСтрока.Номенклатура.ВесЗнаменатель = 0 Тогда 
							Сообщить("Не указан вес единиц измерения - "+Строка(НайденнаяСтрока.Номенклатура));
							
						Иначе	
							МассаНетто =НайденнаяСтрока.ЕдиницаИзмерения.Числитель/НайденнаяСтрока.ЕдиницаИзмерения.Знаменатель*СтрокаТЧ.Количество/СтрокаТЧ.Упаковка.Ссылка.Числитель;
						КонецЕсли;
						МассаБрутто =МассаНетто;
					Исключение
						МассаНетто = 0;
						МассаБрутто = 0;
					КонецПопытки;
					
					
					СтрокаВТЗ = ТЗТовары.НайтиСтроки(Новый Структура("Номенклатура, Количество", ТоварыИзДокумента.Номенклатура, СтрокаТЧ.Количество));
					Если СтрокаВТЗ.Количество() Тогда
						СтрокаТЧ.МассаНетто =  СтрокаВТЗ[0].МассаНетто;
						ИтоговыеСуммы.ИтогоМассаНетто = ИтоговыеСуммы.ИтогоМассаНетто + СтрокаТЧ.МассаНетто;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			Иначе	
				ВыборкаПоТоварамНовая = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
				Для Каждого Стр ИЗ ВыборкаПоТоварамНовая Цикл
					Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
						ВыборкаПоТоварамНовая.Удалить(Стр);
					Иначе
						Стр.МассаБрутто = Стр.МассаНетто;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			КоличествоСтрок = выборкаПоТоварамНовая.Количество();
			НомерСтроки = 0;  
			
			СуммаНаСтранице = 0;
			СуммаНаСтраницеСНДС = 0;
			
			Для каждого СтрокаТовары из выборкаПоТоварамНовая Цикл
				
				Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, ИспользоватьНаборы) Тогда
					ОбластьМакета = ОбластьМакетаНабор;
				ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
					ОбластьМакета = ОбластьМакетаКомплектующие;
				Иначе
					ОбластьМакета = ОбластьМакетаСтандарт;
				КонецЕсли;
				
				Если НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
					ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, Неопределено);
				Иначе
					НомерСтроки = НомерСтроки + 1;
					ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки);
				КонецЕсли;
				
				Если ОперацияОблагаетсяНДСУПокупателя Тогда
					ОбластьМакета.Параметры.СтавкаНДС = НСтр("ru='НДС исчисляется налоговым агентом'", Метаданные.Языки.Русский.КодЯзыка);
					ОбластьМакета.Параметры.СуммаСНДС = "--";
					ОбластьМакета.Параметры.СуммаНДС = "--";
				КонецЕсли;
				
				Если НомерСтроки = 0 И ВыводШапки <> 2 Тогда
					ВыводШапки = 1;
				КонецЕсли;
				
				Если (НомерСтроки = 1 И ВыводШапки = 0) ИЛИ (НомерСтроки = 0 И ВыводШапки = 1) Тогда
					
					ВыводШапки = 2;
					
					СтруктураПараметров = Новый Структура;
					Если КодЯзыка = "ru" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + НомерСтраницы);
					КонецЕсли;
					Если КодЯзыка = "en" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Page " + НомерСтраницы);
					КонецЕсли;
					Если КодЯзыка = "ar" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "الصفحة " + Формат(НомерСтраницы, "Л=ar_EG"));
					КонецЕсли;
					Если КодЯзыка = "tur" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Sayfa " + Формат(НомерСтраницы, "Л=tr_TR"));
					КонецЕсли;
					ОбластьЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				Если НомерСтроки = КоличествоСтрок Тогда
					ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
					ОбластьПодвала = ЗаполнитьРеквизитыПодвалаТОРГ12(ДанныеПечати, ИтоговыеСуммы, Макет, КоэффициентПересчетаВТонны);
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;
				
				Если ДокОсн.ПереносТОРГ12 Тогда
				Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы); 
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					ОбнулитьИтогиПоСтранице(ИтоговыеСуммы);
					СуммаНаСтранице = 0;
					СуммаНаСтраницеСНДС = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					СтруктураПараметров = Новый Структура;
					Если КодЯзыка = "ru" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + НомерСтраницы);
					КонецЕсли;
					Если КодЯзыка = "en" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Page " + НомерСтраницы);
					КонецЕсли;
					Если КодЯзыка = "ar" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "الصفحة " + Формат(НомерСтраницы, "Л=ar_EG"));
					КонецЕсли; 
					Если КодЯзыка = "tur" Тогда
						СтруктураПараметров.Вставить("НомерСтраницы", "Sayfa " + НомерСтраницы);
					КонецЕсли;
					ОбластьЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				КонецЕсли;
				
				
				Если ДокОсн.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда 
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СуммыДокументовВВалютахУчета.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
					|	СуммыДокументовВВалютахУчета.СуммаНДСРегл КАК СуммаНДСРегл
					|ИЗ
					|	РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
					|ГДЕ
					|	СуммыДокументовВВалютахУчета.Регистратор = &Регистратор
					|	И СуммыДокументовВВалютахУчета.НомерСтроки = &НомерСтроки";
					Запрос.УстановитьПараметр("Регистратор", ДокОсн);
					Запрос.УстановитьПараметр("НомерСтроки", ОбластьМакета.Параметры.НомерСтроки);
					РезультатЗапроса = Запрос.Выполнить();
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл      
						ОбластьМакета.Параметры.СуммаБезНДС = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;
						ОбластьМакета.Параметры.СуммаСНДС   = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
						ОбластьМакета.Параметры.Цена = ВыборкаДетальныеЗаписи.СуммаБезНДСРегл/ОбластьМакета.Параметры.Количество; 
						СуммаНаСтранице = СуммаНаСтранице + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл;  
						СуммаНаСтраницеСНДС = СуммаНаСтраницеСНДС + ВыборкаДетальныеЗаписи.СуммаБезНДСРегл + ВыборкаДетальныеЗаписи.СуммаНДСРегл;
					КонецЦикла;
				КонецЕсли;
				Попытка
					Если ДокОсн.ЦенаВключаетНДС Тогда
					ОбластьМакета.Параметры.Цена = СтрокаТовары.Цена / (1 + (СтрЗаменить(СтрокаТовары.СтавкаНДС, "%", "")) / 100);
				КонецЕсли;
				Исключение
				КОнецПопытки;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
					РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				КонецЕсли;
				
			КонецЦикла;
			
			// Выводим итоги по последней странице
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице"); 
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			Если ОперацияОблагаетсяНДСУПокупателя Тогда
				ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице = "--";
				ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаНДСНаСтранице = "--";
			КонецЕсли;
			Если ДокОсн.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
				ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице = СуммаНаСТраницеСНДС;
				ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаНДСНаСтранице = "--"; 
				ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаБезНДСНаСтранице = СуммаНаСтранице;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице); 
			
			
			// Выводим итоги по документу в целом
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			Если ОперацияОблагаетсяНДСУПокупателя Тогда
				ОбластьМакета.Параметры.ИтогоСуммаСНДС = "--";
				ОбластьМакета.Параметры.ИтогоСуммаНДС = "--";
			КонецЕсли; 
			Если ДокОсн.Договор.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда 
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеОснованийСчетовФактур.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
				|	ДанныеОснованийСчетовФактур.БазаНДСРегл КАК БазаНДСРегл
				|ИЗ
				|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
				|ГДЕ
				|	ДанныеОснованийСчетовФактур.Регистратор = &Регистратор";
				
				Запрос.УстановитьПараметр("Регистратор", ДокОсн);
				Результат = Запрос.Выполнить().Выгрузить();
				СуммаНДС1 = Результат[0].СуммаБезНДСРегл;
				СуммаСНДС2 = Результат[0].БазаНДСРегл;	
				
				СуммаВБаксах = СуммаНДС1;
				ОбластьМакета.Параметры.ИтогоСуммаСНДС = СуммаВБаксах;
				ОбластьМакета.Параметры.ИтогоСуммаБезНДС = СуммаВБаксах;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки, ВалютаРегламентированногоУчета);
			ОбластьПодвала = ЗаполнитьРеквизитыПодвалаТОРГ12(ДанныеПечати, ИтоговыеСуммы, Макет, КоэффициентПересчетаВТонны);
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область ОтветственныеЛицаСервер
	
	Процедура СформироватьВременнуюТаблицуОтветственныхЛицДокументов(ОтборДокументы, МенеджерВременныхТаблиц,
		ИмяРеквизитаОрганизация = "Организация", РеквизитыОтветственныеЛица = Неопределено,
		ИмяТаблицыОтветственныеЛица = "ТаблицаОтветственныеЛица")
		
		Если (ТипЗнч(ОтборДокументы) = Тип("Массив") ИЛИ ТипЗнч(ОтборДокументы) = Тип("ФиксированныйМассив"))
			И ОтборДокументы.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ОтборДокументы) <> Тип("Массив") И ТипЗнч(ОтборДокументы) <> Тип("ФиксированныйМассив") Тогда // это ссылка на документ
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(ОтборДокументы);
		Иначе // это массив ссылок на документы
			МассивОбъектов = ОтборДокументы;
		КонецЕсли;
		
		МетаданныеДокумента = МассивОбъектов[0].Метаданные();
		
		ИменаПолейПереданыВПараметрах = (РеквизитыОтветственныеЛица <> Неопределено);
		Если НЕ ИменаПолейПереданыВПараметрах Тогда
			РеквизитыОтветственныеЛица = ОтветственныеЛицаПовтИсп.РеквизитыОтветственныхЛицДокумента(МетаданныеДокумента.Имя);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РеквизитыОтветственныеЛица) Тогда
			Возврат;
		КонецЕсли;
		
		ИмяРеквизитаОрганизация = "ДокументДляПечати." + ИмяРеквизитаОрганизация;
		
		Если МенеджерВременныхТаблиц = Неопределено Тогда
			МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		// Получим данные из документов
		ШаблонЗапроса = 
		"ВЫБРАТЬ
		|	ДокументДляПечати.Ссылка 					КАК Ссылка,
		|	НАЧАЛОПЕРИОДА(ДокументДляПечати.Дата, ДЕНЬ) КАК Дата,
		|	%Организация%								КАК Организация,
		|	%ИмяРеквизита% 								КАК ВыбранноеОтветственноеЛицо,
		|	ЗНАЧЕНИЕ(%ОтветственноеЛицо%) 				КАК ОтветственноеЛицо
		|%СозданиеВременнойТаблицы%
		|ИЗ
		|	Документ." + МетаданныеДокумента.Имя + " КАК ДокументДляПечати
		|ГДЕ
		|	ДокументДляПечати.Ссылка В(&МассивОбъектов)";
		
		Индекс = 0;
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			
			Индекс 		 = Индекс + 1;
			ТекстЗапроса = ШаблонЗапроса;
			
			Если Индекс > 1 Тогда
				ТекстЗапроса = "
				|ОБЪЕДИНИТЬ ВСЕ
				|" + ТекстЗапроса;
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%Организация%", 			 	ИмяРеквизитаОрганизация);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяРеквизита%", 			
			?(ИменаПолейПереданыВПараметрах, 
			"ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)", // будут выбраны значения по умолчанию
			"ДокументДляПечати." + КлючИЗначение.Ключ));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ОтветственноеЛицо%", 		ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%СозданиеВременнойТаблицы%", ?(Индекс = 1, "ПОМЕСТИТЬ ВТДанныеДокументов", ""));
			
			Запрос.Текст = Запрос.Текст + ТекстЗапроса;
			
		КонецЦикла;
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		// Заполним пустые поля ответственных лиц значениями по умолчанию
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДанныеДокументов.Организация КАК Организация,
		|	ВТДанныеДокументов.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|	ВТДанныеДокументов.Дата КАК Дата
		|ПОМЕСТИТЬ ВТНезаполненныеОтветственные
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|ГДЕ
		|	ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТНезаполненныеОтветственные.Организация КАК Организация,
		|	ВТНезаполненныеОтветственные.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|	ВТНезаполненныеОтветственные.Дата КАК Дата,
		|	ОтветственныеЛицаОрганизаций.Ссылка КАК Ответственный,
		|	ОтветственныеЛицаОрганизаций.ПравоПодписиПоДоверенности КАК ПравоПодписиПоДоверенности
		|ПОМЕСТИТЬ ВТКандидатыВОтветственныеПоУмолчанию
		|ИЗ
		|	ВТНезаполненныеОтветственные КАК ВТНезаполненныеОтветственные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
		|		ПО ВТНезаполненныеОтветственные.Организация = ОтветственныеЛицаОрганизаций.Владелец
		|			И ВТНезаполненныеОтветственные.ОтветственноеЛицо = ОтветственныеЛицаОрганизаций.ОтветственноеЛицо
		|			И ВТНезаполненныеОтветственные.Дата >= ОтветственныеЛицаОрганизаций.ДатаНачала
		|			И (ВТНезаполненныеОтветственные.Дата <= ОтветственныеЛицаОрганизаций.ДатаОкончания
		|				ИЛИ ОтветственныеЛицаОрганизаций.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|	ВТКандидатыВОтветственныеПоУмолчанию.Дата,
		|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицоПоУмолчанию
		|ПОМЕСТИТЬ ВТОтветственныеПоУмолчанию
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация КАК Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо КАК ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата КАК Дата,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Ответственный КАК ОтветственноеЛицоПоУмолчанию
		|	ИЗ
		|		ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
		|	ГДЕ
		|		НЕ ВТКандидатыВОтветственныеПоУмолчанию.ПравоПодписиПоДоверенности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата,
		|		МИНИМУМ(ВТКандидатыВОтветственныеПоУмолчанию.Ответственный)
		|	ИЗ
		|		ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
		|
		|	СГРУППИРОВАТЬ ПО
		|		ВТКандидатыВОтветственныеПоУмолчанию.Организация,
		|		ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
		|		ВТКандидатыВОтветственныеПоУмолчанию.Дата
		|	
		|	ИМЕЮЩИЕ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТКандидатыВОтветственныеПоУмолчанию.Ответственный) = 1
		|	) КАК ВТКандидатыВОтветственныеПоУмолчанию
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОтветственноеЛицо,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.Ссылка,
		|	ВТДанныеДокументов.Дата,
		|	ВТДанныеДокументов.ОтветственноеЛицо,
		|	ВЫБОР
		|		КОГДА ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ВТОтветственныеПоУмолчанию.ОтветственноеЛицоПоУмолчанию, ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка))
		|		ИНАЧЕ ВТДанныеДокументов.ВыбранноеОтветственноеЛицо
		|	КОНЕЦ КАК ОтветственноеЛицоПоУмолчанию
		|ПОМЕСТИТЬ ВТДокументыСОтветственными
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственныеПоУмолчанию КАК ВТОтветственныеПоУмолчанию
		|		ПО ВТДанныеДокументов.Организация = ВТОтветственныеПоУмолчанию.Организация
		|			И ВТДанныеДокументов.ОтветственноеЛицо = ВТОтветственныеПоУмолчанию.ОтветственноеЛицо
		|			И ВТДанныеДокументов.Дата = ВТОтветственныеПоУмолчанию.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТДокументыСОтветственными.Ссылка,
		|	МАКСИМУМ(ФИОФизическихЛиц.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериодыФИОФизЛиц
		|ИЗ
		|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
		|			И ВТДокументыСОтветственными.Дата >= ФИОФизическихЛиц.Период
		|ГДЕ
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|	И ФИОФизическихЛиц.Период ЕСТЬ НЕ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо,
		|	ВТДокументыСОтветственными.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПериодыФИОФизЛиц.ФизическоеЛицо,
		|	ВТПериодыФИОФизЛиц.Ссылка,
		|	ВЫРАЗИТЬ(ФИОФизическихЛиц.Фамилия + ВЫБОР
		|			КОГДА ФИОФизическихЛиц.Имя = """"
		|				ТОГДА """"
		|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Имя, 1, 1) + "".""
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ФИОФизическихЛиц.Отчество = """"
		|				ТОГДА """"
		|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Отчество, 1, 1) + "".""
		|		КОНЕЦ КАК СТРОКА(50)) КАК ФИО
		|ПОМЕСТИТЬ ВТФИОФизЛиц
		|ИЗ
		|	ВТПериодыФИОФизЛиц КАК ВТПериодыФИОФизЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|		ПО ВТПериодыФИОФизЛиц.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
		|			И ВТПериодыФИОФизЛиц.Период = ФИОФизическихЛиц.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДокументыСОтветственными.Ссылка,
		|	ВТДокументыСОтветственными.ОтветственноеЛицо,
		|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию,
		|	ЕСТЬNULL(ВТФИОФизЛиц.ФИО, """") КАК ФИО
		|ПОМЕСТИТЬ ВТДокументыСФИООтветственных
		|ИЗ
		|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизЛиц КАК ВТФИОФизЛиц
		|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ВТФИОФизЛиц.ФизическоеЛицо
		|			И ВТДокументыСОтветственными.Ссылка = ВТФИОФизЛиц.Ссылка";
		
		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		// Свернем результат - поместим всех ответственных в одну запись выборки запроса
		ШаблонЗапроса = "
		|ВЫБРАТЬ
		|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаЗапроса%
		|ПОМЕСТИТЬ ВТДокументыСФИООтветственныхСвернутая
		|ИЗ
		|(%ВложенныйЗапрос%) КАК ВТДокументыСФИООтветственных
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТДокументыСФИООтветственных.Ссылка
		|";
		
		ШаблонВложенногоЗапроса = "
		|ВЫБРАТЬ
		|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаВложенногоЗапроса%
		|ИЗ
		|	ВТДокументыСФИООтветственных КАК ВТДокументыСФИООтветственных
		|ГДЕ
		|	ВТДокументыСФИООтветственных.ОтветственноеЛицо = ЗНАЧЕНИЕ(%ОтветственноеЛицо%)
		|";
		
		Индекс = 0;
		СтрокаВыборкаЗапроса = "";
		ТекстВложенногоЗапроса = "";
		
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			
			Индекс = Индекс + 1;
			
			СтрокаВыборкаВложенногоЗапроса = "";
			Для Каждого КлючИЗначение2 Из РеквизитыОтветственныеЛица Цикл
				
				Если КлючИЗначение.Ключ = КлючИЗначение2.Ключ Тогда
					СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
					|	ВТДокументыСФИООтветственных.ОтветственноеЛицоПоУмолчанию КАК " + КлючИЗначение2.Ключ + ",
					|	ВТДокументыСФИООтветственных.ФИО КАК " + КлючИЗначение2.Ключ + "ФИО";
				Иначе
					СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
					|	ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка) КАК " + КлючИЗначение2.Ключ + ",
					|	"""" КАК " + КлючИЗначение2.Ключ + "ФИО";
				КонецЕсли;
				
			КонецЦикла;
			
			Если Индекс > 1 Тогда
				ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + ШаблонВложенногоЗапроса;
			
			ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%СтрокаВыборкаВложенногоЗапроса%", СтрокаВыборкаВложенногоЗапроса);
			ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%ОтветственноеЛицо%", 			  ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
			
			СтрокаВыборкаЗапроса = СтрокаВыборкаЗапроса + ",
			|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + ") КАК " + КлючИЗначение.Ключ + ",
			|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + "ФИО) КАК " + КлючИЗначение.Ключ + "ФИО";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборкаЗапроса%", СтрокаВыборкаЗапроса);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса ,  "%ВложенныйЗапрос%", 	 ТекстВложенногоЗапроса);
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
		// Расшифруем данные - выберем нужные реквизиты ответственных лиц в отдельные поля
		ШаблонЗапроса = "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСвернутая.Ссылка КАК Ссылка%СтрокаВыборка%
		|ПОМЕСТИТЬ %ИмяТаблицыОтветственныеЛица%
		|ИЗ
		|	ВТДокументыСФИООтветственныхСвернутая КАК ВТСвернутая
		|";
		
		ШаблонСтрокиВыборки = ",
		|	ВТСвернутая.%Реквизит% КАК %Реквизит%,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК %Реквизит%ФизическоеЛицо,
		|	ВТСвернутая.%Реквизит%ФИО 
		|		+ ВЫБОР
		|			КОГДА ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи ЕСТь NULL
		|				ИЛИ ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи = """"
		|			ТОГДА """"
		|			ИНАЧЕ "", "" + ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи
		|		  КОНЕЦ КАК %Реквизит%Наименование,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.Должность, """") КАК %Реквизит%Должность,
		|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи, """") КАК %Реквизит%ОснованиеПраваПодписи";
		
		СтрокаВыборка = "";
		Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
			СтрокаВыборка = СтрокаВыборка + СтрЗаменить(ШаблонСтрокиВыборки , "%Реквизит%", КлючИЗначение.Ключ);
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборка%", СтрокаВыборка);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяТаблицыОтветственныеЛица%", ИмяТаблицыОтветственныеЛица);
		
		// Удалим ненужные временные таблицы
		Запрос.Текст = Запрос.Текст + ТекстЗапроса + "
		|;
		|УНИЧТОЖИТЬ ВТДанныеДокументов
		|;
		|УНИЧТОЖИТЬ ВТНезаполненныеОтветственные
		|;
		|УНИЧТОЖИТЬ ВТОтветственныеПоУмолчанию
		|;
		|УНИЧТОЖИТЬ ВТКандидатыВОтветственныеПоУмолчанию
		|;
		|УНИЧТОЖИТЬ ВТДокументыСОтветственными
		|;
		|УНИЧТОЖИТЬ ВТПериодыФИОФизЛиц
		|;
		|УНИЧТОЖИТЬ ВТФИОФизЛиц
		|;
		|УНИЧТОЖИТЬ ВТДокументыСФИООтветственных
		|;
		|УНИЧТОЖИТЬ ВТДокументыСФИООтветственныхСвернутая
		|";
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область ПродажиСервер
	
	Функция ПараметрыЗаполненияВременнойТаблицыТоваров()
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПересчитыватьВВалютуРегл", Истина);
		СтруктураПараметров.Вставить("ВключаяНомераГТД", Ложь);
		СтруктураПараметров.Вставить("ВключаяДоКорректировки", Ложь);
		СтруктураПараметров.Вставить("АктуализироватьРасчеты", Истина);
		
		Возврат СтруктураПараметров;
		
	КонецФункции
	
	Процедура ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, ИмяТаблицыТоваров = "ТаблицаТоваров")
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|	УпаковкиНоменклатуры.Владелец КАК Владелец,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА УпаковкиНоменклатуры.Ссылка ЕСТЬ NULL 
		|				ТОГДА 1
		|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
		|		КОНЕЦ) КАК Коэффициент
		|ПОМЕСТИТЬ Упаковки
		|ИЗ
		|	&ИмяТаблицыТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|		ПО (УпаковкиНоменклатуры.Родитель = ТаблицаТоваров.Упаковка)
		|			И УпаковкиНоменклатуры.Владелец = 
		|				ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|						ТОГДА ТаблицаТоваров.Номенклатура
		|					ИНАЧЕ ТаблицаТоваров.Упаковка.Владелец
		|				КОНЕЦ
		|ГДЕ
		|	НЕ УпаковкиНоменклатуры.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Упаковка,
		|	УпаковкиНоменклатуры.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Упаковки.Номенклатура,
		|	Упаковки.Упаковка КАК Упаковка,
		|	&ТекстЗапросаКоэффициентУпаковки2 КАК КоэффициентУпаковки,
		|	МИНИМУМ(УпаковкиНоменклатуры.Ссылка) КАК ВложеннаяУпаковка,
		|	МИНИМУМ(&ТекстЗапросаКоэффициентУпаковки3) КАК КоэффициентВложеннойУпаковки
		|ПОМЕСТИТЬ ВложенныеУпаковки
		|ИЗ
		|	Упаковки КАК Упаковки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|		ПО Упаковки.Владелец = УпаковкиНоменклатуры.Владелец
		|			И Упаковки.Коэффициент = &ТекстЗапросаКоэффициентУпаковки3
		|ГДЕ
		|	УпаковкиНоменклатуры.Родитель = Упаковки.Упаковка
		|
		|СГРУППИРОВАТЬ ПО
		|	Упаковки.Номенклатура,
		|	Упаковки.Упаковка,
		|	&ТекстЗапросаКоэффициентУпаковки2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.КоличествоУпаковок,
		|	ТаблицаТоваров.Количество,
		|	ТаблицаТоваров.Упаковка,
		|	ТаблицаТоваров.НомерСтроки,
		|	ВЫБОР
		|		КОГДА ВложенныеУпаковки.ВложеннаяУпаковка ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|						ТОГДА 1
		|					ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки4
		|				КОНЕЦ
		|		ИНАЧЕ ВложенныеУпаковки.КоэффициентУпаковки
		|	КОНЕЦ КАК КоэффициентУпаковки,
		|	ВЫБОР
		|		КОГДА ВложенныеУпаковки.ВложеннаяУпаковка ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|						ТОГДА 1
		|					ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки4
		|				КОНЕЦ
		|		ИНАЧЕ ВложенныеУпаковки.КоэффициентВложеннойУпаковки
		|	КОНЕЦ КАК КоэффициентВложеннойУпаковки,
		|	ВЫБОР
		|		КОГДА ВложенныеУпаковки.ВложеннаяУпаковка ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|						ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
		|					ИНАЧЕ ТаблицаТоваров.Упаковка
		|				КОНЕЦ
		|		ИНАЧЕ ВложенныеУпаковки.ВложеннаяУпаковка
		|	КОНЕЦ КАК ВидУпаковки,
		|	ТаблицаТоваров.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ КоэффициентыУпаковок
		|ИЗ
		|	&ИмяТаблицыТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенныеУпаковки КАК ВложенныеУпаковки
		|		ПО ТаблицаТоваров.Номенклатура = ВложенныеУпаковки.Номенклатура
		|			И ТаблицаТоваров.Упаковка = ВложенныеУпаковки.Упаковка
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Упаковки
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВложенныеУпаковки
		|";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"ТаблицаТоваров.Номенклатура"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Упаковки.Упаковка",
		"Упаковки.Номенклатура"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки3",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"Упаковки.Номенклатура"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки4",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТоваров.Упаковка",
		"ТаблицаТоваров.Номенклатура"));
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыТоваров", ИмяТаблицыТоваров);
		
		Запрос.Выполнить();
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область Прочее
	
	Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
		ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
	КонецПроцедуры
	
	Функция СтруктураРесурсовДляИтогов()
		Структура = Новый Структура;
		
		Структура.Вставить("СуммаБезНДС",       0);
		Структура.Вставить("СуммаНДС",          0);
		Структура.Вставить("СуммаСНДС",         0);
		Структура.Вставить("Количество",        0);
		Структура.Вставить("КоличествоМест",    0);
		Структура.Вставить("КоличествоПринято", 0);
		Структура.Вставить("МассаБрутто",       0);
		Структура.Вставить("МассаНетто",        0);
		Структура.Вставить("Сумма",             0);
		
		Структура.Вставить("РазницаБезНДСУвеличение", 0);
		Структура.Вставить("РазницаБезНДСУменьшение", 0);
		Структура.Вставить("РазницаНДСУвеличение",    0);
		Структура.Вставить("РазницаНДСУменьшение",    0);
		Структура.Вставить("РазницаСНДСУвеличение",   0);
		Структура.Вставить("РазницаСНДСУменьшение",   0);
		
		Возврат Структура; 
	КонецФункции
	
	Функция ПараметрыМассыПрописью(Масса, КоэффициентПересчетаВТонны)
		
		МассаТонны = Масса * КоэффициентПересчетаВТонны;
		Если МассаТонны > 1 Тогда
			Коэффициент = 1;
			СтрокаФормат = "т, т, т, ж, кг, кг, кг, м, " + ?(Окр(МассаТонны) = МассаТонны, "0", "3");
		ИначеЕсли МассаТонны * 1000 > 1 Тогда
			Коэффициент = 1000;
			СтрокаФормат = "кг, кг, кг, м, г, г, г, м, " + ?(Окр(МассаТонны * Коэффициент) = МассаТонны * Коэффициент, "0", "3");
		Иначе
			Коэффициент = 1000000;
			СтрокаФормат = "г, г, г, м, г, г, г, м, 0";
		КонецЕсли;
		
		Возврат Новый Структура("Формат, Коэффициент", СтрокаФормат, Коэффициент*КоэффициентПересчетаВТонны);
		
	КонецФункции
	
	Функция СведенияОГрузоотправителе(ДанныеПечати)
		
		Если ТипЗнч(ДанныеПечати.Грузоотправитель) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане") Тогда
			СведенияОГрузоотправителе = Справочники.РегистрацииВНалоговомОргане.СведенияОПодразделении(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		Иначе
			СведенияОГрузоотправителе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		КонецЕсли;
		
		Возврат СведенияОГрузоотправителе;
		
	КонецФункции
	
	Процедура ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьМакета)
		
		Для Сч = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
			
			ТекПараметр = ОбластьМакета.Параметры.Получить(Сч);
			
			Если НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
				ОбластьМакета.Параметры.Установить(Сч, "--");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Процедура ОкруглитьДоЦелого(ОкругляемоеЧисло)
		Если ЗначениеЗаполнено(ОкругляемоеЧисло) Тогда
			Если ОкругляемоеЧисло <> Цел(ОкругляемоеЧисло) Тогда
				ОкругляемоеЧисло = Цел(ОкругляемоеЧисло) + 1;
			КонецЕсли;
		КонецЕсли;
	КонецПроцедуры
	
	Функция ТаблицаКонтрагентовСчетаФактуры(ДанныеПечати, ДанныеКонтрагентов)
		
		ТаблицаКонтрагентов = Новый ТаблицаЗначений;
		ТаблицаКонтрагентов.Колонки.Добавить("СведенияОПокупателе");
		ТаблицаКонтрагентов.Колонки.Добавить("СведенияОГрузополучателе");
		ТаблицаКонтрагентов.Колонки.Добавить("КПП");
		ТаблицаКонтрагентов.Колонки.Добавить("ИНН");
		
		Если ДанныеКонтрагентов <> Неопределено Тогда
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ДанныеКонтрагентов.НайтиСледующий(СтруктураПоиска);
			ВыборкаКонтрагентов = ДанныеКонтрагентов.Выбрать();
			
			Пока ВыборкаКонтрагентов.Следующий() Цикл
				
				СтрокаКонтрагента = ТаблицаКонтрагентов.Добавить();
				СтрокаКонтрагента.СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ВыборкаКонтрагентов.Контрагент, ДанныеПечати.Дата);
				СтрокаКонтрагента.СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
				ВыборкаКонтрагентов.Грузополучатель, ДанныеПечати.Дата);
				
				Если ПустаяСтрока(ВыборкаКонтрагентов.КПППокупателя) Тогда
					СтрокаКонтрагента.КПП = СтрокаКонтрагента.СведенияОПокупателе.КПП
				Иначе
					СтрокаКонтрагента.КПП = ВыборкаКонтрагентов.КПППокупателя;
				КонецЕсли;
				
				СтрокаКонтрагента.ИНН = ВыборкаКонтрагентов.ИННПокупателя;
				
			КонецЦикла;
			
		Иначе
			
			СтрокаКонтрагента = ТаблицаКонтрагентов.Добавить();
			СтрокаКонтрагента.СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Контрагент, ДанныеПечати.Дата);
			СтрокаКонтрагента.СведенияОГрузополучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
			ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
			Если ПустаяСтрока(ДанныеПечати.КПППокупателя) Тогда
				СтрокаКонтрагента.КПП = СтрокаКонтрагента.СведенияОПокупателе.КПП
			Иначе
				СтрокаКонтрагента.КПП = ДанныеПечати.КПППокупателя;
			КонецЕсли;
			СтрокаКонтрагента.ИНН = ДанныеПечати.ИННПокупателя;
			
		КонецЕсли;
		
		Возврат ТаблицаКонтрагентов;
		
	КонецФункции
	
	Функция ВыводитьКодыТНВЭД(ДанныеПечати, ДействуетПостановление981)
		ПараметрыВывода = Новый Структура("ВыводитьВСтроке, ВыводитьВКолонке");
		
		ПараметрыВывода.ВыводитьВСтроке = ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный")
		И УчетНДСУП.СтранаЯвляетсяЧленомТаможенногоСоюза(ДанныеПечати.СтранаРегистрации, ДанныеПечати.Дата)
		И ДанныеПечати.Дата >= УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта;
		ПараметрыВывода.ВыводитьВКолонке = ПараметрыВывода.ВыводитьВСтроке И ДействуетПостановление981;
		
		Возврат ПараметрыВывода
		
	КонецФункции
	
	Функция ВедетсяУчетНДСПоФЗ56(ДатаДокумента, ДатаИсправления)
		
		НачалоПримененияФЗ56 = '20170701';
		
		Дата = ?(ЗначениеЗаполнено(ДатаИсправления),ДатаИсправления,ДатаДокумента);
		
		Если Дата < НачалоПримененияФЗ56 Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецФункции
	
	Функция ДействуетПостановление981(ДатаДокумента, ДатаИсправления)
		
		НачалоПрименения = '20171001';
		
		Дата = ?(ЗначениеЗаполнено(ДатаИсправления),ДатаИсправления,ДатаДокумента);
		
		Если Дата < НачалоПрименения Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецФункции
	
	Функция ПолучитьСтрокуНаЛатинском(ИсходныйТекст)
		СоответствиеСимволов = Новый Соответствие;
		СоответствиеСимволов.Вставить("А", "A");
		СоответствиеСимволов.Вставить("Б", "B");
		СоответствиеСимволов.Вставить("В", "V");
		СоответствиеСимволов.Вставить("Г", "G");
		СоответствиеСимволов.Вставить("Д", "D");
		СоответствиеСимволов.Вставить("Е", "E");
		СоответствиеСимволов.Вставить("Ё", "E");
		СоответствиеСимволов.Вставить("Ж", "ZH");
		СоответствиеСимволов.Вставить("З", "Z");
		СоответствиеСимволов.Вставить("И", "I");
		СоответствиеСимволов.Вставить("Й", "Y");
		СоответствиеСимволов.Вставить("К", "K");
		СоответствиеСимволов.Вставить("Л", "L");
		СоответствиеСимволов.Вставить("М", "M");
		СоответствиеСимволов.Вставить("Н", "N");
		СоответствиеСимволов.Вставить("О", "O");
		СоответствиеСимволов.Вставить("П", "P");
		СоответствиеСимволов.Вставить("Р", "R");
		СоответствиеСимволов.Вставить("С", "S");
		СоответствиеСимволов.Вставить("Т", "T");
		СоответствиеСимволов.Вставить("У", "U");
		СоответствиеСимволов.Вставить("Ф", "F");
		СоответствиеСимволов.Вставить("Х", "KH");
		СоответствиеСимволов.Вставить("Ц", "TS");
		СоответствиеСимволов.Вставить("Ч", "CH");
		СоответствиеСимволов.Вставить("Ш", "SH");
		СоответствиеСимволов.Вставить("Щ", "SHCH");
		СоответствиеСимволов.Вставить("Ъ", "");
		СоответствиеСимволов.Вставить("Ы", "Y");
		СоответствиеСимволов.Вставить("Ь", "");
		СоответствиеСимволов.Вставить("Э", "E");
		СоответствиеСимволов.Вставить("Ю", "YU");
		СоответствиеСимволов.Вставить("Я", "YA");
		СоответствиеСимволов.Вставить("а", "a");
		СоответствиеСимволов.Вставить("б", "b");
		СоответствиеСимволов.Вставить("в", "v");
		СоответствиеСимволов.Вставить("г", "g");
		СоответствиеСимволов.Вставить("д", "d");
		СоответствиеСимволов.Вставить("е", "e");
		СоответствиеСимволов.Вставить("ё", "e");
		СоответствиеСимволов.Вставить("ж", "zh");
		СоответствиеСимволов.Вставить("з", "z");
		СоответствиеСимволов.Вставить("и", "i");
		СоответствиеСимволов.Вставить("й", "y");
		СоответствиеСимволов.Вставить("к", "k");
		СоответствиеСимволов.Вставить("л", "l");
		СоответствиеСимволов.Вставить("м", "m");
		СоответствиеСимволов.Вставить("н", "n");
		СоответствиеСимволов.Вставить("о", "o");
		СоответствиеСимволов.Вставить("п", "p");
		СоответствиеСимволов.Вставить("р", "r");
		СоответствиеСимволов.Вставить("с", "s");
		СоответствиеСимволов.Вставить("т", "t");
		СоответствиеСимволов.Вставить("у", "u");
		СоответствиеСимволов.Вставить("ф", "f");
		СоответствиеСимволов.Вставить("х", "kh");
		СоответствиеСимволов.Вставить("ц", "ts");
		СоответствиеСимволов.Вставить("ч", "ch");
		СоответствиеСимволов.Вставить("ш", "sh");
		СоответствиеСимволов.Вставить("щ", "shch");
		СоответствиеСимволов.Вставить("ъ", "");
		СоответствиеСимволов.Вставить("ы", "y");
		СоответствиеСимволов.Вставить("ь", "");
		СоответствиеСимволов.Вставить("э", "e");
		СоответствиеСимволов.Вставить("ю", "yu");
		СоответствиеСимволов.Вставить("я", "ya");
		
		ИсходныйТекст = СокрЛП(ТРег(ИсходныйТекст));
		ГотовоеЗначение = "";
		ТекущийСимвол = "";
		ТекущийГотовыйСимвол = "";
		Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
			ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
			ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
			Если ТекущийГотовыйСимвол = Неопределено Тогда
				ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
			Иначе
				ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
			КонецЕсли;
			
		КонецЦикла;
		Возврат ГотовоеЗначение;
	КонецФункции 
	
	
	#КонецОбласти
	
#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли