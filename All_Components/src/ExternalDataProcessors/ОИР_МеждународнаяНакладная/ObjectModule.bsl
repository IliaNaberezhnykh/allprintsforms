Перем КодЯзыка;

Функция СведенияОВнешнейОбработке() Экспорт
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг");          
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ОИР Международная накладная (CMR)");
	ПараметрыРегистрации.Вставить("Версия", "2.0");
	ПараметрыРегистрации.Вставить("Информация", " ");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "2.3.4.5");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	Команды = ТаблицаКоманд();
	ДобавитьКоманду(Команды, 
	"ОИР Международная товарно-транспортная накладная (CMR)",
	"CMR",
	"ВызовСерверногоМетода",
	Истина,
	"ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", Команды);
	Возврат ПараметрыРегистрации; 
	
КонецФункции

Функция ТаблицаКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина; 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "CMR") Тогда
		СтруктураПараметровПечати = Новый Структура;
		СтруктураПараметровПечати.Вставить("ВидДокументаПечати",  "РеализацияТоваровУслуг");
		СтруктураПараметровПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_CMR");
		СтруктураПараметровПечати.Вставить("ИмяМакетаПечати",     "CMR");
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"CMR", "Международная товарно-транспортная накладная (CMR)", 
		ПечатьCMR(МассивОбъектов, ОбъектыПечати, СтруктураПараметровПечати),,);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьCMR(МассивОбъектов, ОбъектыПечати, СтруктураПараметровПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_CMR";
	Если КодЯзыка = "ru" Тогда
		Макет = ПолучитьМакет("CMR");
	Иначе
		Макет = ПолучитьМакет("CMR2")
	КонецЕсли;
	//ЗапросИПеременные	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ТранспортнаяНакладная.Ссылка КАК ТТН
	|ИЗ
	|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТранспортнаяНакладнаяДокументыОснования.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|		ПО ТранспортнаяНакладнаяДокументыОснования.Ссылка = ТранспортнаяНакладная.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&Массив)
	|	И ТранспортнаяНакладнаяДокументыОснования.ДокументОснование В(&Массив)"; 
	
	Запрос.УстановитьПараметр("Массив", МассивОбъектов);
	Результат = Запрос.Выполнить().Выбрать(); 
	
	Пока Результат.Следующий() Цикл 
		Бебе = Результат.Ссылка;
		БебеТТН = Результат.ТТН;
		Если Бебе.Язык = Перечисления.Языки.Русский Тогда
			КодЯзыка = "ru"
		Иначе
			КодЯзыка = "en"
		КонецЕсли;
		//КонецЗапросИПеременные
		Если КодЯзыка = "ru" Тогда
			//АдресаНаРусском
			ТвойАдрис = "";
			Для Каждого Стр Из Бебе.Организация.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Фактический адрес" Тогда
					ТвойАдрис = Стр.Представление;
				КонецЕсли;
			КонецЦикла; 
			
			ТвойАдрисКонтрагент = "";
			Для Каждого Стр Из Бебе.Контрагент.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Фактический адрес" Тогда
					ТвойАдрисКонтрагент = Стр.Представление;
				КонецЕсли;
			КонецЦикла;
			
			ТвойАдрисПеревозчик = "";
			Для Каждого Стр Из БебеТТН.Перевозчик.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Фактический адрес" Тогда
					ТвойАдрисПеревозчик = Стр.Представление;
				КонецЕсли;
			КонецЦикла;
			//КонецАдресаНаРусском 
		Иначе
			//АдресаНаАнглийском
			ТвойАдрис = "";
			Для Каждого Стр Из Бебе.Организация.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес" Тогда
					ТвойАдрис = Стр.Представление;
				КонецЕсли;
			КонецЦикла; 
			
			ТвойАдрисКонтрагент = "";
			Для Каждого Стр Из Бебе.Контрагент.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес" Тогда
					ТвойАдрисКонтрагент = Стр.Представление;
				КонецЕсли;
			КонецЦикла;
			
			ТвойАдрисПеревозчик = "";
			Для Каждого Стр Из БебеТТН.Перевозчик.КонтактнаяИнформация Цикл
				Если Стр.Вид.Наименование = "Международный адрес" Тогда
					ТвойАдрисПеревозчик = Стр.Представление;
				КонецЕсли;
			КонецЦикла;
			//КонецАдресаНаАнглийском
		КонецЕсли;
		Если КодЯзыка = "ru" Тогда
			//ЗаполняемПФ 
			//Русский
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ПечОрганизация = Бебе.Организация;
			ОбластьШапка.Параметры.ПечОрганизацияАдрес = ТвойАдрис;
			ОбластьШапка.Параметры.ПечОрганизацияСтрана = Бебе.Организация.СтранаРегистрации;
			ОбластьШапка.Параметры.ПечПолучатель = Бебе.Контрагент;
			ОбластьШапка.Параметры.ПечПолучательАдрес = ТвойАдрисКонтрагент;
			ОбластьШапка.Параметры.ПечПолучательСтрана = Бебе.Контрагент.СтранаРегистрации;
			ОбластьШапка.Параметры.ПечПеревозчик  = БебеТТН.Перевозчик;
			ОбластьШапка.Параметры.ПечПеревозчикАдрес  = ТвойАдрисПеревозчик;
			ОбластьШапка.Параметры.ПечПеревозчикСтрана  = БебеТТН.Перевозчик.СтранаРегистрации;
			ОбластьШапка.Параметры.ПечПолучательАдресДоставки = БебеТТН.АдресДоставки;
			ОбластьШапка.Параметры.ПечПолучательСтранаДоставки  = "РОССИЯ";
			ОбластьШапка.Параметры.ПечОрганизацияАдресПогрузки  = БебеТТН.АдресПогрузки;
			ОбластьШапка.Параметры.ДатаДокумента = Формат(Бебе.Дата, "ДФ=dd.MM.yyyy");
			ОбластьШапка.Параметры.НомерДокументаСертификатКачества   = "???";
			ОбластьШапка.Параметры.НомерДокументаТорг     = "???";
			ОбластьШапка.Параметры.НомерСЧФ        = "???";
			ТабДокумент.Вывести(ОбластьШапка);
			//ЗапросИПеременныеТовары		
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	РеализацияТоваровУслугТовары.Количество КАК Количество,
			|	РеализацияТоваровУслугТовары.Упаковка.Наименование КАК УпаковкаНаименование,
			|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка В(&Массив)";
			
			Запрос.УстановитьПараметр("Массив", МассивОбъектов);
			Джига = Запрос.Выполнить().Выбрать();
			Пока Джига.Следующий() Цикл 
				//КонецЗапросИПеременныеТовары
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьСтрока.Параметры.ЗнакиИНомера = " ";
				ОбластьСтрока.Параметры.КолМест            = ОкрВверх(Джига.Количество);  
				Если ПустаяСтрока(Джига.УпаковкаНаименование) Тогда
					ОбластьСтрока.Параметры.РодУпаковки = Джига.НоменклатураЕдиницаИзмерения;
				Иначе
					ОбластьСтрока.Параметры.РодУпаковки = Джига.УпаковкаНаименование;
				КонецЕсли;
				ОбластьСтрока.Параметры.ТоварНаименование  = Джига.Номенклатура;
				ОбластьСтрока.Параметры.КодТНВЭД           = " ";
				ОбластьСтрока.Параметры.ВесБрутто          = Джига.Количество * 1000;
				ОбластьСтрока.Параметры.Объем              = " ";
				ТабДокумент.Вывести(ОбластьСтрока);      
			КонецЦикла;
			
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Договор            = Бебе.Договор;
			ОбластьПодвал.Параметры.СтоимостьГруза     = Бебе.СуммаДокумента;
			ОбластьПодвал.Параметры.НаселенныйПунктМестоПогрузки = "г. Воронеж";
			ОбластьПодвал.Параметры.ДатаНачалаРейса                    = Формат(БебеТТН.Дата, "ДФ=dd.MM.yyyy");
			ОбластьПодвал.Параметры.ПутевойЛист                        = " ";
			ОбластьПодвал.Параметры.Водитель                           = БебеТТН.Водитель;
			ОбластьПодвал.Параметры.АвтомобильПрицеп                   = БебеТТН.АвтомобильГосударственныйНомер + " / " + БебеТТН.ГосударственныйНомерПрицепа;
			ОбластьПодвал.Параметры.МаркаТягачПолуприцеп               = БебеТТН.АвтомобильМарка;
			ТабДокумент.Вывести(ОбластьПодвал); 
		Иначе
			//Инглиш
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ПечОрганизация = Бебе.Организация.НаименованиеМеждународное;
			ОбластьШапка.Параметры.ПечОрганизацияАдрес = ТвойАдрис;
			ОбластьШапка.Параметры.ПечОрганизацияСтрана = Бебе.Организация.СтранаРегистрации.МеждународноеНаименование;
			ОбластьШапка.Параметры.ПечПолучатель = Бебе.Контрагент.НаименованиеМеждународное;
			ОбластьШапка.Параметры.ПечПолучательАдрес = ТвойАдрисКонтрагент;
			ОбластьШапка.Параметры.ПечПолучательСтрана = Бебе.Контрагент.СтранаРегистрации.МеждународноеНаименование;
			ОбластьШапка.Параметры.ПечПеревозчик  = БебеТТН.Перевозчик.НаименованиеМеждународное;
			ОбластьШапка.Параметры.ПечПеревозчикАдрес  = ТвойАдрисПеревозчик;
			ОбластьШапка.Параметры.ПечПеревозчикСтрана  = БебеТТН.Перевозчик.СтранаРегистрации.МеждународноеНаименование;
			ОбластьШапка.Параметры.ПечПолучательАдресДоставки = Бебе.АдресДоставкиИностранный;
			ОбластьШапка.Параметры.ПечПолучательСтранаДоставки  = "The Russian Federation";
			ОбластьШапка.Параметры.ПечОрганизацияАдресПогрузки  = ТвойАдрис;
			ОбластьШапка.Параметры.ДатаДокумента = Формат(Бебе.Дата, "ДФ=dd.MM.yyyy");
			ОбластьШапка.Параметры.НомерДокументаСертификатКачества   = "???";
			ОбластьШапка.Параметры.НомерДокументаТорг     = "???";
			ОбластьШапка.Параметры.НомерСЧФ        = "???";
			ТабДокумент.Вывести(ОбластьШапка);
			//ЗапросИПеременныеТовары		
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	РеализацияТоваровУслугТовары.Количество КАК Количество,
			|	РеализацияТоваровУслугТовары.Упаковка.Наименование КАК УпаковкаНаименование,
			|	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка В(&Массив)";
			
			Запрос.УстановитьПараметр("Массив", МассивОбъектов);
			Джига = Запрос.Выполнить().Выбрать();
			Пока Джига.Следующий() Цикл 
				//КонецЗапросИПеременныеТовары
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьСтрока.Параметры.ЗнакиИНомера = " ";
				ОбластьСтрока.Параметры.КолМест            = ОкрВверх(Джига.Количество);  
				Если ПустаяСтрока(Джига.УпаковкаНаименование) Тогда
					ОбластьСтрока.Параметры.РодУпаковки = Джига.НоменклатураЕдиницаИзмерения.НаименованиеЯзык1;
				Иначе
					ОбластьСтрока.Параметры.РодУпаковки = Джига.УпаковкаНаименование.НаименованиеЯзык1;
				КонецЕсли;
				ОбластьСтрока.Параметры.ТоварНаименование  = Джига.Номенклатура.НаименованиеЯзык1;
				ОбластьСтрока.Параметры.КодТНВЭД           = " ";
				ОбластьСтрока.Параметры.ВесБрутто          = Джига.Количество * 1000;
				ОбластьСтрока.Параметры.Объем              = " ";
				ТабДокумент.Вывести(ОбластьСтрока);      
			КонецЦикла;
			
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Договор            = Бебе.Договор.НаименованиеИностранное;
			ОбластьПодвал.Параметры.СтоимостьГруза     = Бебе.СуммаДокумента;
			ОбластьПодвал.Параметры.НаселенныйПунктМестоПогрузки = "Voronezh City";
			ОбластьПодвал.Параметры.ДатаНачалаРейса                    = Формат(БебеТТН.Дата, "ДФ=dd.MM.yyyy");
			ОбластьПодвал.Параметры.ПутевойЛист                        = " ";
			ОбластьПодвал.Параметры.Водитель                           = ПолучитьСтрокуНаЛатинском(Строка(БебеТТН.Водитель));
			ОбластьПодвал.Параметры.АвтомобильПрицеп                   = БебеТТН.АвтомобильГосударственныйНомер + " / " + БебеТТН.ГосударственныйНомерПрицепа;
			ОбластьПодвал.Параметры.МаркаТягачПолуприцеп               = БебеТТН.АвтомобильМарка;
			ТабДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;	
	
	Возврат ТабДокумент;
	//КонецЗаполняемПФ	 
	
КонецФункции   

Функция ОкрВверх(ИсходноеЧисло)
	
	Если Цел(ИсходноеЧисло) = ИсходноеЧисло Тогда
		Возврат ИсходноеЧисло;
	Иначе
		Возврат Цел(ИсходноеЧисло) + 1;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСтрокуНаЛатинском(ИсходныйТекст)
	СоответствиеСимволов = Новый Соответствие;
	СоответствиеСимволов.Вставить("А", "A");
	СоответствиеСимволов.Вставить("Б", "B");
	СоответствиеСимволов.Вставить("В", "V");
	СоответствиеСимволов.Вставить("Г", "G");
	СоответствиеСимволов.Вставить("Д", "D");
	СоответствиеСимволов.Вставить("Е", "E");
	СоответствиеСимволов.Вставить("Ё", "E");
	СоответствиеСимволов.Вставить("Ж", "Zh");
	СоответствиеСимволов.Вставить("З", "Z");
	СоответствиеСимволов.Вставить("И", "I");
	СоответствиеСимволов.Вставить("Й", "Y");
	СоответствиеСимволов.Вставить("К", "K");
	СоответствиеСимволов.Вставить("Л", "L");
	СоответствиеСимволов.Вставить("М", "M");
	СоответствиеСимволов.Вставить("Н", "N");
	СоответствиеСимволов.Вставить("О", "O");
	СоответствиеСимволов.Вставить("П", "P");
	СоответствиеСимволов.Вставить("Р", "R");
	СоответствиеСимволов.Вставить("С", "S");
	СоответствиеСимволов.Вставить("Т", "T");
	СоответствиеСимволов.Вставить("У", "U");
	СоответствиеСимволов.Вставить("Ф", "F");
	СоответствиеСимволов.Вставить("Х", "Kh");
	СоответствиеСимволов.Вставить("Ц", "Ts");
	СоответствиеСимволов.Вставить("Ч", "Ch");
	СоответствиеСимволов.Вставить("Ш", "Sh");
	СоответствиеСимволов.Вставить("Щ", "Shch");
	СоответствиеСимволов.Вставить("Ъ", "");
	СоответствиеСимволов.Вставить("Ы", "Y");
	СоответствиеСимволов.Вставить("Ь", "");
	СоответствиеСимволов.Вставить("Э", "E");
	СоответствиеСимволов.Вставить("Ю", "Yu");
	СоответствиеСимволов.Вставить("Я", "Ya");
	СоответствиеСимволов.Вставить("а", "a");
	СоответствиеСимволов.Вставить("б", "b");
	СоответствиеСимволов.Вставить("в", "v");
	СоответствиеСимволов.Вставить("г", "g");
	СоответствиеСимволов.Вставить("д", "d");
	СоответствиеСимволов.Вставить("е", "e");
	СоответствиеСимволов.Вставить("ё", "e");
	СоответствиеСимволов.Вставить("ж", "zh");
	СоответствиеСимволов.Вставить("з", "z");
	СоответствиеСимволов.Вставить("и", "i");
	СоответствиеСимволов.Вставить("й", "y");
	СоответствиеСимволов.Вставить("к", "k");
	СоответствиеСимволов.Вставить("л", "l");
	СоответствиеСимволов.Вставить("м", "m");
	СоответствиеСимволов.Вставить("н", "n");
	СоответствиеСимволов.Вставить("о", "o");
	СоответствиеСимволов.Вставить("п", "p");
	СоответствиеСимволов.Вставить("р", "r");
	СоответствиеСимволов.Вставить("с", "s");
	СоответствиеСимволов.Вставить("т", "t");
	СоответствиеСимволов.Вставить("у", "u");
	СоответствиеСимволов.Вставить("ф", "f");
	СоответствиеСимволов.Вставить("х", "kh");
	СоответствиеСимволов.Вставить("ц", "ts");
	СоответствиеСимволов.Вставить("ч", "ch");
	СоответствиеСимволов.Вставить("ш", "sh");
	СоответствиеСимволов.Вставить("щ", "shch");
	СоответствиеСимволов.Вставить("ъ", "");
	СоответствиеСимволов.Вставить("ы", "y");
	СоответствиеСимволов.Вставить("ь", "");
	СоответствиеСимволов.Вставить("э", "e");
	СоответствиеСимволов.Вставить("ю", "yu");
	СоответствиеСимволов.Вставить("я", "ya");
	
	ИсходныйТекст = СокрЛП(ТРег(ИсходныйТекст));
	ГотовоеЗначение = "";
	ТекущийСимвол = "";
	ТекущийГотовыйСимвол = "";
	Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
		ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
		ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
		Если ТекущийГотовыйСимвол = Неопределено Тогда
			ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
		Иначе
			ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
		КонецЕсли;
		
	КонецЦикла;
	Возврат ГотовоеЗначение;
КонецФункции 




